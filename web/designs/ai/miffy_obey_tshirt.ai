%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8.0.1
%%For: (miffy ) (obeymiffy.com)
%%Title: (miffy_obey_tshirt.ai)
%%CreationDate: (8/13/2001) (1:03 AM)
%%BoundingBox: 136 46 513 689
%%HiResBoundingBox: 136.4688 46.5283 512.7324 688.4717
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Kidprint
%%DocumentNeededFonts: Kidprint
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 426 300 426 300
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -133.1152 782.0205 0.9339 919 764 18 0 1 112 74 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 76 128 8
%%BeginData: 13672 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD23F8FD05FFFD23F8A8F898FD1FC074F8FD05FFF874FD1FC098F8
%A8F898FD1FC04AF8FD05FFF84AFD1FC098F8A8F898C0C0C0BAC0C0C0BAC0
%C0C0BA6E4AC0BAC0C0C0BAC0C0C0BAC0C0C0BAC0C0C074F8FD05FFF874C0
%C0C0BAC0C0C0BAC0C0C0BAC0C0F8BA4AC04A98C0C0C0BAC0C0C0BAC0C0C0
%98F8A8F898FD0CC07A209EFD10C04AF8FD05FFF84AFD10C026202620FD0B
%C098F8A8F898FD09C074F826202620502026F8746E50FD09C074F8FD05FF
%F874FD09C026F8F8F8744A7AF850F8266E744AFD08C098F8A8F898FD09C0
%20C0204AC0C020F82074F8264AFD09C04AF8FD05FFF84AFD09C0F8C0F8C0
%204A6E4A6E4AC02620FD09C098F87DF898C0BAC0C0C0BAC0C0C0202026F8
%20F8C0F84A6E74F8BAC0C0C0BAC0C0C0BAC074F8FD05FFF874C0BAC0C0C0
%BAC0C0C020C026C020F8C020BAF8C02026C0C0C0BAC0C0C0BAC098F8A8F8
%98FD0AC07AFD05C09E20C04A74FD0AC04AF8FD05FFF84AFD09C06EC07AC0
%6E74C050C07AC0266EFD09C098F8A8F898FD13C026FD0BC074F8FD05FFF8
%74FD14C020FD0AC098F8A8F898FD1FC04AF8FD05FFF84AFD1FC098F8A8F8
%98C0C0C0BAC0C0C0BAC0C0C0BAC0C0C0BAC0C0C0BAC0C0C0BAC0C0C0BAC0
%C0C074F8FD05FFF874C0C0C0BAC0C0C0BAC0C0C0BAC0C0C0BAC0C0C0BAC0
%C0C0BAC0C0C0BAC0C0C098F8A8F8A8FD1FFF52F8FD05FFF852FD1FFFA8F8
%A8F8A8FD0AFF525252FD07FF7D7DA8FD08FF7DF8FD05FFF87DFD08FF7D7D
%7DFD07FF527D52FD0AFFA8F8A8F8A8FD09FF27FFFFFF7DFD04FFA827A8FF
%7DFD08FF52F8FD05FFF852FD07FFA87DFFFF52FD05FF7DFFFFFF27FD09FF
%A8F87DF8A8FD08FF52FD04FFA8A8FFFFFF27FFFFFFA87DFD07FF7DF8FD05
%FFF87DFD07FF7DFD04FF27FFFFFF52FD04FFA87DFD08FFA8F8A8F8A8FD08
%FFA8FD05FF7DFFFF7DFD05FF52FD07FF52F8FD05FFF852FD07FF7DFD04FF
%A87DFFFF7DFD05FF7DFD08FFA8F8A8F8A8FD07FFA8A8FD05FF7DFFFF52FD
%05FFA8A8FD06FF7DF8FD05FFF87DFD06FF7DFD06FF7DFFA8A8FD05FF7DFD
%08FFA8F8A8F8A8FD07FF52FD06FFA87DFF7DFD05FFA8A8FD06FF52F8FD05
%FFF852FD06FF7DFD06FF52FF52FD07FF7DFD07FFA8F8A8F8A8FD07FF7DFD
%07FF7D7DA8FD06FF7DFD06FF7DF8FD05FFF87DFD06FF52FD06FFA8A852FD
%07FF52FD07FFA8F8A8F8A8FD07FF52FD07FF52A8FD07FF7DFD06FF52F8FD
%05FFF852FD06FFA8FD06FFA8A852FD07FF52FD07FFA8F8A8F8A8FD07FF7D
%FD07FF7D52FD07FF7DFD06FF7DF8FD05FFF87DFD06FF52FD07FF7D52FD07
%FF7DFD07FFA8F8A8F8A8FD07FF7DFD07FF7D7DFD06FFA8A8FD06FF52F8FD
%05FFF852FD06FF7DFD07FFA852FD07FF7DFD07FFA8F87DF8A8FD07FF7DFD
%07FFA852FD06FF7DA8FD06FF7DF8FD05FFF87DFD06FFA8A8FD06FF7D52FD
%06FFA8A8FD07FFA8F8A8F8A8FD07FFA8FD07FF527DFD06FF52FD07FF52F8
%FD05FFF852FD07FF52FD06FFA852FD06FFA8FD08FFA8F8A8F8A8FD08FF7D
%FD06FF5227FD05FFA8A8FD07FF7DF8FD05FFF87DFD07FF7DA8FD05FF277D
%FD06FF52FD08FFA8F8A8F8A8FD08FF7DFD06FFA8FD06FF7DFD08FF52F8FD
%05FFF852FD07FFA87DFD05FFA8A8FD06FF7DFD08FFA8F8A8F8A8FD08FF27
%FD0DFF27FD08FF7DF8FD05FFF87DFD08FF27FD0CFFA852FD08FFA8F8A8F8
%A8FD07FF7D7DFD0DFFA852FD07FF52F8FD05FFF852FD07FF52FD0EFF7DA8
%FD07FFA8F8A8F8A8FD06FFA87DFD0FFFA87DFD06FF7DF8FD05FFF87DFD06
%FF52FD10FF7DA8FD06FFA8F8A8F8A8FD06FF7DFD11FF7DA8FD05FF52F8FD
%05FFF852FD05FF7DFD12FF52FD06FFA8F87DF8A8FD05FF7DA8FD12FF7DFD
%05FF7DF8FD05FFF87DFD05FF7DFD12FF7D7DFD05FFA8F8A8F8A8FD05FF52
%FD13FF7DFD05FF52F8FD05FFF852FD04FFA8A8FD13FF52FD05FFA8F8A8F8
%A8FD04FFA87DFD14FF7DFD04FF7DF8FD05FFF87DFD04FF52FD14FF7DFD05
%FFA8F8A8F8A8FD04FFA8A8FD14FF7DFD04FF52F8FD05FFF852FD04FF7DFD
%14FFA8FD05FFA8F8A8F8A8FD04FF7DFD15FF52FD04FF7DF8FD05FFF87DFD
%04FF7DFD14FFA87DFD04FFA8F8A8F8A8FD04FF7DFD15FF7DFD04FF52F8FD
%05FFF852FD04FFA8FD14FFA8A8FD04FFA8F8A8F8A8FD04FF7DFD04FF7DA8
%FD09FFA8FD05FF52FD04FF7DF8FD05FFF87DFD04FF52FD04FFA8FD0AFF7D
%7DFFFFFFA87DFD04FFA8F8A8F8A8FD04FFA8A8FFFFFFA8A8FD09FFA8F8FF
%FFFFA87DFD04FF52F8FD05FFF852FD04FF7DFD04FFF8FD0AFFA8A8FFFFFF
%7DFD05FFA8F87DF8A8FD05FF52FD13FF7DA8FD04FF7DF8FD05FFF87DFD04
%FFA87DFD13FF52FD05FFA8F8A8F8A8FD05FF52FD12FFA87DFD05FF52F8FD
%05FFF852FD05FF52FD12FF7D7DFD05FFA8F8A8F8A8FD06FFF8A8FD06FF27
%5227FD07FF27FD06FF7DF8FD05FFF87DFD06FF27FD07FFF82752FD06FF7D
%27FD06FFA8F8A8F8A8FD05FF7D274AA1FD05FF7D527DFD06FF27FD07FF52
%F8FD05FFF852FD06FFA827FD06FF7D7DA8FD04FFA87B4A4B7DFD05FFA8F8
%A8F8A8FD04FFA84A98BAC09E75FD0AFFA774747CFD06FF7DF8FD05FFF87D
%FD06FF269E98A0FD09FFA86EC0C0BA9826A8FD04FFA8F8A8F8A8FFFFFFA8
%524BFD06C09F75C9A8A8A7A174C1C0C0C09E52FD05FF52F8FD05FFF852FD
%05FF279EFD04C074A07CC97CA175C1FD06C07652A8FFFFFFA8F8A8F8A8FF
%FFA8A8FFA89EFD0BC0747C6EC0C0C06E7D52FD04FF7DF8FD05FFF87DFD04
%FF27A898C0C0C04A7C6E989EFD09C098FFFF7DA8FFFFA8F8A8F8A8FFFFA8
%FFFFFF9FFD07C07C7DA8A8A8F876C0C0987CFF7DFD04FF52F8FD05FFF852
%FFFFFFA87DFF52C0C0C07DF8A8FFFF2775FD07C07CFFFFFFA8FFFFA8F87D
%F8A8FFFF52FFFFFF7DC0C0BAC0C0C0BA4BF827FF27274BBAC0C098A8F8FD
%04FF7DF8FD05FFF87DFD04FF52A798C0C0BA522727A8F8F851BAC0C0C0BA
%C0C0A8FFFFFF7DFFFFA8F8A8F8A8FFFFA87DFFFFFF74FD06C0A027527D27
%7DA8FD04C06E7DFD04FF52F8FD05FFF852FD04FF5298C0C0C098FF7D2752
%52529FFD06C051FFFFFF52A8FFFFA8F8A8F8A8FFFF269F7C7C4A7498FD05
%C051FF7D52527DA89EFD04C026FD04FF7DF8FD05FFF87DFD04FF4AFD04C0
%74A87D525252FF74FD05C06E98747C75C052FFFFA8F8A8F8A8FFFF52FD0B
%C074FFFD0452A874FD04C051FD04FF52F8FD05FFF852FD04FF75FD04C075
%A8527D277DFF9EFD0AC0987DFFFFA8F8A8F8A8FFFF5275C0C0C0BAC0C0C0
%BAC0C0747DA87D7D52F89FC0BAC07452FD04FF7DF8FD05FFF87DFD04FF27
%98C0BAC052F8527DA8A85274C0C0BAC0C0C0BAC0C0987C52FFFFA8F8A8F8
%A8FFA87DFFA89EFD08C09E52F87D7D277D74C0C09FA8A8A8FFFFFF52F8FD
%05FFF852FFFFFF7DA8FF9FC0C0747C277D522752FD09C075CFFF7DA8FFA8
%F8A8F8A8FF7DA8FFFFFF75FD07C0987C4B765198C0C0987DA8FFFF7DFFFF
%FF7DF8FD05FFF87DFFFFFF7DFFFFA87D74C0C09E519F267CFD07C09876FF
%FFFF7DA8FFA8F8A8F8A8FFA87DA8FFFFFFA87C98FD0AC09E52FD05FF52FF
%FFFF52F8FD05FFF852FFFFFF52FD05FF5298FD0AC074A1FD04FF7D52FFFF
%A8F87DF8A8FFFFFF52A8FFFFFF7D52267574BAC0C098984A4B7DFD05FF52
%FD04FF7DF8FD05FFF87DFD04FF52FD05FF7D274A74749874987475517DA8
%FFFFFF7D7DFFFFFFA8F8A8F8A8FD04FF7D7DFFFF7DFD04FF7D7D527DA8FF
%FF7DFFFFFF7D7DFD05FF52F8FD05FFF852FD05FF7D7DFFFFFF7DFFFFFD05
%A8FFFFFFA8A8FFFF52A8FD04FFA8F8A8F8A8FD05FFA852A852FD0BFFA87D
%527DA8FD06FF7DF8FD05FFF87DFD06FFA852527DA8FD0BFF527D52FD06FF
%A8F8A8F8A8FD1FFF52F8FD05FFF852FD1FFFA8F8A8F8A8FD1FFF7DF8FD05
%FFF87DFD1FFFA8F8A8FD23F8FD05FFFD23F8A8FD23F8FD05FFFD23F8A8FD
%FCFFFD34FFA87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8FD05FFA87DA8A8A87DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8FFFD23F8FD05FFFD23F8A8F8
%588389838983898389838983898389838983898389838983898389838983
%89832DF8FD05FFF82D838983898389838983898389838983898389838983
%8983898389838983898358F8A8F858838283828382838283828382838283
%8283828382838283828382838283828351F8FD05FFF85183828382838283
%82838283828382838283828382838283828382838283828358F8A8F85883
%898389838983898389838983048389838983898389838983898389838983
%2DF8FD05FFF82D8389838983898389838983898389277D52835833838983
%898389838983898358F87DF858835E8382835E8382835E83822DF8048283
%528382835E8382835E8382835E8352F8FD05FFF852835E8382835E838283
%5E2D82835E2D82F827F827835E8382835E8382835E8358F8A8F858838983
%8983898389832D27045204522D2D042752832D8389838983898389832DF8
%FD05FFF82D838983898389838983F827F8272D5233FD042783337D898389
%838983898358F8A8F858838283828382838283042D2704822D27F8042727
%F87C83828382838283828352F8FD05FFF852838283828382838283278327
%8327047C047C0482F8272D828382838283828358F8A8F858838983898389
%83898304270427F8272D272D832D27898389838983898389832DF8FD05FF
%F82D8389838983898389830483F8830427892789278958F8838983898389
%83898358F8A8F8588382835E8382835E83822D5E2D82835E2D272D272782
%835E8382835E83828351F8FD05FFF8518382835E8382835E8382835E837C
%045E27822D5EF87C835E8382835E83828358F8A8F8588389838983898389
%83898389838983898389830483898389838983898389832DF8FD05FFF82D
%838983898389838983898389838983898389835852898389838983898389
%8358F8A8F858838283828382838283828382838283828382838283828382
%8382838283828351F8FD05FFF85183828382838283828382838283828382
%83828382838283828382838283828358F8A8F85883898389838983898389
%8389838983898389838983898389838983898389832DF8FD05FFF82D8389
%838983898389838983898389838983898389838983898389838983898358
%F87DF8A8FD1FFF7DF8FD05FFF87DFD1FFFA8F8A8F8A8FD0AFFA87DA8FD07
%FF7D52FD09FF52F8FD05FFF852FD08FFA8527DFD07FFA87D7DFD0AFFA8F8
%A8F8A8FD09FF52A8FFFFA8FD04FFA852A8FF27FD08FF7DF8FD05FFF87DFD
%08FF7DFFA852A8FD04FFA8FFFFA852FD09FFA8F8A8F8A8FD08FFA8FD04FF
%A8A8FFFFFF52FD04FF7DFD07FF52F8FD05FFF852FD07FF52FD04FF52FFFF
%FFA8FD05FF7DFD08FFA8F8A8F8A8FD08FF7DFD05FF52FFFF7DA8FD04FF7D
%FD07FF7DF8FD05FFF87DFD07FF7DFD04FF7D7DFFFF52FD05FF52FD08FFA8
%F8A8F8A8FD07FFA8FD06FF7DFFFF52FD05FF7DFD07FF52F8FD05FFF852FD
%06FFA8A8FD05FF52FFA8FD06FFA8A8FD07FFA8F8A8F8A8FD07FF7DFD06FF
%A8A8FF7DFD06FF7DFD06FF7DF8FD05FFF87DFD06FF52FD06FF7DFF7DFD07
%FF7DFD07FFA8F8A8F8A8FD07FF7DFD07FF7DA8A8FD06FFA8FD06FF52F8FD
%05FFF852FD06FFA8FD06FFA8FF52FD07FF52FD07FFA8F87DF8A8FD07FF52
%FD07FF7D7DFD07FF52FD06FF7DF8FD05FFF87DFD06FF52FD06FFA87D52FD
%07FF7DFD07FFA8F8A8F8A8FD07FF7DFD07FF7D7DFD07FF7DFD06FF52F8FD
%05FFF852FD06FF7DFD07FFA852FD07FF52FD07FFA8F8A8F8A8FD07FFA8FD
%07FFA852FD06FFA87DFD06FF7DF8FD05FFF87DFD06FF7DFD07FF7D52FD07
%FF7DFD07FFA8F8A8F8A8FD07FF7DFD07FF527DFD06FF7DFD07FF52F8FD05
%FFF852FD07FF7DFD06FFA852FD07FF7DFD07FFA8F8A8F8A8FD07FFA8A8FD
%06FF5252FD06FF7DFD07FF7DF8FD05FFF87DFD07FF7DFD06FF7D7DFD06FF
%7DFD08FFA8F8A8F8A8FD08FF7DFD06FF5252FD06FFA8FD07FF52F8FD05FF
%F852FD07FF7DFD06FF5227FD06FF7DFD08FFA8F8A8F8A8FD08FF27FD05FF
%A8A8A8FD05FF52FD08FF7DF8FD05FFF87DFD08FF52FD05FFA8A8FD06FF52
%FD08FFA8F8A8F8A8FD08FF52A8FD0CFFA8FD08FF52F8FD05FFF852FD08FF
%52FD0CFFA87DFD08FFA8F87DF8A8FD07FF7D52FD0DFFA852FD07FF7DF8FD
%05FFF87DFD06FFA852A8FD0DFF52A8FD07FFA8F8A8F8A8FD07FF7DFD0FFF
%A87DFD06FF52F8FD05FFF852FD06FF7DFD10FF7DFD07FFA8F8A8F8A8FD06
%FF27FD11FF7DA8FD05FF7DF8FD05FFF87DFD05FF7DA8FD11FF52FD06FFA8
%F8A8F8A8FD05FF7DFD13FF52FD05FF52F8FD05FFF852FD05FF52FD13FF7D
%FD05FFA8F8A8F8A8FD05FF7DFD13FF7DA8FD04FF7DF8FD05FFF87DFD04FF
%7DA8FD13FF7DFD05FFA8F8A8F8A8FD05FF7DFD13FFA87DFD04FF52F8FD05
%FFF852FD04FFA8FD14FF52FD05FFA8F8A8F8A8FD04FF7DFD15FF52FD04FF
%7DF8FD05FFF87DFD04FF52FD14FFA8A8FD04FFA8F8A8F8A8FD04FF7DFD15
%FF7DFD04FF52F8FD05FFF852FD04FF7DFD14FFA8A8FD04FFA8F87DF8A8FD
%04FF52FD15FF27FD04FF7DF8FD05FFF87DFD04FF52FD14FFA87DFD04FFA8
%F8A8F8A8FD04FFA8FD04FF52A8FD0AFFA8FD04FFA8FD04FF52F8FD05FFF8
%52FD04FF7DFD04FF7DFD0AFF7D52FFFFFFA8A8FD04FFA8F8A8F8A8FD04FF
%A8A8FD04FFA8FD09FFA827FFFFFFA87DFD04FF7DF8FD05FFF87DFD04FF52
%FFFFFFA827FD0AFFA8FD04FF7DFD05FFA8F8A8F8A8FD05FF52FD13FF52FD
%05FF52F8FD05FFF852FD05FF52FD13FF52FD05FFA8F8A8F8A8FD05FF7D7D
%FD11FFA8A8FD05FF7DF8FD05FFF87DFD05FF7DA8FD09FFA8FD07FF52A8FD
%05FFA8F8A8F8A8FD06FF7DA8FD06FF522752FD07FF7DFD06FF52F8FD05FF
%F852FD06FF52FD07FF27F852FD06FF7D7DFD06FFA8F8A8F8A8FD05FF7DF8
%5152FD05FF527D52FD05FFA827A8FD06FF7DF8FD05FFF87DFD06FFA827A8
%FD05FF7DA8A8FD05FF5258F87DFD05FFA8F8A8F8A8FD05FF278389835E83
%A8FD09FF7D835852FD06FF52F8FD05FFF852FD05FFA87C82837DFD09FF7D
%838283898326FD05FFA8F87DF8A8FFFFFFA8277C8382835E8382585852A8
%7DA85258585E83825852FD05FF7DF8FD05FFF87DFD04FFA8275E82835E58
%58587D527D52585882835E8382835227A8FFFFFFA8F8A8F8A8FFFFFFA8FF
%A889898389838983898389835E8352838983897D7D7DFD04FF52F8FD05FF
%F852FD04FF52A8838383897D52835E7D89838983898389838983FFFF7DA8
%FFFFA8F8A8F8A8FFFF52FFFFFF5282838283828382047DA8FF7DF8528283
%8352FF52FD04FF7DF8FD05FFF87DFFFFFFA87DFF278283822DF87DFFA852
%528283828382838252FFFFFF7DFFFFA8F8A8F8A8FFFF7DFFFFFFA8828389
%838983897DF852A827F87D898389A8A852FD04FF52F8FD05FFF852FFFFFF
%A87D7D838983897D2752A852F87D8983898389835EFFFFFFA8A8FFFFA8F8
%A8F8A8FFFF7D7DFFFFA8518382835E83825252F87DF87D7D82835E835852
%FD04FF7DF8FD05FFF87DFD04FF2782835E8382A87DF87DF87D2782835E83
%828352A8FFFF52A8FFFFA8F8A8F8A8FFFF525E8358582D7C89838983897D
%FFA8277D7DFF5E8389838952FD04FF52F8FD05FFF852FD04FF5889838983
%58FF527D527DFF7D898389838258587C58835E7DFFFFA8F8A8F8A8FFFF52
%83838283828382838283822DFF277D277D52588382838204FD04FF7DF8FD
%05FFF87DFD04FF26828382837C5252272727FF5882838283828382838283
%5E52FFFFA8F8A8F8A8FFFF7D58838983898389838983897D7DFF7DA85227
%52838983517DFD04FF52F8FD05FFF852FD04FF525183898327F852A8A8FF
%527D898389838983898389A8527DFFFFA8F87DF8A8FFA852FF7D5E838283
%5E8382835E5852F8525227273383822DA852A8FFFFFF7DF8FD05FFF87DFF
%FFFFA8A8FF2D82833327525227F852835E8382835E8382837DA8FF52A8FF
%A8F8A8F8A8FF7DFD04FFA78283898389838983527D52835E8389AE52FFFF
%FF52FFFFFF52F8FD05FFF852FFFFFF7DFFFFFF528389838383587D528389
%8389838983587DFFFFFFA8A8FFA8F8A8F8A8FFFF27A8FD04FF525E838283
%82838283828382587DA8FFFFFFA87DFFFFFF7DF8FD05FFF87DFFFFFF7DFD
%04FFA87D2D838382838283828382835858FD04FF7D7DFFFFA8F8A8F8A8FF
%FFFF52FD04FFA85258528282835E825152F8A8FD04FFA87DFD04FF52F8FD
%05FFF852FD04FF7DA8FD04FFA827522D82588258582D7D7DFD04FF7D7DFF
%FFFFA8F8A8F8A8FD04FF7D7DFFFF7DFD04FFA87DA87DA8FFFF52FFFFFF52
%7DFD05FF7DF8FD05FFF87DFD05FF7D52FFFFFF52FFFFFF7DA87DFD05FF7D
%FFFF7DA8FD04FFA8F8A8F8A8FD05FFA87D52FD0DFF7D7D52FD07FF52F8FD
%05FFF852FD07FF52A852FD0CFF7D7DA8FD06FFA8F8A8F8A8FD1FFF7DF8FD
%05FFF87DFD1FFFA8F8A8F8A8FD1FFF52F8FD05FFF852FD1FFFA8F87DFD23
%F8FD05FFFD23F8A8
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Kidprint
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Kidprint Kidprint
[/_Kidprint/Kidprint 0 0 0 TZ%AI3_EndEncoding TrueType
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u1 Ap
0 O
0 0 0 1 k
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
310.9219 382.2393 m
136.4688 382.2393 L
136.4688 688.4717 L
310.9219 688.4717 L
310.9219 382.2393 L
f0 0 0 0 1 1 1 Xa
304.1514 389.269 m
143.2393 389.269 L
143.2393 627.3008 L
304.1514 627.3008 L
304.1514 389.269 L
fuu0 Ap
0 0 0 1 0 0 0 Xa
192.0278 411.8726 m
192.25 405.1611 189.3545 398.5044 184.1743 398.5044 c
178.9937 398.5044 177.1338 400.6465 174.6494 402.3477 c
166.6133 407.8491 161.8159 412.2949 155.0986 418.8911 C
155.0073 426.1274 158.8574 426.7178 160.6133 431.4233 C
160.5464 432.3389 158.4971 435.3813 158.1064 437.439 c
157.5762 440.231 160.5708 442.9868 161.1143 444.9585 c
161.7612 447.3032 160.0103 448.6064 159.6104 449.9717 c
158.5684 453.5264 159.3525 458.5332 160.6133 460.499 c
161.8735 462.4639 171.1401 468.0186 y
172.2231 470.1836 170.9253 471.208 172.6445 472.5303 c
175.2686 474.5479 179.9146 475.2188 181.1665 478.5459 C
166.3232 488.2207 168.2607 519.5776 177.1558 533.689 c
179.6694 537.6758 189.9043 548.5288 190.1899 550.7329 C
188.8706 556.5024 187.5801 561.145 186.1792 566.7749 c
181.9941 583.6001 184.0928 601.7651 191.6938 612.8945 c
197.7607 621.7778 204.4995 622.1367 209.7407 619.4116 c
213.918 617.2393 217.3369 611.9321 219.2651 607.3804 c
222.9263 598.7412 224.0059 583.5625 224.0059 575.8784 c
224.0059 571.0166 223.3159 563.668 223.2759 558.7539 C
224.3994 558.3633 225.9985 558.2422 227.7876 558.2529 C
228.2993 558.6558 227.9248 558.4307 228.79 558.7539 C
228.79 559.0879 228.79 559.4224 228.79 559.7563 C
230.832 563.6602 229.4419 574.7534 230.3354 582.854 c
232.2041 599.7896 236.8755 622.0815 257.8657 619.4116 C
266.0532 609.8867 271.2944 588.0259 266.2202 570.2842 c
264.1528 563.0557 259.5581 555.541 258.3667 549.229 C
272.3892 540.1455 285.6353 516.2563 276.915 492.582 c
275.2119 487.958 272.1973 483.3174 269.3955 479.5483 c
267.749 477.332 265.4131 476.5801 264.3823 473.5327 C
267.3999 471.6323 279.5425 460.8184 280.9258 457.9927 c
283.4141 452.9072 279.2104 448.5825 278.4189 445.46 c
277.4697 441.7104 281.9141 440.7603 280.9258 436.4365 c
280.1646 433.1074 277.9023 431.3086 276.915 428.4155 C
282.8843 425.1919 285.0693 422.1411 283.9336 414.3789 C
278.2788 409.9824 262.604 394.2051 253.354 399.3398 c
249.7866 401.3203 246.5083 406.7983 243.8291 409.8677 C
236.8677 408.0371 231.2964 405.1885 216.2573 406.3584 c
212.208 406.6729 196.874 409.8677 192.0278 411.8726 C
f0 0 0 0 1 1 1 Xa
201.2183 618.4092 m
196.1138 616.2168 191.6357 610.4917 189.187 604.3726 c
185.7549 595.7939 184.8525 577.1333 187.6836 566.7749 c
189.4155 560.4365 193.0537 554.7002 193.1978 547.2236 C
179.5371 540.771 166.5649 513.3599 174.6494 492.0811 c
179.9912 478.0205 201.3125 468.4771 214.7539 466.0132 c
224.7798 464.1748 231.1299 464.1748 238.3149 465.5117 c
242.4702 466.2852 247.8291 467.2393 251.8501 469.021 c
265.0439 474.8672 282.248 494.9512 276.4136 517.647 c
275.5103 521.1626 274.5073 525.4497 272.9048 528.6758 c
270.1118 534.2983 265.8818 539.7192 261.3745 543.7148 c
258.9883 545.8301 255.6768 546.5122 254.8579 550.2319 C
257.3716 552.168 257.8247 555.2744 259.3696 558.2529 c
268.5132 575.8823 269.4849 603.0518 255.8604 617.4063 C
246.3354 617.2393 243.771 614.4648 239.8188 608.2158 c
231.3613 594.8413 231.7188 578.1592 231.7979 557.25 C
231.0659 556.8223 230.3608 556.3418 229.793 555.7461 C
226.7852 555.7461 223.7769 555.7461 220.7695 555.7461 C
220.4531 556.6255 220.6724 556.2329 220.2681 556.7485 C
225.375 581.5693 218.6138 625.8784 201.2183 618.4092 c
f0 0 0 1 0 0 0 Xa
195.7041 501.4385 m
196.2056 501.4385 198.0293 500.3101 198.2104 498.4307 C
198.6694 497.6021 198.4458 496.8555 197.7095 495.9243 C
194.8486 493.3115 192.0439 495.5884 193.1978 499.4336 c
193.6992 501.1045 195.0112 500.6938 195.7041 501.4385 C
f253.103 498.9321 m
253.605 498.9321 256.7793 497.8462 256.4458 495.2559 C
255.8604 492.7495 253.2705 492.248 252.1006 492.917 c
250.9307 493.585 250.5972 496.0913 251.0981 497.4282 c
251.5996 498.7651 252.5356 498.3359 253.103 498.9321 C
f230.7954 474.5352 m
228.6284 474.8735 227.7002 475.979 226.2837 476.5405 c
223.1152 477.7959 220.8408 476.2754 217.7617 476.0396 C
217.3062 476.582 217.8003 476.0815 217.2603 476.5405 C
217.2603 477.042 217.2603 477.543 217.2603 478.0444 C
217.9287 478.0444 220.9365 478.5459 221.6045 478.5459 C
221.439 480.5771 218.7319 480.0225 218.2627 481.5537 C
218.8062 482.0088 218.3052 481.5142 218.7642 482.0552 C
221.7461 481.4438 222.9277 480.0537 225.7822 479.5483 C
226.7012 481.0796 228.7803 481.1743 230.7954 481.5537 C
230.7954 481.0522 230.7954 480.2168 230.7954 479.7153 C
229.521 479.0698 228.353 479.4995 227.7876 478.0444 C
229.8125 477.4976 230.583 477.0371 230.7954 474.5352 C
f0.0275 0.4078 0.9373 0.0039 1 0.5843 0 Xa
194.0752 438.9429 m
190.3491 438.9277 182.8525 440.7861 180.54 439.9458 c
178.2705 439.1201 173.6924 436.2676 169.5112 437.439 c
166.5068 438.2803 165.7354 441.2534 162.4932 441.9507 C
162.3257 441.4492 162.1587 440.9482 161.9912 440.4468 C
161.2661 439.4819 161.0981 438.1768 161.4902 437.439 C
162.7495 429.4585 175.5835 423.3989 182.0435 419.8936 c
188.3105 416.4927 195.604 413.3423 203.0986 410.8701 c
223.7261 404.0635 248.3091 412.7349 261.2495 420.896 c
268.8599 425.6953 276.8271 429.2363 277.7925 438.4414 C
276.9282 438.7417 275.9502 441.2954 275.7871 442.4521 C
273.6748 444.127 272.8828 446.7515 271.2754 448.9692 c
269.1777 451.8628 265.8862 455.0371 263.2549 457.4912 C
263.2549 457.8252 263.2549 458.1592 263.2549 458.4937 C
264.0898 458.6606 264.9253 458.8271 265.7612 458.9951 C
266.2358 458.2598 267.2041 456.6069 267.7661 457.4912 C
269.4053 458.7188 270.5479 460.877 270.7739 463.5068 C
267.9375 466.4434 265.5957 471.2319 260.2471 471.5273 C
250.2651 463.2539 227.1973 460.3311 211.1196 464.5093 C
208.2788 464.8428 206.4819 465.7622 202.2212 467.2666 c
197.96 468.7705 188.8306 474.0356 185.0513 475.0366 c
182.8022 475.6318 173.4609 469.4873 173.5215 468.0186 c
173.7007 463.6973 182.8184 445.3652 185.5527 443.4546 C
188.3936 442.4521 191.2349 441.4492 194.0752 440.4468 C
194.0752 439.9458 194.0752 439.4443 194.0752 438.9429 C
f0 0 0 0 1 1 1 Xa
172.6445 464.0083 m
168.981 463.8994 166.5986 462.6055 164.6235 461.5015 c
162.6484 460.397 162.1025 458.2871 161.6152 456.4883 c
159.8232 449.8608 165.7017 440.6572 170.6392 440.4468 C
174.2593 437.834 181.1851 441.6123 181.668 444.457 C
178.9419 447.4063 173.376 459.4795 172.6445 464.0083 C
f272.9048 461.0005 m
271.728 458.5039 270.2163 456.8149 269.897 453.4805 C
272.3359 451.793 273.2539 448.2998 276.4136 447.4648 C
277.7856 450.3057 278.915 451.4614 278.9204 455.9873 C
278.2881 456.668 278.2358 456.873 277.918 457.9927 C
276.1919 459.0903 275.1855 460.3584 272.9048 461.0005 C
f163.1196 428.917 m
160.8794 425.6411 157.6807 425.0151 157.605 419.3921 C
165.2471 414.3335 180.061 396.8643 185.1768 400.3428 c
189.3545 403.1831 189.7705 405.2607 189.6885 412.875 C
183.6812 415.728 177.5825 418.7788 172.1431 422.3999 c
169.1187 424.4126 166.9751 427.7617 163.1196 428.917 C
f273.4058 426.4102 m
269.6919 421.0918 261.3037 417.3672 255.3589 414.3789 c
252.356 412.8691 248.46 413.3081 247.8398 409.3662 C
249.8408 405.498 252.6226 397.8691 259.3696 400.8438 c
266.1167 403.8184 285.5669 412.876 282.4292 419.3921 c
279.2925 425.9077 278.8013 425.7344 273.4058 426.4102 C
fUuu1 Ap
0 0 0 1 0 0 0 Xa
254.3018 426.2012 m
246.8672 422.3252 238.9932 420.8779 v
235.2222 420.1846 221.7627 419.0874 Y
218.3818 456.8584 L
227.7207 456.8262 233.689 457.5449 v
239.6567 458.2637 248.0972 460.9414 Y
254.3018 426.2012 L
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
252.709 427.48 m
244.792 422.4956 238.2734 421.7578 v
231.7539 421.0215 223.4932 420.8403 Y
219.9556 455.9575 L
227.124 455.6641 233.8638 456.4521 v
240.603 457.2388 246.8564 459.6533 Y
252.709 427.48 L
f/BBAccumRotation (0.136536) XT
Uu0 Ap
0 0 0 1 0 0 0 Xa
245.9844 458.2578 m
246.4229 455.0649 246.8618 451.8701 247.3008 448.6763 C
246.0967 448.5015 245.8589 447.0879 244.5835 446.8906 C
244.1313 447.4399 243.5918 447.8521 243.0547 448.2852 C
242.4868 448.2148 242.0234 448.0942 241.6289 447.9551 C
241.5098 447.6338 241.4551 447.6309 241.4751 447.1318 C
242.0786 446.8237 243.1294 446.395 243.3027 445.5103 C
243.2153 445.499 243.1274 445.4868 243.04 445.4746 C
241.9434 444.6431 239.8486 447.2056 238.2715 447.0928 C
238.7085 444.4092 241.2568 444.9565 241.7485 442.2207 C
241.5903 441.9673 241.6104 441.6563 241.4624 441.3804 c
241.2622 441.0039 240.7837 440.7817 240.521 440.4473 C
239.6274 440.3247 239.2324 440.2461 238.5522 440.1777 C
238.2798 440.6074 238.022 440.9922 237.4893 441.1016 C
237.2944 440.918 236.8159 440.9082 236.6069 440.7124 c
236.0986 440.2393 236.4946 439.9326 235.4028 439.7446 C
235.0972 440.3906 234.6348 440.4697 233.7188 440.3154 C
233.4888 439.979 233.2603 439.6558 233.0576 439.2886 C
231.7954 439.0313 230.4189 438.9653 229.8765 440.0547 C
229.665 440.2925 229.6143 440.8896 229.5649 441.3501 C
230.251 442.2925 231.7671 444.4707 231.6123 445.9102 C
231.4043 445.9531 231.3784 445.9683 231.0698 445.9697 C
230.2935 444.9556 229.1411 443.3203 227.4565 443.0664 C
227.3545 443.2666 227.3086 443.3672 227.2354 443.7041 C
227.8364 444.1846 228.5474 444.8247 228.5576 445.7583 C
228.2363 445.8779 228.2329 445.9321 227.7349 445.9131 C
227.4111 446.0498 226.835 445.7666 226.5898 445.4878 C
226.2617 445.0444 226.231 444.4619 225.7017 444.1621 C
224.9692 443.5132 223.5752 445.0615 222.7925 445.042 C
222.3418 448.3223 221.8906 451.605 221.4404 454.8862 C
222.1831 454.9878 222.957 454.6553 223.7007 454.7573 C
223.707 454.7139 222.7383 454.1768 222.7251 453.3242 C
222.8276 453.2344 222.937 453.0547 223.041 452.9658 C
224.2178 452.1973 226.0503 451.8179 227.7466 451.665 c
230.8037 451.3896 232.6548 450.9238 233.1567 447.3262 C
233.2593 446.583 233.3613 445.8389 233.4639 445.0947 C
233.1689 443.4639 231.4351 442.5903 231.2305 440.9106 C
231.5898 440.8574 231.5645 440.7959 231.9229 440.7373 C
232.5786 442.0005 233.9854 441.3584 235.0547 441.3013 c
236.374 441.2305 237.1187 442.0674 237.9834 442.373 c
238.8994 442.6958 239.1982 442.0244 239.9106 441.9688 C
240.0054 442.2178 240.0459 442.2119 240.1011 442.5298 C
239.1123 443.3979 237.709 444.2676 237.0254 445.4507 c
235.7202 447.71 236.4663 451.6641 237.9072 452.6597 c
239.5884 453.8208 244.4312 454.8296 244.8521 456.7651 C
244.936 456.9341 244.9233 457 244.9111 457.3081 C
244.5991 457.5137 244.1753 457.126 243.96 457.4453 C
244.665 457.498 245.2788 458.2056 245.9844 458.2578 C
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
240.1587 449.8936 m
239.875 449.5073 239.6621 449.5068 239.6299 448.8838 C
239.7671 448.8584 239.9038 448.833 240.041 448.8066 C
240.7446 448.3184 242.0591 448.5283 243.2632 448.7144 C
243.3828 449.0361 243.4375 449.04 243.4175 449.5391 C
243.2939 449.6582 243.3662 449.5674 243.25 449.7832 C
243.0762 449.7588 242.9009 449.7349 242.7256 449.7109 C
242.4517 449.3701 242.0791 449.2358 241.4673 449.1367 C
241.0854 449.5093 240.7778 449.811 240.1587 449.8936 C
f/BBAccumRotation (0.136536) XT
228.7769 448.0615 m
228.5137 447.4561 228.2563 447.0615 227.3276 446.9268 C
227.0234 447.1685 226.894 447.2212 226.355 447.1938 C
226.2451 446.8994 226.1992 446.9268 226.1831 446.502 C
226.4058 446.3813 226.313 446.375 226.6118 446.2935 C
227.5195 445.8213 229.8394 447.0444 229.8809 447.812 C
229.4648 448.0005 229.4502 448.1191 228.7769 448.0615 C
f/BBAccumRotation (0.136536) XT
0 0 0 1 0 0 0 Xa
242.5439 440.3247 m
243.1826 440.1777 245.3569 437.4033 245.5962 436.5977 C
245.5093 436.5859 245.4224 436.5747 245.3345 436.562 C
245.3398 436.5186 245.3467 436.4746 245.3525 436.4312 C
245.3086 436.4253 245.2651 436.4194 245.2207 436.4126 C
245.2153 436.457 245.209 436.5 245.2031 436.5435 C
244.3193 436.855 242.4316 437.333 241.9141 438.0986 C
241.3638 438.7764 242.2861 439.8198 242.5439 440.3247 C
f/BBAccumRotation (0.136536) XT
227.52 433.8472 m
227.4507 434.8809 228.77 438.0747 229.7173 438.2954 C
230.0615 437.5737 230.5664 437.2969 230.793 436.3027 C
229.5093 435.6885 229.0913 434.1865 227.52 433.8472 C
f/BBAccumRotation (0.136536) XT
234.1904 436.0947 m
234.9209 435.9717 235.6509 435.8496 236.3809 435.7271 C
237.1538 435.8857 237.9409 436.8291 238.9155 436.7437 c
239.5903 436.6846 240.3896 436.2559 241.0107 436.0952 c
241.9868 435.8423 243.1475 436.2822 243.5356 435.2393 C
243.4482 435.0898 243.4937 435.1963 243.4404 434.9585 C
242.6377 434.3125 241.8345 433.6675 241.0317 433.0225 C
240.3247 432.6084 239.606 432.5576 239.0215 432.0771 c
238.3901 431.5576 238.2085 430.8052 237.2334 430.4946 c
236.2588 430.1841 235.9316 431.2212 235.3374 431.4521 c
234.7593 431.6758 234.2046 431.5698 233.5591 431.7417 c
232.2495 432.0918 230.959 432.5264 229.9028 433.2324 C
229.8911 433.3198 229.8784 433.4072 229.8672 433.4946 C
230.0996 433.749 230.3315 434.0044 230.5645 434.2593 C
231.1592 434.4736 231.7534 434.6904 232.3481 434.9043 C
232.5498 435.0283 232.7305 435.396 232.9321 435.5205 c
233.3599 435.7847 233.8657 435.7793 234.1904 436.0947 C
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
237.979 434.6157 m
237.7505 434.272 237.4434 433.6416 237.0732 433.4209 C
236.9048 433.2695 236.6611 433.2349 236.3047 433.1812 C
236.022 433.5542 235.708 433.8364 235.3726 434.124 C
234.5591 434.0215 233.7896 433.853 233.1587 433.686 C
233.0664 433.5137 233.0713 433.5234 232.9321 433.3872 C
233.0713 433.2617 232.9238 433.3745 233.0815 433.2739 C
234.3496 431.5537 240.1001 432.1943 240.3774 434.6777 C
240.3335 434.6719 240.29 434.665 240.2466 434.6597 C
240.2407 434.7031 240.2344 434.7471 240.2285 434.7905 C
239.5771 434.7759 238.79 434.7275 237.979 434.6157 C
f/BBAccumRotation (0.136536) XT
0 0 0 1 0 0 0 Xa
223.1958 431.7617 m
223.832 431.0811 224.7148 429.21 224.8906 427.9966 C
224.6768 427.8384 224.6938 427.8018 224.4023 427.6616 C
224.2593 427.749 224.0161 427.8022 223.8413 427.8525 C
223.3604 428.8193 223.3569 430.5078 223.1958 431.7617 C
f/BBAccumRotation (0.136536) XT
250.728 434.1577 m
250.4209 434.1162 250.1147 434.0737 249.8091 434.0322 C
249.6992 434.2471 249.6348 434.4292 249.5693 434.8008 C
249.811 435.6362 250.0527 436.4717 250.2944 437.3086 C
250.439 436.2573 250.5835 435.207 250.728 434.1577 C
f/BBAccumRotation (0.136536) XT
251.5625 428.084 m
243.7803 423.4624 238.4214 422.8027 v
233.063 422.1436 224.356 421.8779 y
223.7856 426.1367 l
224.0313 426.1396 224.0757 426.146 V
224.082 426.1016 224.0879 426.0576 224.0942 426.0146 C
224.647 425.5562 225.2002 425.0962 225.7539 424.6387 C
226.1587 424.4199 226.5439 424.3975 226.8936 424.126 C
227.4619 424.1958 227.9258 424.3154 228.3198 424.4556 C
228.4468 424.7959 228.5044 424.8599 228.4565 425.4102 C
227.8726 425.9082 227.2778 426.6167 227.2485 427.3843 C
228.3721 427.4673 228.7754 426.8125 229.6245 426.6406 c
229.9556 426.5737 230.3374 426.6846 230.5615 426.6357 C
230.8457 426.0801 231.0518 425.4355 231.4521 425.0195 c
232.2314 424.207 236.2153 422.8833 238.4297 423.0879 c
239.2998 423.1685 241.1309 424.9722 241.8135 425.3076 c
243.54 426.1582 244.6606 428.9814 245.1787 430.7974 C
246.4849 431.1597 246.2148 432.458 247.4409 432.77 C
247.4473 432.7271 247.4531 432.6831 247.459 432.6387 C
247.5029 432.6455 247.5464 432.6514 247.5903 432.6567 C
247.4805 431.4199 247.2173 430.9497 247.249 429.7129 C
247.3364 429.7251 247.5566 429.6025 247.6436 429.6143 C
249.0586 428.6187 250.7231 431.4956 250.8311 432.4336 C
250.874 432.4395 250.9185 432.4468 250.9624 432.4521 C
251.6113 427.7266 251.5625 428.084 y
f/BBAccumRotation (0.136536) XT
UUU1 Ap
0.0275 0.4078 0.9373 0.0039 1 0.5843 0 Xa
304.1514 632.3257 m
143.2393 632.3257 L
143.2393 682.6914 L
304.1514 682.6914 L
304.1514 632.3257 L
f0 To
1 0 0 1 192.6382 646.5151 0 Tp
0 Tv
TP
2 Tr
0 0 0 1 0 0 0 Xa
0 R
0 0 0 1 0 0 0 XA
1.0026 w%_ 0 50 XQ
/_Kidprint 40.1042 36.5011 -9.8694 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ -- XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
240 Tg
0 0 Tl
0 Tc
0 Tw
(obey) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
Uu0 0 0 1 k
1 w512.7324 382.2397 m
338.2788 382.2397 L
338.2788 688.4717 L
512.7324 688.4717 L
512.7324 382.2397 L
f0 0 0 0 1 1 1 Xa
505.9619 389.2695 m
345.0498 389.2695 L
345.0498 627.3008 L
505.9619 627.3008 L
505.9619 389.2695 L
fuu0 Ap
0 0 0 1 0 0 0 Xa
456.2959 412.374 m
456.0732 405.6626 458.9697 399.0059 464.1494 399.0059 c
469.3301 399.0059 471.1895 401.1484 473.6748 402.8496 c
481.71 408.3506 486.5078 412.7964 493.2256 419.3921 C
493.3164 426.6289 489.4658 427.2192 487.7109 431.9248 C
487.7773 432.8403 489.8271 435.8828 490.2178 437.9404 c
490.7471 440.7324 487.7529 443.4888 487.21 445.46 c
486.5635 447.8042 488.3135 449.1074 488.7139 450.4727 c
489.7549 454.0278 488.9717 459.0352 487.7109 461.0005 c
486.4502 462.9653 477.1826 468.5195 y
476.1006 470.6851 477.3984 471.71 475.6797 473.0317 c
473.0547 475.0488 468.4092 475.7202 467.1572 479.0474 C
482.001 488.7217 480.0635 520.0791 471.167 534.1899 c
468.6543 538.1772 458.4199 549.0298 458.1338 551.2349 C
459.4531 557.0039 460.7441 561.6465 462.1436 567.2764 c
466.3291 584.1011 464.2314 602.2666 456.6299 613.396 c
450.5635 622.2793 443.8242 622.6382 438.584 619.9131 c
434.4053 617.7402 430.9873 612.4331 429.0586 607.8818 c
425.3975 599.2432 424.3174 584.064 424.3174 576.3799 c
424.3174 571.5181 425.0078 564.1689 425.0479 559.2554 C
423.9243 558.8647 422.3252 558.7437 420.5366 558.7539 C
420.0239 559.1572 420.3994 558.9321 419.5337 559.2554 C
419.5337 559.5894 419.5337 559.9238 419.5337 560.2578 C
417.4917 564.1611 418.8818 575.2549 417.9888 583.3555 c
416.1201 600.2905 411.4478 622.5825 390.458 619.9131 C
382.27 610.3882 377.0288 588.5269 382.1035 570.7852 c
384.1704 563.5576 388.7656 556.0425 389.957 549.7305 C
375.9346 540.647 362.688 516.7578 371.4082 493.084 c
373.1118 488.459 376.1265 483.8188 378.9282 480.0498 c
380.5752 477.8335 382.9106 477.082 383.9414 474.0342 C
380.9238 472.1338 368.7813 461.3193 367.3979 458.4937 c
364.9102 453.4082 369.1138 449.0845 369.9048 445.9614 c
370.854 442.2124 366.4102 441.2617 367.3979 436.938 c
368.1597 433.6089 370.4214 431.8101 371.4082 428.917 C
365.4395 425.6934 363.2549 422.6421 364.3901 414.8809 C
370.0449 410.4844 385.7197 394.7065 394.9697 399.8413 c
398.5376 401.8218 401.8159 407.2998 404.4941 410.3687 C
411.4561 408.5381 417.0269 405.6895 432.0664 406.8599 c
436.1152 407.1748 451.4492 410.3687 456.2959 412.374 C
f0 0 0 0 1 1 1 Xa
447.1045 618.9102 m
452.21 616.7188 456.6885 610.9932 459.1357 604.874 c
462.5693 596.2949 463.4717 577.6348 460.6406 567.2764 c
458.9082 560.9375 455.2705 555.2012 455.126 547.7256 C
468.7861 541.2725 481.7588 513.8608 473.6748 492.582 c
468.332 478.522 447.0107 468.9785 433.5703 466.5146 c
423.5444 464.6763 417.1943 464.6763 410.0088 466.0137 c
405.8535 466.7861 400.4946 467.7402 396.4736 469.5225 c
383.2798 475.3687 366.0757 495.4526 371.9102 518.1484 c
372.8135 521.6646 373.8164 525.9512 375.4189 529.1772 c
378.2119 534.7998 382.4414 540.2207 386.9492 544.2163 c
389.335 546.3315 392.6475 547.0137 393.4658 550.7334 C
390.9521 552.6699 390.4995 555.7759 388.9541 558.7539 c
379.8105 576.3833 378.8394 603.5532 392.4629 617.9077 C
401.9883 617.7402 404.5527 614.9663 408.5049 608.7173 c
416.9624 595.3428 416.605 578.6602 416.5259 557.7515 C
417.2578 557.3232 417.9629 556.8433 418.5313 556.2471 C
421.5391 556.2471 424.5469 556.2471 427.5547 556.2471 C
427.8711 557.127 427.6514 556.7344 428.0557 557.2505 C
422.9487 582.0713 429.709 626.3794 447.1045 618.9102 c
f0 0 0 1 0 0 0 Xa
452.6201 501.9399 m
452.1182 501.9399 450.2939 500.8115 450.1123 498.9326 C
449.6533 498.1035 449.8779 497.3569 450.6143 496.4258 C
453.4756 493.8125 456.2793 496.0894 455.126 499.9346 c
454.625 501.6055 453.3135 501.1958 452.6201 501.9399 C
f395.2202 499.4336 m
394.7192 499.4336 391.5439 498.3472 391.8784 495.7573 C
392.4629 493.2505 395.0532 492.749 396.2231 493.418 c
397.3931 494.0864 397.7271 496.5928 397.2256 497.9297 c
396.7246 499.2661 395.7881 498.8374 395.2202 499.4336 C
f417.5288 475.0371 m
419.6953 475.375 420.6235 476.4805 422.04 477.042 c
425.2085 478.2974 427.4824 476.7769 430.5625 476.5405 C
431.0176 477.0835 430.5234 476.583 431.0635 477.042 C
431.0635 477.543 431.0635 478.0449 431.0635 478.5459 C
430.3945 478.5459 427.3867 479.0474 426.7188 479.0474 C
426.8848 481.0781 429.5918 480.5234 430.0605 482.0552 C
429.5176 482.5103 430.0186 482.0156 429.5605 482.5562 C
426.5781 481.9453 425.396 480.5552 422.5415 480.0498 C
421.623 481.5811 419.5435 481.6758 417.5288 482.0552 C
417.5288 481.5537 417.5288 480.7178 417.5288 480.2168 C
418.8027 479.5718 419.9712 480.001 420.5366 478.5459 C
418.5112 477.999 417.7412 477.5381 417.5288 475.0371 C
f0.0275 0.4078 0.9373 0.0039 1 0.5843 0 Xa
454.249 439.4443 m
457.9746 439.4292 465.4717 441.2876 467.7842 440.4468 c
470.0537 439.6216 474.6309 436.769 478.8125 437.9404 c
481.8174 438.7822 482.5879 441.7549 485.8311 442.4521 C
485.999 441.9512 486.165 441.4492 486.332 440.9482 C
487.0576 439.9834 487.2256 438.6777 486.833 437.9404 C
485.5742 429.9604 472.7402 423.8999 466.2803 420.395 c
460.0127 416.9941 452.7197 413.8438 445.2256 411.3716 c
424.5977 404.5654 400.0146 413.2368 387.0747 421.3975 c
379.4639 426.1973 371.4961 429.7378 370.5313 438.9434 C
371.396 439.2432 372.3735 441.7964 372.5366 442.9536 C
374.6489 444.6289 375.4414 447.2524 377.0483 449.4702 c
379.146 452.3643 382.438 455.5386 385.0693 457.9927 C
385.0693 458.3262 385.0693 458.6606 385.0693 458.9951 C
384.2339 459.1621 383.3984 459.3291 382.5625 459.4961 C
382.0884 458.7617 381.1196 457.1084 380.5571 457.9927 C
378.9185 459.2207 377.7759 461.3779 377.5493 464.0083 C
380.3862 466.9443 382.728 471.7334 388.0771 472.0293 C
398.0586 463.7559 421.1265 460.8325 437.2051 465.0107 C
440.0449 465.3447 441.8418 466.2642 446.1025 467.7681 c
450.3643 469.272 459.4932 474.5376 463.2725 475.5381 c
465.5225 476.1333 474.8623 469.9888 474.8018 468.5195 c
474.623 464.1987 465.5059 445.8667 462.7705 443.9561 C
459.9307 442.9536 457.0889 441.9512 454.249 440.9482 C
454.249 440.4468 454.249 439.9458 454.249 439.4443 C
f0 0 0 0 1 1 1 Xa
475.6797 464.5093 m
479.3428 464.4009 481.7256 463.1064 483.7002 462.0029 c
485.6748 460.8984 486.2217 458.7891 486.708 456.9902 c
488.501 450.3623 482.6221 441.1587 477.6846 440.9482 C
474.0654 438.3354 467.1387 442.1138 466.6563 444.959 C
469.3818 447.9077 474.9473 459.9805 475.6797 464.5093 C
f375.4189 461.5015 m
376.5952 459.0054 378.1079 457.3164 378.4268 453.9824 C
375.9873 452.2949 375.0703 448.8013 371.9102 447.9668 C
370.5386 450.8066 369.4087 451.9624 369.4033 456.4883 C
370.0361 457.1699 370.0879 457.375 370.4058 458.4937 C
372.1323 459.5918 373.1382 460.8594 375.4189 461.5015 C
f485.2041 429.4185 m
487.4443 426.1426 490.6436 425.5166 490.7188 419.8936 C
483.0771 414.835 468.2627 397.3657 463.1475 400.8442 c
458.9697 403.6846 458.5537 405.7622 458.6357 413.3765 C
464.6416 416.229 470.7412 419.2798 476.1807 422.9014 c
479.2051 424.9136 481.3486 428.2627 485.2041 429.4185 C
f374.918 426.9121 m
378.6318 421.5933 387.02 417.8687 392.9648 414.8809 c
395.9673 413.3706 399.8638 413.8096 400.4839 409.8672 C
398.4829 405.9995 395.7012 398.3701 388.9541 401.3452 c
382.207 404.3198 362.7573 413.3774 365.8945 419.8936 c
369.0313 426.4092 369.5229 426.2358 374.918 426.9121 C
fUuu1 Ap
0 0 0 1 0 0 0 Xa
394.022 426.7026 m
401.4561 422.8271 409.3311 421.3794 v
413.1021 420.6855 426.5615 419.5884 Y
429.9414 457.3599 L
420.6025 457.3271 414.6353 458.0464 v
408.6665 458.7651 400.2266 461.4429 Y
394.022 426.7026 L
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
395.6152 427.9814 m
403.5313 422.9966 410.0498 422.2598 v
416.5698 421.5229 424.8306 421.3413 Y
428.3682 456.459 L
421.2002 456.1655 414.46 456.9531 v
407.7207 457.7402 401.4673 460.1543 Y
395.6152 427.9814 L
f/BBAccumRotation (0.136536) XT
Uu0 Ap
0 0 0 1 0 0 0 Xa
402.3398 458.7593 m
401.9009 455.5664 401.4619 452.3716 401.0225 449.1777 C
402.2271 449.0029 402.4648 447.5894 403.7402 447.3921 C
404.1929 447.9414 404.7314 448.354 405.269 448.7866 C
405.8369 448.7168 406.2998 448.5962 406.6948 448.4565 C
406.814 448.1353 406.8691 448.1318 406.8486 447.6333 C
406.2451 447.3252 405.1948 446.896 405.021 446.0117 C
405.1084 446.0005 405.1968 445.9883 405.2837 445.9761 C
406.3804 445.1445 408.4751 447.707 410.0527 447.5938 C
409.6152 444.9106 407.0674 445.458 406.5752 442.7227 C
406.7339 442.4688 406.7134 442.1577 406.8613 441.8818 c
407.062 441.5054 407.54 441.2832 407.8022 440.9487 C
408.6963 440.8257 409.0918 440.7476 409.772 440.6792 C
410.0439 441.1084 410.3018 441.4932 410.834 441.6025 C
411.0298 441.4199 411.5078 441.4092 411.7163 441.2134 c
412.2246 440.7402 411.8291 440.4336 412.9209 440.2461 C
413.2261 440.8926 413.689 440.9712 414.605 440.8174 C
414.8345 440.481 415.063 440.1572 415.2656 439.79 C
416.5278 439.5322 417.9043 439.4668 418.4473 440.5562 C
418.6582 440.7939 418.7095 441.3906 418.7588 441.8516 C
418.0728 442.7939 416.5566 444.9727 416.7109 446.4116 C
416.9194 446.4546 416.9453 446.4697 417.2534 446.4707 C
418.0303 445.457 419.1831 443.8223 420.8672 443.5679 C
420.9697 443.7681 421.0151 443.8682 421.0884 444.2051 C
420.4873 444.686 419.7764 445.3262 419.7661 446.2598 C
420.0864 446.3794 420.0908 446.4336 420.5889 446.4141 C
420.9131 446.5513 421.4888 446.2681 421.7339 445.9893 C
422.062 445.5454 422.0933 444.9629 422.6226 444.6641 C
423.3545 444.0146 424.749 445.5635 425.5317 445.543 C
425.9824 448.8237 426.4326 452.1064 426.8838 455.3877 C
426.1406 455.4893 425.3672 455.1567 424.623 455.2588 C
424.6172 455.2148 425.5854 454.6782 425.5991 453.8252 C
425.4966 453.7358 425.3867 453.5562 425.2827 453.4668 C
424.106 452.6982 422.2734 452.3193 420.5776 452.166 c
417.52 451.8911 415.6689 451.4248 415.167 447.8276 C
415.0645 447.084 414.9624 446.3403 414.8604 445.5962 C
415.1553 443.9653 416.8892 443.0913 417.0933 441.4116 C
416.7344 441.3594 416.7588 441.2969 416.4014 441.2393 C
415.7451 442.502 414.3384 441.8604 413.2695 441.8022 c
411.9497 441.7314 411.2051 442.5684 410.3403 442.874 c
409.4243 443.1973 409.1255 442.5264 408.4126 442.4702 C
408.3188 442.7197 408.2778 442.7129 408.2231 443.0313 C
409.2114 443.8994 410.6152 444.7686 411.2983 445.9521 c
412.6035 448.2114 411.8574 452.1655 410.417 453.1611 c
408.7354 454.3223 403.8921 455.3311 403.4717 457.2666 C
403.3872 457.4355 403.4004 457.5015 403.4126 457.8096 C
403.7251 458.0151 404.1479 457.6279 404.3643 457.9473 C
403.6582 457.999 403.0454 458.7075 402.3398 458.7593 C
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
408.1646 450.3945 m
408.4482 450.0088 408.6616 450.0078 408.6938 449.3848 C
408.5571 449.3599 408.4199 449.3345 408.2827 449.3086 C
407.5796 448.8198 406.2646 449.0298 405.0605 449.2158 C
404.9414 449.5376 404.8862 449.5415 404.9063 450.04 C
405.0303 450.1597 404.9575 450.0693 405.0737 450.2847 C
405.248 450.2603 405.4229 450.2358 405.5981 450.2119 C
405.8721 449.8711 406.2446 449.7368 406.8564 449.6387 C
407.2383 450.0103 407.5454 450.3125 408.1646 450.3945 C
f/BBAccumRotation (0.136536) XT
419.5469 448.5635 m
419.8101 447.9575 420.0674 447.5635 420.9966 447.4277 C
421.3003 447.6699 421.4302 447.7227 421.9683 447.6953 C
422.0781 447.4004 422.124 447.4287 422.1411 447.0034 C
421.9185 446.8823 422.0107 446.876 421.7119 446.7949 C
420.8037 446.3223 418.4844 447.5459 418.4429 448.3135 C
418.8594 448.502 418.8735 448.6206 419.5469 448.5635 C
f/BBAccumRotation (0.136536) XT
0 0 0 1 0 0 0 Xa
405.7803 440.8257 m
405.1416 440.6792 402.9668 437.9043 402.7271 437.0996 C
402.8145 437.0869 402.9014 437.0757 402.9888 437.063 C
402.9834 437.0195 402.9771 436.9761 402.9712 436.9326 C
403.0151 436.9263 403.0586 436.9204 403.1035 436.9146 C
403.1084 436.958 403.1147 437.0015 403.1206 437.0449 C
404.0044 437.3564 405.8916 437.834 406.4097 438.5996 C
406.96 439.2778 406.0376 440.3208 405.7803 440.8257 C
f/BBAccumRotation (0.136536) XT
420.8037 434.3486 m
420.873 435.3823 419.5537 438.5757 418.6064 438.7964 C
418.2617 438.0752 417.7578 437.7983 417.5303 436.8042 C
418.8149 436.1895 419.2329 434.6885 420.8037 434.3486 C
f/BBAccumRotation (0.136536) XT
414.1328 436.5957 m
413.4028 436.4731 412.6729 436.3506 411.9434 436.2285 C
411.1694 436.3877 410.3828 437.3306 409.4082 437.2451 c
408.7339 437.186 407.9341 436.7568 407.3135 436.5967 c
406.3369 436.3442 405.1768 436.7837 404.7886 435.7402 C
404.8755 435.5918 404.8301 435.6973 404.8833 435.46 C
405.686 434.8145 406.4888 434.1689 407.292 433.5239 C
407.9985 433.1099 408.7178 433.0591 409.3018 432.5791 c
409.9336 432.0586 410.1157 431.3066 411.0903 430.9956 c
412.0649 430.686 412.3921 431.7227 412.9863 431.9536 c
413.5649 432.1777 414.1191 432.0713 414.7646 432.2432 c
416.0747 432.5928 417.3652 433.0278 418.4204 433.7339 C
418.4331 433.8213 418.4448 433.9092 418.4565 433.9961 C
418.2241 434.2505 417.9922 434.5063 417.7598 434.7607 C
417.1646 434.9751 416.5703 435.1914 415.9756 435.4063 C
415.7739 435.5298 415.5928 435.8975 415.3921 436.022 c
414.9644 436.2856 414.458 436.2808 414.1328 436.5957 C
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
410.3447 435.1172 m
410.5737 434.7734 410.8804 434.1431 411.2505 433.9229 C
411.4189 433.7705 411.6626 433.7358 412.019 433.6831 C
412.3018 434.0552 412.6162 434.3379 412.9512 434.625 C
413.7646 434.5229 414.5347 434.3545 415.1646 434.1875 C
415.2573 434.0146 415.2524 434.0249 415.3906 433.8882 C
415.252 433.7632 415.3999 433.8765 415.2422 433.7754 C
413.9741 432.0552 408.2241 432.6958 407.9463 435.1792 C
407.9902 435.1729 408.0337 435.167 408.0771 435.1611 C
408.083 435.2051 408.0894 435.2485 408.0952 435.292 C
408.7466 435.2773 409.5332 435.2295 410.3447 435.1172 C
f/BBAccumRotation (0.136536) XT
0 0 0 1 0 0 0 Xa
425.1284 432.2632 m
424.4917 431.5825 423.6094 429.7109 423.4326 428.498 C
423.647 428.3398 423.6304 428.3027 423.9214 428.1631 C
424.0649 428.251 424.3081 428.3032 424.4824 428.3535 C
424.9639 429.3208 424.9668 431.0093 425.1284 432.2632 C
f/BBAccumRotation (0.136536) XT
397.5957 434.6592 m
397.9028 434.6172 398.2085 434.5752 398.5146 434.5337 C
398.625 434.7485 398.689 434.9307 398.7539 435.3022 C
398.5127 436.1377 398.271 436.9736 398.0288 437.8096 C
397.8843 436.7588 397.7402 435.7085 397.5957 434.6592 C
f/BBAccumRotation (0.136536) XT
396.7617 428.585 m
404.5435 423.9644 409.9019 423.3042 v
415.2607 422.6445 423.9673 422.3794 y
424.5376 426.6382 l
424.292 426.6411 424.248 426.6475 V
424.2422 426.6035 424.2363 426.5591 424.23 426.5156 C
423.6772 426.0576 423.124 425.5977 422.5698 425.1401 C
422.1655 424.9214 421.7798 424.8994 421.4302 424.6274 C
420.8618 424.6978 420.3979 424.8169 420.0044 424.957 C
419.8765 425.2974 419.8193 425.3613 419.8677 425.9116 C
420.4512 426.4102 421.0464 427.1177 421.0752 427.8857 C
419.9517 427.9688 419.5483 427.3135 418.6992 427.1416 c
418.3682 427.0752 417.9863 427.186 417.7627 427.1367 C
417.4785 426.582 417.272 425.937 416.8716 425.521 c
416.0918 424.709 412.1079 423.3843 409.894 423.5889 c
409.0239 423.6699 407.1929 425.4731 406.5103 425.8091 c
404.7832 426.6597 403.6631 429.4824 403.1455 431.2988 C
401.8384 431.6606 402.1089 432.959 400.8828 433.2715 C
400.877 433.2285 400.8701 433.1846 400.8647 433.1406 C
400.8208 433.1465 400.7769 433.1523 400.7339 433.1577 C
400.8428 431.9214 401.1069 431.4507 401.0747 430.2144 C
400.9873 430.2266 400.7671 430.104 400.6802 430.1162 C
399.2651 429.1201 397.6006 431.9976 397.4932 432.9351 C
397.4502 432.9414 397.4053 432.9478 397.3618 432.9531 C
396.7124 428.228 396.7617 428.585 y
f/BBAccumRotation (0.136536) XT
UUUu1 Ap
0.0275 0.4078 0.9373 0.0039 1 0.5843 0 Xa
505.9619 632.3262 m
345.0498 632.3262 L
345.0498 682.6914 L
505.9619 682.6914 L
505.9619 632.3262 L
f0 To
1 0 0 1 391.4033 646.5151 0 Tp
0 Tv
TP
2 Tr
0 0 0 1 0 0 0 Xa
0 R
0 0 0 1 0 0 0 XA
1.0026 w(mif) Tx 1 20 Tk
(fy) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
UUu0 0 0 1 k
1 w310.9219 46.5283 m
136.4688 46.5283 L
136.4688 352.7607 L
310.9219 352.7607 L
310.9219 46.5283 L
f0 0 0 0 1 1 1 Xa
304.1514 53.5576 m
143.2393 53.5576 L
143.2393 291.5908 L
304.1514 291.5908 L
304.1514 53.5576 L
fuu0 Ap
0 0 0 1 0 0 0 Xa
192.0273 76.1611 m
192.25 69.4502 189.3545 62.7939 184.1738 62.7939 c
178.9932 62.7939 177.1338 64.9365 174.6494 66.6377 c
166.6133 72.1377 161.8154 76.585 155.0986 83.1807 C
155.0068 90.417 158.8574 91.0068 160.6133 95.7119 C
160.5459 96.6279 158.4971 99.6709 158.1064 101.7275 c
157.5762 104.5205 160.5703 107.2764 161.1143 109.2471 c
161.7607 111.5928 160.0098 112.8955 159.6104 114.2607 c
158.5684 117.8154 159.3525 122.8232 160.6133 124.7881 c
161.873 126.7529 171.1396 132.3076 y
172.2227 134.4736 170.9248 135.4971 172.6445 136.8193 c
175.2686 138.8369 179.9141 139.5088 181.166 142.835 C
166.3232 152.5107 168.2607 183.8662 177.1553 197.9775 c
179.6689 201.9658 189.9043 212.8174 190.1895 215.0225 C
188.8701 220.792 187.5801 225.4346 186.1787 231.0635 c
181.9941 247.8896 184.0928 266.0537 191.6934 277.1846 c
197.7607 286.0674 204.499 286.4268 209.7402 283.7002 c
213.918 281.5283 217.3369 276.2217 219.2646 271.6689 c
222.9258 263.0303 224.0059 247.8525 224.0059 240.167 c
224.0059 235.3057 223.3154 227.958 223.2754 223.0439 C
224.3994 222.6533 225.998 222.5322 227.7871 222.542 C
228.2988 222.9443 227.9248 222.7197 228.79 223.0439 C
228.79 223.3779 228.79 223.7119 228.79 224.0459 C
230.832 227.9502 229.4414 239.042 230.335 247.1436 c
232.2041 264.0791 236.875 286.3701 257.8652 283.7002 C
266.0527 274.1768 271.2939 252.3154 266.2197 234.5732 c
264.1523 227.3447 259.5576 219.8311 258.3662 213.5186 C
272.3887 204.4346 285.6348 180.5459 276.915 156.8721 c
275.2119 152.2471 272.1973 147.6064 269.3955 143.8369 c
267.749 141.6221 265.4131 140.8701 264.3818 137.8213 C
267.3994 135.9209 279.542 125.1084 280.9258 122.2822 c
283.4141 117.1963 279.21 112.8721 278.4189 109.749 c
277.4697 105.999 281.9141 105.0498 280.9258 100.7256 c
280.1641 97.3975 277.9023 95.5986 276.915 92.7041 C
282.8838 89.4814 285.0693 86.4307 283.9336 78.6689 C
278.2783 74.2725 262.6035 58.4951 253.3535 63.6299 c
249.7861 65.6104 246.5078 71.0869 243.8291 74.1572 C
236.8672 72.3271 231.2959 69.4775 216.2568 70.6475 c
212.208 70.9619 196.874 74.1572 192.0273 76.1611 C
f0 0 0 0 1 1 1 Xa
201.2178 282.6982 m
196.1133 280.5068 191.6357 274.7803 189.1865 268.6611 c
185.7549 260.083 184.8525 241.4229 187.6836 231.0635 c
189.415 224.7256 193.0537 218.9893 193.1973 211.5127 C
179.5371 205.0596 166.5645 177.6494 174.6494 156.3701 c
179.9912 142.3096 201.3125 132.7666 214.7539 130.3018 c
224.7793 128.4639 231.1299 128.4639 238.3145 129.8018 c
242.4697 130.5752 247.8291 131.5283 251.8496 133.3096 c
265.0439 139.1572 282.248 159.2412 276.4131 181.9365 c
275.5098 185.4521 274.5068 189.7393 272.9043 192.9658 c
270.1113 198.5869 265.8818 204.0088 261.374 208.0049 c
258.9883 210.1201 255.6768 210.8018 254.8574 214.5205 C
257.3711 216.458 257.8242 219.5635 259.3691 222.542 c
268.5127 240.1709 269.4844 267.3408 255.8604 281.6963 C
246.335 281.5283 243.7705 278.7549 239.8184 272.5049 c
231.3613 259.1299 231.7188 242.4482 231.7979 221.54 C
231.0654 221.1123 230.3604 220.6318 229.793 220.0361 C
226.7852 220.0361 223.7764 220.0361 220.7695 220.0361 C
220.4531 220.915 220.6719 220.5225 220.2676 221.0381 C
225.375 245.8584 218.6133 290.167 201.2178 282.6982 c
f0 0 0 1 0 0 0 Xa
195.7041 165.7275 m
196.2051 165.7275 198.0293 164.5986 198.21 162.7197 C
198.6689 161.8916 198.4453 161.1455 197.709 160.2139 C
194.8486 157.6006 192.0439 159.8779 193.1973 163.7236 c
193.6992 165.3936 195.0107 164.9834 195.7041 165.7275 C
f253.1025 163.2217 m
253.6045 163.2217 256.7793 162.1357 256.4453 159.5459 C
255.8604 157.0381 253.2705 156.5381 252.1006 157.2061 c
250.9307 157.874 250.5967 160.3799 251.0977 161.7178 c
251.5996 163.0537 252.5352 162.626 253.1025 163.2217 C
f230.7949 138.8252 m
228.6279 139.1631 227.7002 140.2686 226.2832 140.8291 c
223.1152 142.085 220.8408 140.5654 217.7617 140.3291 C
217.3057 140.8721 217.7998 140.3701 217.2598 140.8291 C
217.2598 141.3311 217.2598 141.833 217.2598 142.333 C
217.9287 142.333 220.9365 142.835 221.6045 142.835 C
221.4385 144.8662 218.7314 144.3115 218.2627 145.8428 C
218.8057 146.2979 218.3047 145.8037 218.7637 146.3447 C
221.7461 145.7334 222.9277 144.3428 225.7822 143.8369 C
226.7012 145.3682 228.7803 145.4639 230.7949 145.8428 C
230.7949 145.3408 230.7949 144.5068 230.7949 144.0049 C
229.5205 143.3584 228.3525 143.7881 227.7871 142.333 C
229.8125 141.7861 230.583 141.3271 230.7949 138.8252 C
f0.4118 0.0039 0.4431 0 0.5922 0.851 0.5529 Xa
194.0752 103.2314 m
190.3486 103.2178 182.8525 105.0752 180.54 104.2354 c
178.2705 103.4092 173.6924 100.5576 169.5107 101.7275 c
166.5068 102.5693 165.7354 105.542 162.4932 106.2393 C
162.3252 105.7393 162.1582 105.2373 161.9912 104.7354 C
161.2656 103.7705 161.0977 102.4658 161.4902 101.7275 C
162.749 93.7471 175.583 87.6885 182.043 84.1826 c
188.3105 80.7822 195.6035 77.6318 203.0986 75.1592 c
223.7256 68.3525 248.3086 77.0244 261.249 85.1846 c
268.8594 89.9854 276.8271 93.5264 277.792 102.7314 C
276.9277 103.0303 275.9502 105.585 275.7871 106.7412 C
273.6748 108.417 272.8828 111.04 271.2754 113.2588 c
269.1777 116.1514 265.8857 119.3271 263.2549 121.7803 C
263.2549 122.1143 263.2549 122.4482 263.2549 122.7822 C
264.0898 122.9502 264.9248 123.1162 265.7607 123.2842 C
266.2354 122.5498 267.2041 120.8955 267.7656 121.7803 C
269.4053 123.0088 270.5479 125.167 270.7734 127.7959 C
267.9375 130.7334 265.5957 135.5205 260.2471 135.8174 C
250.2646 127.5439 227.1973 124.6201 211.1191 128.7979 C
208.2783 129.1318 206.4814 130.0518 202.2207 131.5557 c
197.96 133.0596 188.8301 138.3252 185.0508 139.3252 c
182.8018 139.9209 173.4609 133.7764 173.5215 132.3076 c
173.7002 127.9873 182.8184 109.6553 185.5527 107.7432 C
188.3936 106.7412 191.2344 105.7393 194.0752 104.7354 C
194.0752 104.2354 194.0752 103.7334 194.0752 103.2314 C
f0 0 0 0 1 1 1 Xa
172.6445 128.2979 m
168.9805 128.1885 166.5986 126.8955 164.623 125.79 c
162.6484 124.6865 162.1025 122.5771 161.6152 120.7783 c
159.8232 114.1494 165.7012 104.9463 170.6387 104.7354 C
174.2588 102.124 181.1846 105.9014 181.668 108.7471 C
178.9414 111.6963 173.376 123.7686 172.6445 128.2979 C
f272.9043 125.29 m
271.7275 122.7939 270.2158 121.1045 269.8965 117.7705 C
272.3359 116.083 273.2539 112.5889 276.4131 111.7549 C
277.7852 114.5947 278.915 115.751 278.9199 120.2764 C
278.2881 120.958 278.2354 121.1631 277.918 122.2822 C
276.1914 123.3799 275.1855 124.6475 272.9043 125.29 C
f163.1191 93.2061 m
160.8789 89.9307 157.6807 89.3037 157.6045 83.6807 C
165.2471 78.6221 180.0605 61.1533 185.1768 64.6318 c
189.3545 67.4717 189.7705 69.5498 189.6885 77.165 C
183.6807 80.0166 177.582 83.0674 172.1426 86.6885 c
169.1182 88.7021 166.9746 92.0518 163.1191 93.2061 C
f273.4053 90.7002 m
269.6914 85.3818 261.3037 81.6572 255.3584 78.6689 c
252.3555 77.1592 248.46 77.5967 247.8398 73.6553 C
249.8408 69.7881 252.6221 62.1592 259.3691 65.1338 c
266.1162 68.1084 285.5664 77.165 282.4287 83.6807 c
279.292 90.1963 278.8008 90.0244 273.4053 90.7002 C
fUuu1 Ap
0 0 0 1 0 0 0 Xa
254.3018 90.4912 m
246.8672 86.6143 238.9932 85.167 v
235.2217 84.4736 221.7627 83.376 Y
218.3818 121.1475 L
227.7207 121.1162 233.6885 121.835 v
239.6563 122.5537 248.0967 125.2314 Y
254.3018 90.4912 L
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
252.709 91.7686 m
244.792 86.7842 238.2734 86.0479 v
231.7539 85.3115 223.4932 85.1299 Y
219.9551 120.2471 L
227.124 119.9541 233.8633 120.7412 v
240.6025 121.5283 246.8564 123.9424 Y
252.709 91.7686 L
f/BBAccumRotation (0.136536) XT
Uu0 Ap
0 0 0 1 0 0 0 Xa
245.9844 122.5479 m
246.4229 119.3545 246.8613 116.1592 247.3008 112.9658 C
246.0967 112.79 245.8584 111.3779 244.583 111.1807 C
244.1309 111.7295 243.5918 112.1416 243.0547 112.5752 C
242.4863 112.5049 242.0234 112.3838 241.6289 112.2451 C
241.5098 111.9229 241.4551 111.9209 241.4746 111.4209 C
242.0781 111.1123 243.1289 110.6846 243.3027 109.7998 C
243.2148 109.7881 243.127 109.7764 243.04 109.7646 C
241.9434 108.9326 239.8486 111.4951 238.2715 111.3818 C
238.708 108.6982 241.2568 109.2451 241.748 106.5107 C
241.5898 106.2568 241.6104 105.9463 241.4619 105.6689 c
241.2617 105.2939 240.7832 105.0713 240.5205 104.7373 C
239.627 104.6143 239.2324 104.5361 238.5518 104.4678 C
238.2793 104.8975 238.0215 105.2822 237.4893 105.3916 C
237.2939 105.208 236.8154 105.1982 236.6064 105.001 c
236.0986 104.5283 236.4941 104.2217 235.4023 104.0342 C
235.0967 104.6807 234.6348 104.7588 233.7188 104.6045 C
233.4883 104.2686 233.2598 103.9443 233.0576 103.5771 C
231.7949 103.3213 230.4189 103.2549 229.876 104.3447 C
229.665 104.5811 229.6143 105.1787 229.5645 105.6396 C
230.251 106.5811 231.7666 108.7607 231.6123 110.2002 C
231.4043 110.2432 231.3779 110.2568 231.0693 110.2588 C
230.293 109.2451 229.1406 107.6104 227.4561 107.3564 C
227.3545 107.5557 227.3086 107.6572 227.2354 107.9932 C
227.8359 108.4736 228.5469 109.1143 228.5576 110.0479 C
228.2363 110.167 228.2324 110.2217 227.7344 110.2021 C
227.4111 110.3389 226.835 110.0557 226.5898 109.7764 C
226.2617 109.333 226.2305 108.751 225.7012 108.4521 C
224.9688 107.8018 223.5752 109.3506 222.792 109.3311 C
222.3418 112.6123 221.8906 115.8936 221.4404 119.1748 C
222.1826 119.2764 222.957 118.9443 223.7002 119.0459 C
223.707 119.0029 222.7383 118.4658 222.7246 117.6143 C
222.8271 117.5244 222.9365 117.3447 223.041 117.2549 C
224.2178 116.4873 226.0498 116.1064 227.7461 115.9541 c
230.8037 115.6787 232.6543 115.2139 233.1563 111.6162 C
233.2588 110.8721 233.3613 110.1279 233.4639 109.3838 C
233.1689 107.7529 231.4346 106.8799 231.2305 105.2002 C
231.5898 105.1475 231.5645 105.085 231.9229 105.0264 C
232.5781 106.29 233.9854 105.6475 235.0547 105.5908 c
236.374 105.5205 237.1182 106.3564 237.9834 106.6631 c
238.8994 106.9854 239.1982 106.3135 239.9102 106.2588 C
240.0049 106.5068 240.0459 106.501 240.1006 106.8193 C
239.1123 107.6865 237.709 108.5576 237.0254 109.7393 c
235.7197 111.999 236.4658 115.9541 237.9072 116.9482 c
239.5879 118.1104 244.4307 119.1182 244.8516 121.0537 C
244.9355 121.2236 244.9229 121.29 244.9111 121.5967 C
244.5986 121.8037 244.1748 121.415 243.96 121.7354 C
244.665 121.7881 245.2783 122.4951 245.9844 122.5479 C
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
240.1582 114.1826 m
239.875 113.7959 239.6621 113.7959 239.6299 113.1729 C
239.7666 113.1475 239.9033 113.1221 240.041 113.0967 C
240.7441 112.6084 242.0586 112.8174 243.2627 113.0029 C
243.3828 113.3252 243.4375 113.3291 243.417 113.8291 C
243.2939 113.9482 243.3662 113.8564 243.25 114.0732 C
243.0762 114.0479 242.9004 114.0244 242.7256 114.001 C
242.4512 113.6592 242.0791 113.5244 241.4668 113.4268 C
241.085 113.7979 240.7773 114.1006 240.1582 114.1826 C
f/BBAccumRotation (0.136536) XT
228.7764 112.3506 m
228.5137 111.7451 228.2559 111.3506 227.3271 111.2158 C
227.0234 111.458 226.8936 111.5107 226.3545 111.4834 C
226.2451 111.1885 226.1992 111.2158 226.1826 110.792 C
226.4053 110.6709 226.3125 110.665 226.6113 110.583 C
227.5195 110.1104 229.8389 111.333 229.8809 112.1006 C
229.4648 112.29 229.4502 112.4092 228.7764 112.3506 C
f/BBAccumRotation (0.136536) XT
0 0 0 1 0 0 0 Xa
242.5439 104.6143 m
243.1826 104.4678 245.3564 101.6924 245.5957 100.8877 C
245.5088 100.876 245.4219 100.8643 245.334 100.8506 C
245.3398 100.8076 245.3467 100.7646 245.3525 100.7197 C
245.3086 100.7139 245.2646 100.708 245.2207 100.7021 C
245.2148 100.7471 245.209 100.79 245.2031 100.833 C
244.3193 101.1436 242.4316 101.6221 241.9141 102.3877 C
241.3633 103.0654 242.2861 104.1084 242.5439 104.6143 C
f/BBAccumRotation (0.136536) XT
227.5195 98.1357 m
227.4502 99.1709 228.7695 102.3643 229.7168 102.585 C
230.0615 101.8623 230.5664 101.5869 230.793 100.5928 C
229.5088 99.9775 229.0908 98.4756 227.5195 98.1357 C
f/BBAccumRotation (0.136536) XT
234.1904 100.3838 m
234.9209 100.2607 235.6504 100.1396 236.3809 100.0166 C
237.1533 100.1748 237.9404 101.1182 238.915 101.0322 c
239.5898 100.9736 240.3896 100.5459 241.0107 100.3838 c
241.9863 100.1318 243.1475 100.5713 243.5352 99.5283 C
243.4482 99.3799 243.4932 99.4854 243.4404 99.2471 C
242.6377 98.6025 241.834 97.9561 241.0313 97.3115 C
240.3242 96.8975 239.6055 96.8467 239.0215 96.3662 c
238.3896 95.8467 238.208 95.0947 237.2334 94.7842 c
236.2588 94.4736 235.9316 95.5107 235.3369 95.7412 c
234.7588 95.9658 234.2041 95.8584 233.5586 96.0303 c
232.249 96.3818 230.959 96.8154 229.9023 97.5225 C
229.8906 97.6084 229.8779 97.6963 229.8672 97.7842 C
230.0996 98.0381 230.3311 98.2939 230.5645 98.5479 C
231.1592 98.7627 231.7529 98.9795 232.3477 99.1943 C
232.5498 99.3174 232.7305 99.6846 232.9316 99.8096 c
233.3594 100.0732 233.8652 100.0693 234.1904 100.3838 C
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
237.9785 98.9053 m
237.75 98.5615 237.4434 97.9307 237.0732 97.71 C
236.9043 97.5596 236.6611 97.5244 236.3047 97.4697 C
236.0215 97.8428 235.708 98.126 235.3721 98.4131 C
234.5586 98.3115 233.7891 98.1416 233.1582 97.9756 C
233.0664 97.8037 233.0713 97.8135 232.9316 97.6768 C
233.0713 97.5518 232.9238 97.6631 233.0811 97.5635 C
234.3496 95.8428 240.0996 96.4834 240.377 98.9678 C
240.333 98.9619 240.29 98.9541 240.2461 98.9482 C
240.2402 98.9932 240.2344 99.0361 240.2285 99.0791 C
239.5771 99.0654 238.79 99.0166 237.9785 98.9053 C
f/BBAccumRotation (0.136536) XT
0 0 0 1 0 0 0 Xa
223.1953 96.0518 m
223.832 95.3701 224.7148 93.499 224.8906 92.2861 C
224.6768 92.1279 224.6934 92.0908 224.4023 91.9502 C
224.2588 92.0381 224.0156 92.0908 223.8408 92.1416 C
223.3604 93.1084 223.3564 94.7979 223.1953 96.0518 C
f/BBAccumRotation (0.136536) XT
250.7275 98.4463 m
250.4209 98.4053 250.1143 98.3623 249.8086 98.3213 C
249.6992 98.5361 249.6348 98.7178 249.5693 99.0908 C
249.8105 99.9248 250.0527 100.7607 250.2939 101.5986 C
250.4385 100.5459 250.583 99.4971 250.7275 98.4463 C
f/BBAccumRotation (0.136536) XT
251.5625 92.374 m
243.7803 87.751 238.4209 87.0928 v
233.0625 86.4326 224.3555 86.167 y
223.7852 90.4268 l
224.0313 90.4287 224.0752 90.4346 V
224.082 90.3916 224.0879 90.3467 224.0938 90.3037 C
224.6465 89.8447 225.2002 89.3857 225.7539 88.9287 C
226.1582 88.71 226.5439 88.6865 226.8936 88.415 C
227.4619 88.4854 227.9258 88.6045 228.3193 88.7451 C
228.4463 89.085 228.5039 89.1494 228.4561 89.7002 C
227.8721 90.1982 227.2773 90.9053 227.248 91.6729 C
228.3721 91.7568 228.7754 91.1025 229.624 90.9307 c
229.9551 90.8623 230.3369 90.9736 230.5615 90.9248 C
230.8457 90.3701 231.0518 89.7256 231.4521 89.3096 c
232.2314 88.4971 236.2148 87.1729 238.4297 87.3779 c
239.2998 87.458 241.1309 89.2607 241.8135 89.5967 c
243.54 90.4482 244.6602 93.2705 245.1787 95.0869 C
246.4844 95.4482 246.2148 96.7471 247.4404 97.0596 C
247.4473 97.0166 247.4531 96.9717 247.459 96.9287 C
247.5029 96.9346 247.5459 96.9404 247.5898 96.9463 C
247.4805 95.71 247.2168 95.2393 247.249 94.0029 C
247.3359 94.0146 247.5566 93.8916 247.6436 93.9033 C
249.0586 92.9072 250.7227 95.7842 250.8311 96.7236 C
250.874 96.7295 250.918 96.7354 250.9619 96.7412 C
251.6113 92.0166 251.5625 92.374 y
f/BBAccumRotation (0.136536) XT
UUU1 Ap
0.4118 0.0039 0.4431 0 0.5922 0.851 0.5529 Xa
304.1514 296.6143 m
143.2393 296.6143 L
143.2393 346.9805 L
304.1514 346.9805 L
304.1514 296.6143 L
f0 To
1 0 0 1 192.6377 310.8032 0 Tp
0 Tv
TP
2 Tr
0 0 0 1 0 0 0 Xa
0 R
0 0 0 1 0 0 0 XA
1.0026 w(obey) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
Uu0 0 0 1 k
1 w512.7324 46.5283 m
338.2793 46.5283 L
338.2793 352.7607 L
512.7324 352.7607 L
512.7324 46.5283 L
f0 0 0 0 1 1 1 Xa
505.9629 53.5596 m
345.0508 53.5596 L
345.0508 291.5908 L
505.9629 291.5908 L
505.9629 53.5596 L
fuu0 Ap
0 0 0 1 0 0 0 Xa
456.2969 76.6631 m
456.0742 69.9521 458.9707 63.2959 464.1504 63.2959 c
469.3301 63.2959 471.1895 65.4385 473.6758 67.1396 c
481.7109 72.6396 486.5078 77.085 493.2266 83.6807 C
493.3164 90.9189 489.4668 91.5088 487.7109 96.2139 C
487.7773 97.1299 489.8281 100.1729 490.2188 102.2295 c
490.748 105.0225 487.7539 107.7783 487.2109 109.749 c
486.5645 112.0928 488.3145 113.3975 488.7148 114.7627 c
489.7559 118.3174 488.9727 123.3252 487.7109 125.29 c
486.4512 127.2549 477.1836 132.8096 y
476.1016 134.9736 477.3984 135.999 475.6797 137.3213 c
473.0547 139.3389 468.4102 140.0088 467.1582 143.3369 C
482.002 153.0107 480.0645 184.3682 471.168 198.4795 c
468.6543 202.4658 458.4199 213.3193 458.1348 215.5244 C
459.4531 221.2939 460.7441 225.9365 462.1445 231.5654 c
466.3301 248.3896 464.2324 266.5557 456.6309 277.6846 c
450.5645 286.5693 443.8242 286.9268 438.584 284.2021 c
434.4063 282.0303 430.9883 276.7217 429.0586 272.1709 c
425.3984 263.5322 424.3184 248.3525 424.3184 240.6689 c
424.3184 235.8076 425.0078 228.458 425.0488 223.5439 C
423.9248 223.1533 422.3262 223.0322 420.5371 223.0439 C
420.0244 223.4463 420.4004 223.2217 419.5342 223.5439 C
419.5342 223.8779 419.5342 224.2139 419.5342 224.5479 C
417.4922 228.4502 418.8828 239.5439 417.9893 247.6455 c
416.1211 264.5791 411.4482 286.8721 390.459 284.2021 C
382.2705 274.6768 377.0293 252.8154 382.1045 235.0752 c
384.1709 227.8467 388.7666 220.3311 389.958 214.0205 C
375.9355 204.9365 362.6885 181.0479 371.4092 157.374 c
373.1123 152.749 376.127 148.1084 378.9287 144.3389 c
380.5762 142.1221 382.9111 141.3721 383.9424 138.3232 C
380.9248 136.4229 368.7822 125.6084 367.3984 122.7822 c
364.9111 117.6982 369.1143 113.374 369.9053 110.251 c
370.8545 106.501 366.4111 105.5518 367.3984 101.2275 c
368.1602 97.8975 370.4219 96.0986 371.4092 93.2061 C
365.4404 89.9834 363.2559 86.9307 364.3906 79.1709 C
370.0459 74.7744 385.7207 58.9951 394.9707 64.1299 c
398.5381 66.1104 401.8164 71.5889 404.4941 74.6572 C
411.457 72.8271 417.0273 69.9795 432.0664 71.1494 c
436.1162 71.4639 451.4492 74.6572 456.2969 76.6631 C
f0 0 0 0 1 1 1 Xa
447.1055 283.2002 m
452.2109 281.0088 456.6895 275.2822 459.1367 269.1631 c
462.5703 260.585 463.4727 241.9248 460.6406 231.5654 c
458.9082 225.2275 455.2715 219.4912 455.127 212.0146 C
468.7871 205.5615 481.7598 178.1494 473.6758 156.8721 c
468.332 142.8115 447.0117 133.2686 433.5703 130.8037 c
423.5449 128.9658 417.1953 128.9658 410.0098 130.3037 c
405.8535 131.0752 400.4951 132.0303 396.4746 133.8115 c
383.2803 139.6572 366.0762 159.7412 371.9111 182.4385 c
372.8145 185.9541 373.8174 190.2412 375.4199 193.4658 c
378.2129 199.0889 382.4424 204.5107 386.9502 208.5049 c
389.3359 210.6201 392.6484 211.3037 393.4668 215.0225 C
390.9531 216.96 390.5 220.0654 388.9551 223.0439 c
379.8115 240.6729 378.8398 267.8428 392.4639 282.1963 C
401.9883 282.0303 404.5527 279.2549 408.5059 273.0068 c
416.9629 259.6318 416.6055 242.9502 416.5264 222.04 C
417.2578 221.6123 417.9629 221.1318 418.5313 220.5361 C
421.5391 220.5361 424.5469 220.5361 427.5547 220.5361 C
427.8711 221.417 427.6523 221.0244 428.0566 221.54 C
422.9492 246.3604 429.71 290.6689 447.1055 283.2002 c
f0 0 0 1 0 0 0 Xa
452.6211 166.2295 m
452.1191 166.2295 450.2949 165.1006 450.1133 163.2217 C
449.6543 162.3936 449.8789 161.6455 450.6152 160.7158 C
453.4766 158.1025 456.2793 160.3779 455.127 164.2236 c
454.625 165.8955 453.3145 165.4854 452.6211 166.2295 C
f395.2207 163.7236 m
394.7197 163.7236 391.5449 162.6357 391.8789 160.0459 C
392.4639 157.54 395.0537 157.0381 396.2236 157.708 c
397.3936 158.376 397.7275 160.8818 397.2266 162.2197 c
396.7246 163.5557 395.7891 163.126 395.2207 163.7236 C
f417.5293 139.3271 m
419.6953 139.665 420.624 140.7705 422.041 141.3311 c
425.209 142.5869 427.4834 141.0654 430.5625 140.8291 C
431.0176 141.3721 430.5234 140.8721 431.0645 141.3311 C
431.0645 141.833 431.0645 142.335 431.0645 142.835 C
430.3955 142.835 427.3877 143.3369 426.7197 143.3369 C
426.8848 145.3682 429.5928 144.8135 430.0615 146.3447 C
429.5176 146.7998 430.0195 146.3057 429.5605 146.8447 C
426.5781 146.2354 425.3965 144.8447 422.542 144.3389 C
421.623 145.8701 419.5439 145.9658 417.5293 146.3447 C
417.5293 145.8428 417.5293 145.0068 417.5293 144.5068 C
418.8027 143.8604 419.9717 144.29 420.5371 142.835 C
418.5117 142.2881 417.7422 141.8271 417.5293 139.3271 C
f0.4118 0.0039 0.4431 0 0.5922 0.851 0.5529 Xa
454.25 103.7334 m
457.9746 103.7178 465.4727 105.5771 467.7852 104.7354 c
470.0547 103.9111 474.6309 101.0576 478.8125 102.2295 c
481.8184 103.0713 482.5879 106.0439 485.832 106.7412 C
486 106.2412 486.166 105.7393 486.332 105.2373 C
487.0586 104.2725 487.2266 102.9678 486.834 102.2295 C
485.5742 94.249 472.7402 88.1885 466.2813 84.6846 c
460.0137 81.2842 452.7207 78.1338 445.2266 75.6611 c
424.5977 68.8545 400.0156 77.5264 387.0752 85.6865 c
379.4648 90.4873 371.4971 94.0264 370.5322 103.2334 C
371.3965 103.5322 372.374 106.085 372.5371 107.2432 C
374.6494 108.9189 375.4424 111.542 377.0488 113.7588 c
379.1465 116.6533 382.4385 119.8271 385.0703 122.2822 C
385.0703 122.6162 385.0703 122.9502 385.0703 123.2842 C
384.2344 123.4521 383.3994 123.6182 382.5635 123.7861 C
382.0889 123.0518 381.1201 121.3975 380.5576 122.2822 C
378.9189 123.5107 377.7764 125.667 377.5498 128.2979 C
380.3867 131.2334 382.7285 136.0225 388.0781 136.3193 C
398.0586 128.0459 421.127 125.1221 437.2051 129.2998 C
440.0449 129.6338 441.8418 130.5537 446.1035 132.0576 c
450.3652 133.5615 459.4941 138.8271 463.2734 139.8271 c
465.5234 140.4229 474.8633 134.2783 474.8027 132.8096 c
474.623 128.4873 465.5059 110.1553 462.7715 108.2451 C
459.9316 107.2432 457.0898 106.2412 454.25 105.2373 C
454.25 104.7354 454.25 104.2354 454.25 103.7334 C
f0 0 0 0 1 1 1 Xa
475.6797 128.7979 m
479.3438 128.6904 481.7266 127.3955 483.7012 126.292 c
485.6758 125.1885 486.2227 123.0791 486.709 121.2803 c
488.502 114.6514 482.623 105.4482 477.6855 105.2373 C
474.0664 102.624 467.1387 106.4033 466.6563 109.249 C
469.3828 112.1963 474.9473 124.2705 475.6797 128.7979 C
f375.4199 125.79 m
376.5957 123.2939 378.1084 121.6064 378.4277 118.2725 C
375.9883 116.585 375.0713 113.0908 371.9111 112.2568 C
370.5391 115.0967 369.4092 116.251 369.4043 120.7783 C
370.0371 121.46 370.0889 121.665 370.4063 122.7822 C
372.1328 123.8818 373.1387 125.1494 375.4199 125.79 C
f485.2051 93.708 m
487.4453 90.4326 490.6445 89.8057 490.7188 84.1826 C
483.0781 79.124 468.2637 61.6553 463.1484 65.1338 c
458.9707 67.9736 458.5547 70.0518 458.6367 77.665 C
464.6426 80.5186 470.7422 83.5693 476.1816 87.1904 c
479.2051 89.2021 481.3496 92.5518 485.2051 93.708 C
f374.9189 91.2021 m
378.6328 85.8818 387.0205 82.1572 392.9658 79.1709 c
395.9678 77.6592 399.8643 78.0986 400.4844 74.1572 C
398.4834 70.2881 395.7021 62.6592 388.9551 65.6338 c
382.208 68.6084 362.7578 77.667 365.8955 84.1826 c
369.0322 90.6982 369.5234 90.5244 374.9189 91.2021 C
fUuu1 Ap
0 0 0 1 0 0 0 Xa
394.0225 90.9912 m
401.457 87.1162 409.332 85.6689 v
413.1025 84.9756 426.5625 83.8779 Y
429.9424 121.6494 L
420.6035 121.6162 414.6357 122.335 v
408.667 123.0537 400.2266 125.7314 Y
394.0225 90.9912 L
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
395.6162 92.2705 m
403.5313 87.2861 410.0508 86.5498 v
416.5703 85.8115 424.8311 85.6299 Y
428.3691 120.749 L
421.2012 120.4541 414.4609 121.2432 v
407.7207 122.0303 401.4678 124.4443 Y
395.6162 92.2705 L
f/BBAccumRotation (0.136536) XT
Uu0 Ap
0 0 0 1 0 0 0 Xa
402.3398 123.0479 m
401.9014 119.8564 401.4629 116.6611 401.0234 113.4678 C
402.2275 113.292 402.4648 111.8779 403.7402 111.6807 C
404.1934 112.2314 404.7324 112.6436 405.2695 113.0752 C
405.8379 113.0068 406.3008 112.8857 406.6953 112.7451 C
406.8145 112.4248 406.8691 112.4209 406.8496 111.9229 C
406.2461 111.6143 405.1953 111.1846 405.0215 110.3018 C
405.1094 110.29 405.1973 110.2783 405.2842 110.2646 C
406.3809 109.4346 408.4756 111.9971 410.0527 111.8838 C
409.6152 109.2002 407.0684 109.7471 406.5762 107.0127 C
406.7344 106.7588 406.7139 106.4463 406.8613 106.1709 c
407.0625 105.7939 407.541 105.5732 407.8027 105.2373 C
408.6973 105.1143 409.0918 105.0361 409.7725 104.9678 C
410.0449 105.3975 410.3027 105.7822 410.834 105.8916 C
411.0303 105.71 411.5078 105.6982 411.7168 105.5029 c
412.2246 105.0303 411.8301 104.7236 412.9219 104.5361 C
413.2266 105.1826 413.6895 105.2607 414.6055 105.1064 C
414.835 104.7705 415.0635 104.4463 415.2656 104.0791 C
416.5283 103.8213 417.9043 103.7568 418.4473 104.8447 C
418.6582 105.083 418.71 105.6807 418.7598 106.1416 C
418.0732 107.083 416.5566 109.2627 416.7109 110.7002 C
416.9199 110.7432 416.9453 110.7588 417.2539 110.7607 C
418.0313 109.7471 419.1836 108.1123 420.8672 107.8564 C
420.9707 108.0576 421.0156 108.1572 421.0889 108.4951 C
420.4883 108.9756 419.7773 109.6162 419.7666 110.5498 C
420.0869 110.6689 420.0918 110.7236 420.5898 110.7041 C
420.9141 110.8408 421.4893 110.5576 421.7344 110.2783 C
422.0625 109.835 422.0938 109.2529 422.623 108.9541 C
423.3555 108.3037 424.75 109.8525 425.5322 109.833 C
425.9824 113.1123 426.4336 116.3955 426.8848 119.6768 C
426.1406 119.7783 425.3672 119.4463 424.623 119.5479 C
424.6172 119.5049 425.5859 118.9678 425.5996 118.1143 C
425.4971 118.0244 425.3867 117.8447 425.2832 117.7568 C
424.1064 116.9873 422.2734 116.6084 420.5781 116.4561 c
417.5205 116.1807 415.6699 115.7139 415.168 112.1162 C
415.0645 111.374 414.9629 110.6299 414.8613 109.8857 C
415.1563 108.2549 416.8896 107.3799 417.0938 105.7002 C
416.7344 105.6494 416.7598 105.5869 416.4023 105.5283 C
415.7461 106.792 414.3389 106.1494 413.2695 106.0908 c
411.9502 106.0205 411.2051 106.8584 410.3408 107.1631 c
409.4248 107.4873 409.126 106.8154 408.4131 106.7588 C
408.3193 107.0088 408.2783 107.0029 408.2236 107.3213 C
409.2119 108.1885 410.6152 109.0576 411.2988 110.2412 c
412.6035 112.501 411.8574 116.4541 410.418 117.4502 c
408.7363 118.6123 403.8926 119.6201 403.4727 121.5557 C
403.3877 121.7256 403.4004 121.79 403.4131 122.0986 C
403.7256 122.3037 404.1484 121.917 404.3652 122.2373 C
403.6582 122.2881 403.0459 122.9971 402.3398 123.0479 C
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
408.165 114.6846 m
408.4492 114.2979 408.6621 114.2979 408.6943 113.6748 C
408.5576 113.6494 408.4199 113.624 408.2832 113.5986 C
407.5801 113.1084 406.2656 113.3193 405.0605 113.5049 C
404.9414 113.8271 404.8867 113.8311 404.9063 114.3291 C
405.0313 114.4482 404.958 114.3584 405.0742 114.5732 C
405.248 114.5498 405.4238 114.5244 405.5986 114.501 C
405.873 114.1611 406.2451 114.0264 406.8574 113.9287 C
407.2383 114.2998 407.5459 114.6025 408.165 114.6846 C
f/BBAccumRotation (0.136536) XT
419.5469 112.8525 m
419.8105 112.2471 420.0684 111.8525 420.9971 111.7178 C
421.3008 111.96 421.4307 112.0127 421.9688 111.9854 C
422.0781 111.6904 422.125 111.7178 422.1416 111.292 C
421.9189 111.1709 422.0117 111.165 421.7129 111.085 C
420.8047 110.6123 418.4844 111.835 418.4434 112.6025 C
418.8594 112.792 418.874 112.9092 419.5469 112.8525 C
f/BBAccumRotation (0.136536) XT
0 0 0 1 0 0 0 Xa
405.7813 105.1143 m
405.1426 104.9678 402.9668 102.1943 402.7275 101.3896 C
402.8145 101.376 402.9023 101.3643 402.9893 101.3525 C
402.9844 101.3096 402.9775 101.2646 402.9717 101.2217 C
403.0156 101.2158 403.0586 101.21 403.1035 101.2041 C
403.1094 101.2471 403.1152 101.29 403.1211 101.335 C
404.0049 101.6455 405.8926 102.124 406.4102 102.8896 C
406.9609 103.5674 406.0381 104.6104 405.7813 105.1143 C
f/BBAccumRotation (0.136536) XT
420.8047 98.6377 m
420.873 99.6709 419.5547 102.8643 418.6074 103.085 C
418.2617 102.3643 417.7578 102.0869 417.5313 101.0928 C
418.8154 100.4795 419.2334 98.9775 420.8047 98.6377 C
f/BBAccumRotation (0.136536) XT
414.1328 100.8857 m
413.4033 100.7627 412.6738 100.6396 411.9434 100.5186 C
411.1699 100.6768 410.3828 101.6201 409.4082 101.5342 c
408.7344 101.4756 407.9346 101.0459 407.3145 100.8857 c
406.3379 100.6338 405.1777 101.0732 404.7891 100.0303 C
404.876 99.8818 404.8301 99.9873 404.8838 99.749 C
405.6865 99.1045 406.4893 98.458 407.293 97.8135 C
407.999 97.3994 408.7188 97.3486 409.3027 96.8682 c
409.9336 96.3486 410.1162 95.5967 411.0908 95.2842 c
412.0654 94.9756 412.3926 96.0127 412.9863 96.2432 c
413.5654 96.4678 414.1191 96.3604 414.7656 96.5322 c
416.0752 96.8818 417.3652 97.3174 418.4209 98.0225 C
418.4336 98.1104 418.4453 98.1982 418.457 98.2861 C
418.2246 98.54 417.9922 98.7959 417.7598 99.0498 C
417.165 99.2646 416.5703 99.4814 415.9766 99.6963 C
415.7744 99.8193 415.5938 100.1865 415.3926 100.3115 c
414.9648 100.5752 414.459 100.5693 414.1328 100.8857 C
f/BBAccumRotation (0.136536) XT
0 0 0 0 1 1 1 Xa
410.3457 99.4072 m
410.5742 99.0635 410.8809 98.4326 411.251 98.2119 C
411.4199 98.0596 411.6631 98.0244 412.0195 97.9717 C
412.3027 98.3447 412.6172 98.6279 412.9512 98.915 C
413.7656 98.8115 414.5352 98.6436 415.165 98.4775 C
415.2578 98.3037 415.2529 98.3135 415.3906 98.1768 C
415.252 98.0518 415.4004 98.165 415.2422 98.0654 C
413.9746 96.3447 408.2246 96.9854 407.9473 99.4678 C
407.9902 99.4619 408.0342 99.4561 408.0781 99.4502 C
408.084 99.4951 408.0898 99.5381 408.0957 99.5811 C
408.7471 99.5674 409.5332 99.5186 410.3457 99.4072 C
f/BBAccumRotation (0.136536) XT
0 0 0 1 0 0 0 Xa
425.1289 96.5518 m
424.4922 95.8721 423.6094 94.001 423.4336 92.7881 C
423.6475 92.6299 423.6309 92.5928 423.9219 92.4521 C
424.0654 92.54 424.3086 92.5928 424.4824 92.6436 C
424.9648 93.6104 424.9668 95.2979 425.1289 96.5518 C
f/BBAccumRotation (0.136536) XT
397.5957 98.9482 m
397.9033 98.9072 398.209 98.8643 398.5156 98.8232 C
398.625 99.0381 398.6895 99.2197 398.7539 99.5908 C
398.5137 100.4268 398.2715 101.2627 398.0293 102.0986 C
397.8848 101.0479 397.7402 99.9971 397.5957 98.9482 C
f/BBAccumRotation (0.136536) XT
396.7617 92.874 m
404.5439 88.2529 409.9023 87.5928 v
415.2617 86.9346 423.9678 86.6689 y
424.5381 90.9268 l
424.293 90.9307 424.248 90.9365 V
424.2422 90.8936 424.2363 90.8486 424.2305 90.8057 C
423.6777 90.3467 423.125 89.8877 422.5703 89.4287 C
422.166 89.21 421.7803 89.1885 421.4307 88.917 C
420.8623 88.9873 420.3984 89.1064 420.0049 89.2471 C
419.877 89.5869 419.8203 89.6514 419.8682 90.2002 C
420.4512 90.7002 421.0469 91.4072 421.0762 92.1748 C
419.9521 92.2588 419.5488 91.6025 418.6992 91.4307 c
418.3691 91.3643 417.9863 91.4756 417.7637 91.4268 C
417.4785 90.8721 417.2725 90.2256 416.8721 89.8096 c
416.0918 88.999 412.1084 87.6729 409.8945 87.8779 c
409.0244 87.96 407.1934 89.7627 406.5107 90.0986 c
404.7832 90.9482 403.6641 93.7725 403.1465 95.5889 C
401.8389 95.9502 402.1094 97.249 400.8828 97.5615 C
400.877 97.5186 400.8711 97.4736 400.8652 97.4307 C
400.8213 97.4365 400.7773 97.4424 400.7344 97.4463 C
400.8438 96.21 401.1074 95.7393 401.0752 94.5029 C
400.9883 94.5166 400.7676 94.3936 400.6807 94.4053 C
399.2656 93.4092 397.6016 96.2861 397.4941 97.2236 C
397.4512 97.2314 397.4063 97.2373 397.3623 97.2432 C
396.7129 92.5166 396.7617 92.874 y
f/BBAccumRotation (0.136536) XT
UUUu1 Ap
0.4118 0.0039 0.4431 0 0.5922 0.851 0.5529 Xa
505.9629 296.6162 m
345.0508 296.6162 L
345.0508 346.9805 L
505.9629 346.9805 L
505.9629 296.6162 L
f0 To
1 0 0 1 391.4043 310.8032 0 Tp
0 Tv
TP
2 Tr
0 0 0 1 0 0 0 Xa
0 R
0 0 0 1 0 0 0 XA
1.0026 w(mif) Tx 1 20 Tk
(fy) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
UULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
