%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8.0.1
%%For: (george g rat) ( )
%%Title: (CRISCOH.ai)
%%CreationDate: (2/28/2002) (9:59 AM)
%%BoundingBox: -74 186 623 575
%%HiResBoundingBox: -73.8623 186.3188 622.2739 574.4307
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 305.5 375.5 305.5 375.5
%AI3_TileBox: 7 -4 599 740
%AI3_DocumentPreview: None
%AI5_ArtSize: 1296 1296
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -414.5 843.5 0.6667 862 607 18 0 1 122 77 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:7 -4
%%AI3_PaperRect:-8 784 604 -8
%%AI3_Margin:8 -40 -9 8
%AI7_GridSettings: 18 1 18 1 1 0 0.8333 0.8333 0.8333 0.8333 0.8333 0.8333
%AI7_Thumbnail: 128 72 8
%%BeginData: 19956 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C452F3635362F3635362F3635362F3635362F3635362F3635362F3635
%362F3635362F3635362F3635362F3635362F3635362F3635362F3635362F
%3635362F3635362F3635362F3635362F3635362F3635362F3635362F3635
%362F3635362F3635362F3635362F3635362F3635362F3635362F3635362F
%3635362F3635362F363536352F362F352F362F352F362F352F362F352F36
%2F352F362F352F362F352F362F352F362F352F362F352F362F352F362F35
%2F362F35595A595984847E59A8A8A884A8847E598484593559362F352F36
%2F352F362F352F362F352F362F352F362F352F362F352F362F352F362F35
%2F362F352F362F352F362F352F362F352F362F2F362F362F362F362F362F
%362F362F362F362F362F362F362F362F362F362F362F362F362F362F362F
%362F362F365A5A8484A8AECFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFAEA884845A59362F362F362F362F362F362F362F362F362F362F
%362F362F362F362F362F362F362F362F362F362F362F362F362F36362F35
%2F362F352F362F352F362F352F362F352F362F352F362F352F362F352F36
%2F352F362F352F362F598484A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF
%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFCF83845A2F352F362F352F36
%2F352F362F352F362F352F362F352F362F352F362F352F362F352F362F35
%2F362F352F35362F3635362F3635362F3635362F3635362F3635362F3635
%362F3635362F3635362F3635367E84CFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFAE8460362F3635362F3635362F3635362F3635362F3635362F3635362F
%3635362F3635362F3635362F36362F352F362F352F362F352F362F352F36
%2F352F362F352F362F352F362F352F362F357E84A8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFCF835A362F352F362F352F362F352F362F35
%2F362F352F362F352F362F352F362F352F362F352F2F362F362F362F362F
%362F362F362F362F362F362F362F362F362F362F362F367E84CFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFFF845A362F362F
%362F362F362F362F362F362F362F362F362F362F362F362F362F362F3635
%2F362F352F362F352F362F352F362F352F362F352F362F352F362F355384
%CFCFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF
%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF
%A8CFA8CFA8592F362F352F362F352F362F352F362F352F362F352F362F35
%2F362F352F362F2F3635362F3635362F3635362F3635362F3635362F3635
%362F36355AAEFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFCFA8362F3635362F3635362F3635362F
%3635362F3635362F3635362F363536352F362F352F362F352F362F352F36
%2F352F362F352F362F355AA8A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA88359362F35
%2F362F352F362F352F362F352F362F352F362F352F362F2F362F362F362F
%362F362F362F362F362F362F362F362F5AA8FFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFA8362F362F362F362F362F362F362F362F362F362F362F362F
%36362F352F362F352F362F352F362F352F362F352F362F83A8CFA8CFA8C9
%A1A0A0FD05999AA0A1CFA8A09AA0A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF
%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF
%A8CFA8CFA8CFA8CFA8CFA8CFA8842F352F362F352F362F352F362F352F36
%2F352F362F352F35362F3635362F3635362F3635362F3635362F3684AECF
%FFCFFFCAA09299929992999299929992999993929992A0CFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFAE7E3635362F3635
%362F3635362F3635362F3635362F36362F352F362F352F362F352F362F35
%2F362F35A8FFA8CFA8A89993929392939293929392939293929392939293
%99CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8362F352F362F352F362F352F362F352F362F352F2F362F362F362F
%362F362F362F362F362F60CFFFCFFFCF9A92939299929392999293929992
%939299929392999293CFFFCFFFCFFFCFFFCFCACFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFFF5A2F362F362F362F362F362F362F362F362F
%36352F362F352F362F352F362F352F362F7DA8CFA8CFA7936E9392936E93
%92936E939AA0A1A7A0A0999392936E9392A1A8CFA8CFA8CFA0936E93A0CF
%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF
%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8842F352F362F352F36
%2F352F362F352F362F2F3635362F3635362F3635362F3659A8CFFFCFFFCF
%9992999299929992999293CAFFCFFFCFFFCFFFCA9992999299C3FFCFFFCF
%FFC99992999299C9FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%A85A3635362F3635362F3635362F363536352F362F352F362F352F362F35
%2FA8A8CFA8FFA89392939293929392939292A7CFA8FFA8CFA8FFA8CFA892
%92939299A8CFA8FFA89392939293929AA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8A859362F352F362F352F362F352F362F2F362F362F
%362F362F362F362FA8CFFFCFFFCF9A92999293929992939299C9FFCFFFCF
%FFCFFFCFFFCFFFCF939299BCFFCFFFCFFF92999293929992FFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFA85A362F362F362F362F362F
%362F36362F352F362F352F362F352FA8A8CFA8CFA8A092936E9392936E93
%92939ACFA8CFA8CFA8CFA8CFA8CFA8CFA1936E99A8CFA8CFA8936E939293
%6E99A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF
%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8A85936
%2F352F362F352F362F352F35362F3635362F3635362FA8CFFFCFFFCFCA99
%99929992999299929992CACFFFCFFFCFFFCFFFCFFFCFFFCFFFC9A1C9FFCF
%FFCFFFC99992999299C9FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFA859362F3635362F3635362F36362F352F362F352F362F83
%A8FFA8CFA8FF999392939293929392939299A8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8CA9393929399C9A8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8A82F352F362F352F362F352F2F362F
%362F362F362F5ACFFFCFFFCFFFC99392999293929992939299C9FFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCAC299C9FFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFC9A8CFFFCFA8CF
%FFCFFFCFFFCFFFCFFFCFA8CACACFFFCFFFCFFFCFFFCFFFCF842F362F362F
%362F362F36352F362F352F362F35CFCFA8CFA8CFA89392936E9392936E93
%92936EA7A8CFA8CFA8CFA8CFA8C9A1A0A0A0A8CFA1A0A0A7A8CFA8CFA8A7
%A0A09999A8CFA8CFA8CFA1996E9392999A999999A8CFA8CFA8CFA8CFA199
%92936E92A0926E92A8CFA8CFA8CFA8A099936E93929399A0A8CFA8CFA8CF
%A8CFA85A2F352F362F352F362F2F3635362F363536A8FFCFFFCFFFCFFF92
%9992999299929992999293CFFFCFFFCFFFCFFFCFA19299929992A0C29992
%9999C9CFA1BC999299929992A1CFFFCFFFC299929992999299929992CACF
%FFCFFFCFCA9999929992999299929992A0CFFFCFFFC99392999299929992
%999299C9FFCFFFCFFFCFFFFF362F3635362F363536352F362F352F362FCF
%A8FFA8CFA8FFA193929392939293929392939ACFA8FFA8CFA8A099939293
%92939293929392939293999A92939293929392939ACFA8FF9A9392939293
%929392939293A1CFA8FFA8A799939293929392939293929399FFA8CFA193
%929392939293929392939293A1CFA8FFA8CFA8FF7E352F362F352F362F2F
%362F362F362F84CFFFCFFFCFFFCFA19299929392999293929992A1CFFFCF
%FFCFFF92939299929392999293929992939299C2939299929392999299CF
%FFCA939299929392999293929992A0CFFFCFCA9999929392999293929292
%939299CFFFC9999293929992939299929392999293C9FFCFFFCFFFCFFF59
%362F362F362F36362F352F362F35A8CFA8CFA8CFA8CF99936E9392936E93
%92936E93A1CFA8CFA8CFA89292936E9392936E9392936E9392936E999393
%6E9392936E9399CFA89992936E93929393A7A8996E9399CFA8CF9A936E93
%92936E93A0A7A89392936EA7A8926E9392936E93A1A79A9392936E939292
%A8CFA8CFA8CFA8842F352F362F352F35362F36353684FFCFFFCFFFCFFFCF
%939299929992999299929992CACFFFCFFFCFFFCFA1929992999299929992
%9992999299C9C99299929992999299CFFFC2999299929992A1CFFFCF9392
%99CFFFCF99929992999299BCFFCFFFCF999299CFC3929992999299C2FFCF
%FF99999299929992A1CFFFCFFFCFFFFF362F3635362F36362F352F362FA8
%A8FFA8CFA8FFA8CF929392939293929392939293A8FFA8CFA8FFA8CFA899
%92939293929392939293929393C9A8939293929392939AFFA89992939293
%929393A7A8FFA19AA1FFA8A09293929392939299A8FFA8CFA8999ACF9A93
%9293929392A0A8FFA8999293929392939ACFA8FFA8CFA8FF5A352F362F35
%2F2F362F362F36CFFFCFFFCFFFCFFFCF999293929992939299929392FFCF
%FFCFFFCFFFCFFFC293929992939299BC939299BCCACFFF92939299929392
%9ACFFF9A99929392999293929ACFFFCFFFCFFFC299929392999293C2FFCF
%FFCFFFCFFFCF99929392999293C9FFCFFFC299929392999293CFFFCFFFCF
%FFCF842F362F362F36352F362F357ECFA8CFA8CFA8CFA8A76E9392936E93
%92936E939293A8CFA8CFA8CFA8CFA8A092936E9392936EA7A8C9A8CFA8CF
%A89292936E939293A0CFA8996E9392936E9392936E9399A7A8CFA8996E93
%92936E9392A0A8CFA8CFA8CFA8A76E9392936E9392A7A8CFA8A06E939293
%6E9392A7A8CFA8CFA8CFAE362F352F362F2F3635362F84CFFFCFFFCFFFCF
%FFC9999299929992999299929992FFCFFFCFFFCFFFCFFFC3999299929992
%99CAFFCFFFCFFFCFFFC2999299929992A1CFFFC999929992999299929992
%9999CACFFFBC99929992999299C3FFCFFFCFFFCFFFC999929992999299CF
%FFCFFFC399929992999299C9FFCFFFCFFFCFFF59362F363536352F362F35
%A8FFA8CFA8FFA8CFA8A8929392939293929392939293A8CFA8FFA8CFA8FF
%A8A092939293929392A7A8FFA8CFA8FFA892929392939293A0CFA8FF9A93
%9293929392939293929399C9A89992939293929392A0A8CFA8FFA8CFA8A8
%92939293929392FFA8CFA8A092939293929392A8A8CFA8FFA8CFA85A2F35
%2F362F2F362F362FA8CFFFCFFFCFFFCFFFCA939299929392999293929992
%FFCFFFCFFFCFFFCFFFC299929392999293C9FFCFFFCFFFCFFF9299929392
%9992A1CFFFCFFFC29992939299929392999293C9FFBC93929992939299C3
%FFCFFFCFFFCFFFCA93929992939299CFFFCFFFC393929992939299CAFFCF
%FFCFFFCFFF5A362F362F36362F352F36A8CFA8CFA8CFA8CFA8A792936E93
%92936E9392936E93A8CFA8CFA8CFA8CFA8A06E9392936E9392A7A8CFA8CF
%A8CFA8936E9392936E93A0CFA8CFA8CFA09292936E9392936E939299A899
%92936E9392936EA0A8CFA8CFA8CFA8A792936E9392936EA7A8CFA8A09293
%6E9392936ECFA8CFA8CFA8CFA8592F362F352F35362F3635A8CFFFCFFFCF
%FFCFFFCF999299929992999299929992FFCFFFCFFFCFFFCFFFC399929992
%999299C9FFCFFFCFFFCFFF92999299929992A0CFFFCFCACFFFCFA1929992
%999299929999FFC299929992999299C2FFCFFFCFFFCFFFCF939299929992
%99CAFFCFFFC299929992999293CFFFCFFFCFFFCFFF7E3635362F36362F35
%2F36A8CFA8FFA8CFA8FFA8CF9A9392939293929392939293A7FFA8CFA8FF
%A8CFA8A092939293929392A8A8CFA8FFA8CFA8939293929392939AFFA193
%92A0A8CFA8A19293929392939293A8A09293929392939292A8FFA8CFA8FF
%A8CF9A939293929392A0A8FFA8939293929392939ACFA8FFA8CFA8FFA835
%2F362F352F2F362F362F84CFFFCFFFCFFFCFFFCFA0929392999293929992
%9392A1CFFFCFFFCFFFCFFFC393929992939299CAFFCFFFCFFFCFFF929392
%9992939299CFA1929992CACFFFCFC3929992939299BBFFCF999293929992
%9392A1CFFFCFFFCFA1CFA892939299929399FFCFC992999293929992CACF
%FFCFFFCFFFCFFF5A362F362F36352F362F3584CFA8CFA8CFA8CFA8CFA793
%92936E9392936E9392939ACFA8CFA8CFA8CFA8A092936E9392936EA7A8CF
%A8CFA8CFA89392936E93929399CFA1936E9399A7A8CFA8936E9392936E99
%A8CF999392936E93929393A0A8A79A9392A0A89992936E93929399999393
%6E9392936E99A8CFA8CFA8CFA8CFA8362F352F362F2F3635362F5ACFFFCF
%FFCFFFCFFFCFFFBB9992999299929992999293CFFFCFFFCFFFCFFFC39992
%9992999299C3FFCFFFCFFFCFFF9299929992999293CFFF99999299929AC9
%9A929992999299C9FFCFCA9299929992999299929992999299C9FFCF9392
%99929992999299929992999293CFFFCFFFCFFFCFFFCFAE35362F36353635
%2F362F352FFFA8CFA8FFA8CFA8FFA8A09293929392939293929392A0A8FF
%A8CFA8FFA1929293929392939292A0CAA8CFA8CA9A9392939293929392A0
%A8A192939293929392939293929399CFA8FFA8A092939293929392939293
%929399CAA8CFA892929392939293929392939293A7CFA8FFA8CFA8FFA8CF
%A8362F352F362F2F362F362F36AEFFCFFFCFFFCFFFCFFFCF929293929992
%939299929399FFCFFFCFFFC29392999293929992939299CAFFCFFFC29392
%9992939299929392A8CF9992999293929992939299BBFFCFFFCFFFCFA192
%93929992939299929399CACFFFCFFFCF999299929392999293929ACFFFCF
%FFCFFFCFFFCFFFCF5A2F362F362F36362F352F362F59A8CFA8CFA8CFA8CF
%A8CFA09392936E9392936E939293A0CFA8CFA89992936E9392936E939293
%6EA7A8CFA8A092936E9392936E939292A7CFA8926E9293936E93929399A7
%A8CFA8CFA8CFA8A79A926E9392936E92A1CFA8CFA8CFA8CFA8A79A929293
%6E92A0A7A8CFA8CFA8CFA8CFA8CFA8A82F352F362F352F35362F3635365A
%CFCFFFCFFFCFFFCFFFCFFFBC9992999299929992999293CFFFCFFFCFC9C3
%A1C3A1C3A1C3A1C9CAC2A0CFFFCFCAC9A1C3A1C3A1CACACFFFCFFFCFA1CA
%FFC9A1C3A1C9FFCFFFCFFFCFFFCFFFCFFFCFCAC9A1C9CACFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFF7D7DCFFFCFFFCFFFCFFFCFFFA8362F3635362F
%36362F352F362F35A8FFA8CFA8FFA8CFA8FFA8C999939293929392939293
%9292A8FFA8CFA8FFA8CFA8FFA8CFA8FF9A9392A0A8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8A7F8F82727A8FFA8CFA8FFA8CF
%A8362F352F362F352F2F362F362F362F36FFFFCFFFCFFFCFFFCFFFCFCA99
%9392999293929992939292C9FFCFFFCFFFCFFFCFFFCFA8BB93929999FFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF7CFD0427A8
%CFFFCFFFCFFFCF842F362F362F362F36352F362F352F362F59A8CFA8CFA8
%CFA8CFA8CFA8A799936E9392936E9392936E9399A0A8CFA8CFA8CFA1996E
%9392936E99A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8
%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8
%CFA852F8F827F8A8CFA8CFA8CFA8A82F352F362F352F362F2F3635362F36
%35362FA8CFFFCFFFCFFFCFFFCFFFCFFFC299929992999299929992999299
%BC99BC999299929992999299CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFF8512752FFCFFFCFFFCFFF84362F3635362F36
%3536352F362F352F362F3559FFA8CFA8FFA8CFA8FFA8CFA8FFA192929392
%93929392939293929392939293929392939299A8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA87CA8FFA8CFA8FFA8CFA8
%362F352F362F352F362F2F362F362F362F362F367EFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFA1BB939299929392999293929992939299929399A1CFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCF362F362F362F362F362F36362F352F362F352F362F3584
%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA79A939392936E9392936E9392936E
%93A1CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8
%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8
%CFA8CFA8CFA8CFA8CFA8CFA8CFCF362F352F362F352F362F352F35362F36
%35362F3635362F36A8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFA1C299
%C299BC99C2A0C9CACFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF5A35362F3635362F36
%35362F36362F352F362F352F362F352F3684CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CF7D527DA7A87DA8CF7D7DA8CFA8FFA8CFA8
%FFA8A7525252A7A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8A7A8FFA8CF7DFFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8592F
%362F352F362F352F362F352F2F362F362F362F362F362F362F36A8FFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFA8527DA75227F852FFCF7D
%7DFFCFFFCFFFCFFFA8277DA8CFFFA7527D52CFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCF7D5252CFFF2752A7FFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFFF602F362F362F362F362F362F362F36352F362F352F362F352F
%362F352F3684CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF52CFA8
%A7A87C27CFA8CFA8A7A8CFA8CFA8CF7DF87DA77DCFA8A7277CA8CFA8CFA8
%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8277D52A8A727A727CFA8CFA8
%CFA8CFA8CFA8CFA8CFA8CFCF352F362F352F362F352F362F352F362F2F36
%35362F3635362F3635362F3635367EFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFA7A8CF52A77D27FF527DCFFFCFFFCFFFCFFFCFF8CF7D7D7DA7A8
%27FFA7FF52A8CFFFCFFFCFFFCFFFCFFFCFFFCFFF7C527C7DCF527C7DA7A8
%27A87CFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFAE362F3635362F3635362F36
%35362F363536352F362F352F362F352F362F352F362F3559A8A8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA851A8FF27A727A85227A8FFA8A7A8FFA8CFA8
%7D27A752FF52A7F8A8A852A87DA8CFA8FFA8CFA8FFA8CFA8FFA8CF7D27A8
%A7A85227517DA8F87C52A8A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8362F352F
%362F352F362F352F362F352F362F2F362F362F362F362F362F362F362F36
%2F365984CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA77D527D277D2727A8FF
%CFFF51A8CFFFCFFFCFF8A8A87CA8277DCF7DCFA8CFFFA7A8A7FFCFA8CFFF
%CF27CFFF52F8A7A8CF522752CFA827F87DFFA7FFCFFFCFFFCFFFCFFFCFFF
%CFAE5A362F362F362F362F362F362F362F362F362F36362F352F362F352F
%362F352F362F352F362F352F5AA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF7D
%CF522752F8A8CFA8CF7D27A8CFA8CFA8CF7D517DCF5227A8CF52F87D7C27
%7CF827A8272752A85227CF7DF87DF8527CF8A7277C2727A87C27F87DCFA8
%CFA8CFA8CFA8CFA8832F362F352F362F352F362F352F362F352F362F352F
%35362F3635362F3635362F3635362F3635362F36353684CFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFF7D277D27CFA8CFFF7C7D277DA7FFCFFFCFFFCFFFA727
%CFFF7CF8A72727FF7D277DF852527D52A7F8CFF8A827527D27A8CFF85227
%CF5227277D7DCFFFCFFFCFFFCFFFAE5A2F3635362F3635362F3635362F36
%35362F3635362F36362F352F362F352F362F352F362F352F362F352F362F
%355984A8CFA8FFA8CFA8FFA827A8A852F87D277D51A8FF525252F852A7A8
%FFA8A7A8FF5227A8A85226525227A752F8522652A85227522727F87D2727
%7C2752A827A8F8A826277D7D51A8FFA8CFA8FFA8A87E362F352F362F352F
%362F352F362F352F362F352F362F352F2F362F362F362F362F362F362F36
%2F362F362F362F362F362F36A8FFCFFFCFFFCFFF277D2752CF7D527DCFFF
%CF525152CFFFCFFFCF7D27F851F87C2752A82752CF2727F852A8277D7CFF
%52277DA827525252A7527C52CFA85252A7277C7DCFFFCFFFCFFFFF602F36
%2F362F362F362F362F362F362F362F362F362F362F362F36352F362F352F
%362F352F362F352F362F352F362F352F362F352F362F7DCFCFA8CFA8CFA8
%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA87C52
%F87DCFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8
%CFA8A85A352F362F352F362F352F362F352F362F352F362F352F362F352F
%362F2F3635362F3635362F3635362F3635362F3635362F3635362F363536
%2F3684A8CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCF52A7277DFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFA85A35362F3635362F3635362F3635362F3635362F36
%35362F3635362F363536352F362F352F362F352F362F352F362F352F362F
%352F362F352F362F352F362F3584A8A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA852A8277DFFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA85A2F352F362F352F362F352F362F352F
%362F352F362F352F362F352F362F352F362F2F362F362F362F362F362F36
%2F362F362F362F362F362F362F362F362F362F362F362F5A84A8CFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF7D7DCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA86059362F362F362F362F36
%2F362F362F362F362F362F362F362F362F362F362F362F362F36362F352F
%362F352F362F352F362F352F362F352F362F352F362F352F362F352F362F
%352F362F357E84CFCFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8
%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8A8845A2F352F362F
%352F362F352F362F352F362F352F362F352F362F352F362F352F362F352F
%362F352F35362F3635362F3635362F3635362F3635362F3635362F363536
%2F3635362F3635362F3635362F3635365A6084A8CFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFA8A8846036
%2F3635362F3635362F3635362F3635362F3635362F3635362F3635362F36
%35362F3635362F3635362F36362F352F362F352F362F352F362F352F362F
%352F362F352F362F352F362F352F362F352F362F352F362F352F362F3559
%5A7E83A8A8A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFD04A87E59
%5A362F352F362F352F362F352F362F352F362F352F362F352F362F352F36
%2F352F362F352F362F352F362F352F362F352F2F362F362F362F362F362F
%362F362F362F362F362F362F362F362F362F362F362F362F362F362F362F
%362F362F362F362F362F362F362F365A5A5A60FD08847E5A5A5A59362F36
%2F362F362F362F362F362F362F362F362F362F362F362F362F362F362F36
%2F362F362F362F362F362F362F362F362F362F362F36352F362F352F362F
%352F362F352F362F352F362F352F362F352F362F352F362F352F362F352F
%362F352F362F352F362F352F362F352F362F352F362F352F362F352F362F
%352F362F352F362F352F362F352F362F352F362F352F362F352F362F352F
%362F352F362F352F362F352F362F352F362F352F362F352F362F352F362F
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u0 O
0.79 0.2 0 0.1 k
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
622.2739 186.3188 m
622.2739 574.4307 L
-73.8623 574.4307 L
-73.8623 186.3188 L
622.2739 186.3188 L
f/BBAccumRotation (-1.570796) XT
0 g
274.2056 380.3745 m
F/BBAccumRotation (-1.570796) XT
Uu0 0 0.1 0.05 k
273.0562 191.8193 m
448.6787 191.8193 591.0537 275.6841 591.0537 379.1328 c
591.0537 482.582 437.3955 566.4468 273.0562 566.4468 c
97.4336 566.4468 -44.9414 482.582 -44.9414 379.1328 c
-44.9414 275.6841 97.4336 191.8193 273.0562 191.8193 c
f/BBAccumRotation (-1.570796) XT
0 g
273.0562 379.1328 m
F/BBAccumRotation (-1.570796) XT
U*u
0 0.7 0.8 0.2 k
1 D
142.8154 289.3945 m
151.0342 290.958 157.4976 293.416 164.6997 297.0073 c
171.6543 300.4751 180.2583 304.0684 184.8564 309.8789 c
189.4551 315.6899 191.4448 317.6133 191.8599 320.1143 c
192.2744 322.6157 183.6211 338.4546 178.9595 331.9229 c
174.2979 325.3911 166.8486 321.2202 157.1396 315.7676 c
151.563 312.6357 137.5469 310.6904 125.8848 311.5239 c
117.7246 312.1069 110.8511 315.2793 103.9614 319.1523 c
97.6533 322.6982 91.2881 328.4976 86.7998 335.2739 c
82.6045 341.6074 78.6362 349.4478 75.8379 359.4546 c
73.0425 369.4614 71.6445 381.5415 71.6445 395.6943 c
71.6445 420.7324 77.9736 453.9268 86.1567 467.7847 c
94.3398 481.6455 103.1089 491.748 118.8086 491.748 c
131.418 491.748 145.4609 490.7725 152.7993 482.6675 c
161.3789 473.1914 165.2783 466.4868 167.0767 464.7251 c
168.875 462.9629 174.9297 461.2437 177.9902 463.6675 c
184.2705 468.6411 173.2358 507.8574 171.6968 509.5962 c
170.1577 511.335 164.8853 512.6333 160.7861 512.7686 c
156.6865 512.9038 150.54 506.3569 Y
148.9888 504.8848 146.1021 508.0923 144.0752 508.8657 c
136.1665 511.8828 126.9775 512.3726 117.1118 512.3726 c
103.4839 512.3726 90.6919 512.1636 78.7358 507.5151 c
66.7803 502.8696 53.3662 496.3198 44.8379 487.8647 c
36.1426 479.2402 22.9824 462.2456 17.1821 450.9395 c
10.9219 438.7368 6.6924 407.0132 6.6758 393.5415 c
6.6592 379.644 13.3545 354.8071 19.1118 343.6709 c
25.7266 330.877 38.4155 318.1875 48.1929 311.3013 c
57.7236 304.5889 66.5444 300.3052 77.915 296.0776 c
89.2856 291.8501 101.4927 287.6216 114.5352 287.6216 c
125.4043 287.6216 134.5688 287.8252 142.8154 289.3945 c
f/BBAccumRotation (-1.570796) XT
*U
*u
196.0054 438.3569 m
192.856 441.5615 192.9194 445.2793 187.7358 445.2793 c
183.0542 445.2793 177.4956 448.2407 173.1758 445.7051 C
166.9634 438.9385 161.9849 439.4419 y
162.4355 443.0259 158.2813 445.417 v
154.1274 447.8081 149.335 445.3594 135.5449 443.542 c
133.0869 443.2183 129.6299 438.8091 126.7505 438.3931 c
117.9712 437.125 113.3579 435.7622 112.0562 432.6685 c
110.8433 429.7856 110.3149 423.3188 116.0571 421.4155 c
117.5723 420.9136 120.9727 420.4126 121.9761 419.7437 c
123.314 418.7959 124.0791 417.8936 124.3467 415.9395 c
124.5972 414.1069 124.7104 411.4961 124.7104 409.4893 c
125.7676 360.8301 L
125.7676 358.7676 126.4907 351.8081 125.8218 350.5264 c
125.1528 349.2441 122.0425 347.0845 120.6211 346.8892 c
119.1997 346.6943 117.7925 345.4834 116.3989 345.3721 c
111.7695 344.0371 114.2842 337.1538 v
117.2827 328.9443 175.5693 333.0503 177.6196 337.1538 c
179.6699 341.2578 178.7456 346.5688 177.6196 347.4868 c
176.4932 348.4053 174.4004 347.7798 171.6416 348.1978 c
168.8823 348.6157 170.062 349.1313 168.8359 349.7441 c
167.3867 350.4688 165.8804 355.6523 165.8804 357.6035 c
165.8804 409.8486 L
169.6089 413.9229 173.292 407.7041 176.1069 405.6504 c
178.9219 403.5967 186.626 405.5718 190.6621 407.8574 c
194.3613 409.9521 195.9497 411.1431 197.8574 414.7798 c
199.7798 418.4453 200.5449 424.998 200.729 428.0562 c
200.978 432.1885 199.1548 435.1519 196.0054 438.3569 c
f/BBAccumRotation (-1.570796) XT
*U
*u
257.9287 345.3286 m
255.4429 347.9351 252.7236 349.0718 251.3789 349.6748 c
249.4966 350.4785 249.4302 377.7788 249.4302 380.1235 c
250.02 435.1968 L
249.1245 444.3872 243.2202 446.7583 v
241.0654 447.623 202.2939 444.3521 201.2075 434.0918 c
200.5049 427.4556 203.9204 424.6421 Y
206.0918 423.731 207.813 422.5986 208.6846 420.1895 c
210.0581 416.3945 210.5977 402.2451 210.5977 399.9004 c
211.772 351.4731 208.8716 350.0088 v
205.8945 348.5054 204.9351 348.4277 200.5562 344.2192 c
198.6094 342.3481 199.853 339.7407 201.6138 336.8843 c
204.6465 331.9634 254.3252 332.1372 258.7954 338.4272 c
260.3418 340.6035 260.3105 342.8315 257.9287 345.3286 c
f/BBAccumRotation (-1.570796) XT
240.623 487.4609 m
236.7236 491.0781 234.166 492.8867 228.7202 492.8867 c
223.2749 492.8867 218.5854 491.0781 214.6523 487.4609 c
210.7192 483.8438 208.7529 479.4902 208.7529 474.3994 c
208.7529 469.3086 210.7192 460.7417 214.6523 457.1582 c
218.5854 453.5742 223.2749 451.7827 228.7202 451.7827 c
234.0986 451.7827 236.6396 453.5742 240.5728 457.1577 c
244.5059 460.7417 246.4722 469.3086 246.4722 474.3994 c
246.4722 479.4902 244.5225 483.8438 240.623 487.4609 c
f/BBAccumRotation (-1.570796) XT
*U
*u
332.875 343.6147 m
339.5347 350.8213 343.8169 359.4399 343.8169 371.3999 c
343.8169 380.3701 341.4648 387.7534 336.7598 393.5513 c
332.0571 399.3491 329.9063 401.585 319.7744 406.2227 c
313.4756 409.1055 310.2021 410.7441 306.5464 413.2236 c
302.8916 415.7031 301.876 419.0586 302.0625 422.1436 c
302.313 426.293 307.6309 429.5708 312.002 429.5708 c
317.5654 429.5708 318.519 427.0376 323.3442 421.5317 c
328.6704 415.4546 324.2793 415.8882 327.6709 413.563 c
331.0615 411.2378 335.8379 411.0625 339.1631 415.8521 c
342.3164 420.394 335.6484 444.3257 332.8247 446.8423 c
330.4238 448.9824 325.4307 448.3564 324.2383 447.8999 c
323.1455 447.4814 319.2773 445.6758 Y
316.3257 447.2803 305.583 448.9575 300.417 448.9575 c
289.5176 448.9575 281.7617 445.7852 275.0347 439.4404 c
268.3076 433.0957 264.9443 424.7822 264.9443 414.4995 c
264.9443 408.957 265.7109 404.1802 267.2437 400.1694 c
268.7764 396.1587 270.8198 392.731 273.3745 389.8867 c
276.3262 386.6782 279.1792 384.3262 281.9321 382.8311 c
284.6855 381.3364 287.9922 379.8594 291.8525 378.4009 c
295.7129 376.9424 303.9712 368.8896 305.1064 366.9932 c
306.2422 365.0972 307.7637 363.4536 307.7637 360.5366 c
307.7637 350.5215 296.8237 351.7544 290.2314 355.2358 c
287.8555 356.4907 286.1387 357.2534 282.0117 361.1973 c
277.5464 365.4644 278.0425 377.3496 264.7314 371.8799 c
251.4209 366.4097 276.373 335.814 279.4438 332.8945 c
282.5142 329.9756 286.0854 332.8945 Y
289.6978 338.2183 L
297.022 332.3145 305.1523 332.4204 310.6509 332.7124 c
320.1885 333.2183 325.9111 336.0796 332.875 343.6147 c
f/BBAccumRotation (-1.570796) XT
*U
*u
417.4209 335.8076 m
421.4189 337.2788 425.3555 339.4512 429.2305 342.3237 c
432.9209 345.0566 434.0898 345.9712 436.7344 349.5098 c
439.8882 353.7285 441.9199 362.9224 435.0781 364.1348 c
431.6597 364.7407 431.9214 365.3472 427.8926 361.8784 c
423.8638 358.4102 420.5503 356.4053 413.7231 356.3477 c
408.1157 356.3003 403.229 359.854 400.604 364.6313 c
396.1719 372.6978 396.0723 378.0942 396.0723 390.5664 c
396.0723 398.8345 396.4434 404.752 396.7217 410.7397 c
397.0098 416.9375 397.2671 421.3203 399.1738 424.8237 c
401.1421 428.5376 408.0107 430.3862 411.4238 429.5923 c
415.4453 428.6563 421.5796 424.9453 421.5796 421.5117 c
421.5796 417.4478 425.6045 411.8809 430.1934 412.3535 c
435.8799 412.9395 437.5483 416.4478 437.5483 421.4927 c
437.5483 429.7607 435.3154 443.7319 428.7339 448.6016 c
422.1523 453.4717 417.2222 445.5898 413.0537 445.7856 c
405.0049 446.1636 405.4502 455.3633 382.9604 446.0474 c
376.1826 443.2393 367.5029 437.71 363.0425 431.6875 c
359 426.2305 355.5586 418.0181 353.7202 410.1157 c
352.1196 403.2358 352.0063 396.5923 352.0063 389.3052 c
352.0063 381.3174 353.0518 373.9253 355.1431 367.1284 c
357.2344 360.3315 360.4023 354.4458 364.6465 349.4712 c
368.8906 344.5659 374.2881 340.6948 380.8384 337.8569 c
387.3892 335.019 394.9395 333.6006 403.4893 333.6006 c
408.7788 333.6006 413.4229 334.3359 417.4209 335.8076 c
f/BBAccumRotation (-1.570796) XT
*U
*u
0 D
499.1538 360.6636 m
497.48 358.8887 495.4751 358.0015 493.1392 358.0015 c
490.5698 358.0015 488.4482 358.9551 486.7744 360.8618 c
485.1006 362.769 483.8159 365.3647 482.9209 368.6489 c
481.8696 372.4629 481.208 376.2637 480.9351 380.0513 c
480.6626 383.8389 480.5264 388.6196 480.5264 394.3936 c
480.5264 398.7905 480.6821 403.0151 480.9937 407.0674 c
481.3052 411.1196 481.8696 414.6558 482.687 417.6753 c
483.5825 420.9595 484.8574 423.6348 486.5117 425.7007 c
488.1665 427.7666 490.3755 428.7993 493.1392 428.7993 c
495.6694 428.7993 497.7622 427.8462 499.4165 425.939 c
501.0708 424.0317 503.4229 421.4097 504.3569 418.0723 c
505.1357 415.3179 505.7197 411.5566 506.1089 406.7891 c
506.498 402.022 506.6929 397.7837 506.6929 394.0757 c
506.6929 388.4604 506.4883 383.5342 506.0796 379.2964 c
505.6709 375.0586 505.0381 371.4565 504.1816 368.4897 c
503.2085 365.0469 500.8276 362.438 499.1538 360.6636 c
f/BBAccumRotation (-1.570796) XT
1 D
514.6621 445.8892 m
507.8779 448.686 502.1416 450.0845 493.2236 450.0845 c
484.688 450.0845 481.1938 448.686 474.2822 445.8892 c
467.3711 443.0923 461.5581 439.1509 456.8447 434.0659 c
451.9395 428.7622 448.2607 422.7144 445.8081 415.9219 c
443.356 409.1294 442.1299 401.3745 442.1299 392.6567 c
442.1299 383.7935 443.5313 375.7842 446.334 368.6284 c
449.1367 361.4727 452.959 355.4609 457.7998 350.5933 c
462.832 345.5083 468.6133 341.6938 475.1426 339.1514 c
481.6719 336.6089 484.5923 335.3374 492.3638 335.3374 c
501.3457 335.3374 507.209 336.7905 514.1846 339.6963 c
521.1597 342.6021 527.1636 346.7793 532.1958 352.228 c
536.9097 357.313 540.4927 363.4341 542.9453 370.5898 c
545.3975 377.7456 546.624 385.3555 546.624 393.4189 c
546.624 401.5557 545.3818 409.1113 542.8975 416.0854 c
540.4131 423.0596 536.814 429.0527 532.1001 434.0659 c
527.2588 439.1509 521.4463 443.0923 514.6621 445.8892 c
f/BBAccumRotation (-1.570796) XT
*U
u*u
0 g
171.9106 282.7788 m
168.729 280.6577 165.4316 279.5967 162.0195 279.5967 c
160.1289 279.5967 157.4199 280.1963 153.8931 281.395 c
150.3647 282.5942 147.6558 283.1934 145.7651 283.1934 c
140.877 283.1934 135.8511 280.7495 130.6865 275.8618 c
125.3379 270.7896 122.6636 265.6021 122.6636 260.2998 c
122.6636 254.9966 125.0615 252.3452 129.8569 252.3452 c
133.6841 252.3452 136.981 253.9819 139.748 257.2559 c
142.7451 260.8062 144.2432 265.4409 144.2432 271.1587 c
143.4136 271.1587 L
143.4136 266.1787 141.6387 261.7983 138.0879 258.0171 c
135.0908 254.7886 132.3472 253.1748 129.8569 253.1748 c
125.6152 253.1748 123.4941 255.5498 123.4941 260.2998 c
123.4941 264.8184 125.6377 269.3486 129.9258 273.8901 c
134.2139 278.4326 138.3408 280.7041 142.3066 280.7041 c
144.7964 280.7041 147.644 280.0234 150.8491 278.6626 c
154.0537 277.3027 156.5093 276.6226 158.2158 276.6226 c
160.9824 276.6226 164.2563 277.7524 168.0371 280.0117 c
168.1758 279.8735 L
166.1006 278.4443 163.2417 276.1157 159.5986 272.8877 c
155.4951 269.2905 150.6533 263.6421 145.0737 255.9419 c
138.9868 247.5493 134.814 242.2002 132.5547 239.8945 c
127.8511 235.146 123.1709 232.7715 118.5137 232.7715 c
116.8535 232.7715 115.5396 232.9443 114.5703 233.29 c
113.6025 233.6353 113.1182 234.0156 113.1182 234.4307 c
113.1182 234.7993 113.4414 234.9839 114.0869 234.9839 c
115.9312 234.9839 116.8535 235.9751 116.8535 237.958 c
116.8535 238.6963 116.5537 239.3647 115.9541 239.9644 c
115.355 240.5635 114.5942 240.8633 113.6724 240.8633 c
111.3667 240.8633 110.2139 239.6646 110.2139 237.2666 c
110.2139 235.376 111.228 233.9697 113.2568 233.0483 c
114.8247 232.311 116.6694 231.9419 118.79 231.9419 c
125.7993 231.9419 132.3701 235.1001 138.5029 241.4165 c
141.1309 244.0454 146.3413 250.916 154.1343 262.0288 c
160.7285 271.4814 166.7461 278.2598 172.187 282.3643 C
171.9106 282.7788 l
f/BBAccumRotation (-1.570796) XT
*U
*u
169.0718 268.3916 m
160.2241 258.7778 L
155.7114 258.7778 L
155.0273 257.9473 L
159.4683 257.9473 L
146.5903 243.6992 L
143.1777 239.918 141.4717 236.9668 141.4717 234.8457 c
141.4717 232.9097 142.3018 231.9419 143.9614 231.9419 c
146.5898 231.9419 152.5386 236.1377 161.8062 244.5288 c
161.875 245.4976 L
152.5146 237.0137 146.6357 232.7715 144.2378 232.7715 c
143.2241 232.7715 142.7173 233.0947 142.7173 233.7407 c
142.7173 234.2485 144.1431 236.0728 146.9946 239.2129 c
164.1431 257.9473 L
168.5903 257.9473 L
169.1372 258.7778 L
164.8047 258.7778 L
173.6533 268.3916 L
169.0718 268.3916 l
f/BBAccumRotation (-1.570796) XT
*U
*u
187.249 283.1934 m
186.0034 283.1934 185.3809 282.7095 185.3809 281.7412 c
185.3809 281.5107 185.4502 280.9341 185.5889 280.0117 c
186.3496 274.894 L
186.4878 274.1104 186.7871 273.7183 187.249 273.7183 c
187.7095 273.7183 188.0093 274.1104 188.1479 274.894 c
188.9092 280.0117 L
189.0469 280.9341 189.1157 281.5107 189.1157 281.7412 c
189.1157 282.7095 188.4937 283.1934 187.249 283.1934 c
f/BBAccumRotation (-1.570796) XT
*U
*u
200.1777 245.4976 m
198.4712 243.3765 197.0186 241.855 195.8198 240.9331 c
194.252 239.7798 192.4536 239.019 190.4248 238.6504 c
192.6382 241.4634 193.7451 243.792 193.7451 245.6357 c
193.7451 246.9736 193.3989 248.2646 192.7075 249.5093 c
192.4766 249.9243 191.7158 251.0542 190.4248 252.8984 c
192.6382 255.3882 193.7451 257.1641 193.7451 258.2246 c
193.7451 259.0542 193.376 259.4692 192.6387 259.4692 c
191.5776 259.4692 190.7012 258.9155 190.0098 257.8091 c
189.457 256.8872 189.1802 255.8501 189.1802 254.6968 c
189.1802 254.1436 189.3184 253.5903 189.5947 253.0366 c
180.5342 245.0132 L
180.9492 244.5986 L
190.0098 252.4834 L
191.1167 251.2388 191.6699 250.063 191.6699 248.9561 c
191.6699 246.6504 189.5835 243.377 185.4102 239.1348 c
181.2373 234.8926 178.252 232.7715 176.4541 232.7715 c
174.3335 232.7715 173.2734 234.0854 173.2734 236.7134 c
173.2734 239.1572 174.1953 241.0479 176.0396 242.3853 c
176.1777 242.3853 L
176.1777 240.7251 176.915 239.8945 178.3896 239.8945 c
178.9434 239.8945 179.4741 240.1597 179.9814 240.6904 c
180.4878 241.2207 180.7412 241.832 180.7412 242.5234 c
180.7412 243.2153 180.5225 243.7915 180.0845 244.2524 c
179.6465 244.7139 179.1274 244.9448 178.5283 244.9448 c
177.0996 244.9448 175.7285 243.9995 174.4141 242.1089 c
173.0996 240.2183 172.4429 238.4658 172.4429 236.8521 c
172.4429 233.5786 174.1025 231.9419 177.4219 231.9419 c
180.8804 231.9419 184.8916 233.9014 189.457 237.8198 c
192.1313 238.0967 194.3213 238.8579 196.0278 240.1025 c
196.9961 240.7939 198.4023 242.2695 200.2471 244.5288 C
200.1777 245.4976 l
f/BBAccumRotation (-1.570796) XT
*U
*u
0 D
271.4277 250.8232 m
268.3613 245.7974 264.4307 241.6704 259.6357 238.4424 c
254.4712 234.9385 249.1914 233.1865 243.7964 233.1865 c
241.6294 233.1865 239.001 233.7856 235.9111 234.9839 c
241.6289 237.5659 246.6553 241.209 250.9902 245.9126 c
252.8804 247.9419 256.4082 252.5068 261.5723 259.6074 c
265.999 265.6479 270.1719 270.4438 274.0918 273.9946 c
275.3828 271.1816 276.0283 268.2534 276.0283 265.2104 c
276.0283 260.6455 274.4951 255.8501 271.4277 250.8232 c
f/BBAccumRotation (-1.570796) XT
1 D
285.9883 280.2891 m
282.1606 279.874 278.2412 278.2368 274.23 275.3774 c
272.4771 278.0522 269.7563 280.0815 266.0674 281.4648 c
262.9321 282.6177 259.52 283.1934 255.8311 283.1934 c
247.8999 283.1934 240.6377 280.4961 234.0435 275.1006 c
227.7266 269.936 224.5679 264.5874 224.5679 259.0542 c
224.5679 256.5181 225.3516 254.5117 226.9194 253.0366 c
228.4873 251.561 230.6313 250.8232 233.3521 250.8232 c
238.1016 250.8232 242.7124 252.6909 247.1851 256.4263 c
251.3818 259.9302 253.4795 263.1812 253.4795 266.1782 c
253.4795 267.8384 253.0186 269.1064 252.0962 269.9829 c
251.1738 270.8589 250.0205 271.2969 248.6377 271.2969 c
244.8564 271.2969 240.4297 267.7236 235.3574 260.5762 c
236.188 260.2998 L
241.3062 267.0776 245.4331 270.4663 248.5688 270.4663 c
249.6758 270.4663 250.6328 270.0977 251.4395 269.3604 c
252.2461 268.6226 252.6489 267.6309 252.6489 266.3862 c
252.6489 263.4346 250.5054 260.2412 246.2173 256.8062 c
241.9292 253.3716 237.8481 251.6538 233.9746 251.6538 c
229.3633 251.6538 227.0576 253.9824 227.0576 258.6396 c
227.0576 261.5903 228.3257 264.9106 230.8623 268.5996 c
233.5366 272.4727 236.9258 275.6313 241.0293 278.0747 c
245.7793 280.9346 250.7593 282.3643 255.9692 282.3643 c
259.8428 282.3643 263.3936 281.6836 266.6216 280.3228 c
269.8491 278.9629 272.1543 277.1758 273.5376 274.9624 c
267.6357 270.9971 262.1484 265.9478 257.0767 259.8154 c
253.4331 254.9741 249.7676 250.1323 246.0791 245.2896 c
242.2051 240.4019 238.4468 237.0591 234.8042 235.2612 c
230.5625 236.8745 226.5737 237.6812 222.8379 237.6812 c
218.9189 237.6812 216.9595 236.644 216.9595 234.5688 c
216.9595 232.8179 218.873 231.9419 222.6997 231.9419 c
226.2046 231.9419 229.6396 232.4492 233.0059 233.4629 c
236.5562 232.4492 239.7378 231.9419 242.5508 231.9419 c
248.3613 231.9419 254.0103 233.6709 259.4976 237.1284 c
264.6157 240.3564 268.7886 244.564 272.0166 249.751 c
275.2441 254.9385 276.8579 260.0918 276.8579 265.2104 c
276.8579 269.084 276.1665 272.1504 274.7832 274.4097 c
278.564 277.4067 282.2993 279.0898 285.9883 279.4585 C
285.9883 280.2891 l
f/BBAccumRotation (-1.570796) XT
0 D
221.8706 232.7715 m
219.1494 232.7715 217.7891 233.3247 217.7891 234.4307 c
217.7891 235.7217 218.9883 236.3677 221.3857 236.3677 c
223.1387 236.3677 226.5278 235.6528 231.5537 234.2241 c
231.5537 234.0845 l
228.2798 233.2095 225.0518 232.7715 221.8706 232.7715 c
f/BBAccumRotation (-1.570796) XT
*U
*u
1 D
290.1611 267.3887 m
289.6772 267.873 289.0894 268.1152 288.3975 268.1152 c
287.7061 268.1152 287.1177 267.873 286.6333 267.3887 c
286.1489 266.9048 285.9072 266.3169 285.9072 265.6255 c
285.9072 264.8872 286.1489 264.2764 286.6333 263.792 c
287.1177 263.3081 287.7061 263.0659 288.3975 263.0659 c
289.0894 263.0659 289.6772 263.3081 290.1611 263.792 c
290.6455 264.2764 290.8872 264.8872 290.8872 265.6255 c
290.8872 266.3169 290.6455 266.9048 290.1611 267.3887 c
f/BBAccumRotation (-1.570796) XT
283.9702 245.6357 m
280.3403 242.5464 276.7104 239.457 273.0806 236.3677 c
270.0952 233.9702 267.9365 232.7715 266.6045 232.7715 c
265.4102 232.7715 264.8125 233.1392 264.8125 233.8745 c
264.8125 234.3804 266.4346 236.4722 269.6792 240.1499 c
281.7202 253.8672 L
277.3306 253.8672 L
265.8501 240.5869 L
264.0054 238.4653 263.083 236.6904 263.083 235.2612 c
263.083 233.0483 264.1895 231.9419 266.4033 231.9419 c
267.8784 231.9419 270.2988 233.2788 273.6641 235.9526 c
275.3247 237.2437 278.7373 240.1719 283.9019 244.7368 C
283.9702 245.6357 l
f/BBAccumRotation (-1.570796) XT
*U
*u
0 D
302.6299 248.1953 m
300.2783 244.8291 297.4424 241.6704 294.1221 238.7188 c
290.0645 235.0308 286.814 233.1865 284.3701 233.1865 c
282.4341 233.1865 281.4658 233.832 281.4658 235.123 c
281.4658 236.0913 281.9731 237.29 282.9878 238.7188 c
285.3384 242.0854 288.3584 245.4287 292.0474 248.7485 c
296.1978 252.4375 299.3105 254.2817 301.3853 254.2817 c
303.2295 254.2817 304.1519 253.4517 304.1519 251.792 c
304.1519 250.8232 303.6445 249.6245 302.6299 248.1953 c
f/BBAccumRotation (-1.570796) XT
1 D
312.3828 245.5664 m
305.9731 239.5723 300.1167 235.584 294.8145 233.6011 c
294.6763 233.6011 L
312.0366 253.8672 L
307.4722 253.8672 L
304.7046 250.3389 L
304.5664 250.3389 L
304.8438 251.1235 304.9824 251.769 304.9824 252.2754 c
304.9824 254.166 303.645 255.1113 300.9707 255.1113 c
296.6357 255.1113 291.9556 252.9561 286.9297 248.645 c
281.9038 244.3335 279.3906 240.2866 279.3906 236.5059 c
279.3906 235.2144 279.8062 234.2002 280.6362 233.4629 c
281.4663 232.7256 282.5269 232.3569 283.8174 232.3569 c
286.4917 232.3569 289.5347 233.9014 292.9463 236.9902 c
292.9243 236.8711 L
288.459 231.6592 L
281.2637 229.2158 275.4292 226.6343 270.9551 223.9146 c
266.1577 221.0107 263.7593 218.3838 263.7593 216.0327 c
263.7593 213.6816 265.1426 212.5059 267.9092 212.5059 c
270.9985 212.5059 275.0796 214.604 280.1519 218.8003 c
284.5317 222.397 288.9814 226.939 293.5005 232.4268 c
296.4971 233.3477 299.8174 235.0073 303.4604 237.4048 c
306.9648 239.6641 309.939 242.0391 312.3828 244.5288 C
312.3828 245.5664 l
f/BBAccumRotation (-1.570796) XT
0 D
274.2036 216.5176 m
271.7598 214.3965 269.6157 213.3364 267.771 213.3364 c
265.6504 213.3364 264.5898 214.1895 264.5898 215.8945 c
264.5898 220.0908 272.2441 225.0249 287.5522 230.6968 c
287.6904 230.5586 l
280.8662 223.1348 276.3706 218.4546 274.2036 216.5176 c
f/BBAccumRotation (-1.570796) XT
*U
*u
324.7036 245.9126 m
321.4443 243.4688 318.0713 242.2471 314.5835 242.2471 c
318.3472 246.5356 321.1235 249.4863 322.9136 251.1001 c
324.979 252.9448 326.6309 253.8672 327.8696 253.8672 c
328.834 253.8672 329.3154 253.4058 329.3154 252.4834 c
329.3154 250.4541 327.7783 248.2642 324.7036 245.9126 c
f/BBAccumRotation (-1.570796) XT
1 D
333.5352 245.5664 m
328.417 241.2788 324.5669 238.2817 321.9849 236.5752 c
318.0186 234.0396 314.6758 232.7715 311.9565 232.7715 c
310.1113 232.7715 309.189 233.3247 309.189 234.4307 c
309.189 235.6763 310.7568 238.0049 313.8921 241.4165 c
317.166 241.4165 320.6699 242.293 324.4048 244.0454 c
328.832 246.166 331.0454 248.6792 331.0454 251.5845 c
331.0454 253.6592 330.0083 254.6968 327.9331 254.6968 c
324.1978 254.6968 319.7939 252.4023 314.7217 247.8145 c
309.6499 243.2271 307.1143 239.0884 307.1143 235.3999 c
307.1143 233.0947 308.5439 231.9419 311.4033 231.9419 c
314.6768 231.9419 318.48 233.3481 322.8145 236.1606 c
325.4888 237.9126 329.0625 240.7251 333.5352 244.5986 C
333.5352 245.5664 l
f/BBAccumRotation (-1.570796) XT
*U
*u
356.4956 245.4976 m
354.7891 243.3765 353.3369 241.855 352.1377 240.9331 c
350.5703 239.7798 348.772 239.019 346.7427 238.6504 c
348.9561 241.4634 350.063 243.792 350.063 245.6357 c
350.063 246.9736 349.7173 248.2646 349.0254 249.5093 c
348.7944 249.9243 348.0337 251.0542 346.7427 252.8984 c
348.9561 255.3882 350.063 257.1641 350.063 258.2246 c
350.063 259.0542 349.6943 259.4692 348.957 259.4692 c
347.896 259.4692 347.0195 258.9155 346.3276 257.8091 c
345.7749 256.8872 345.498 255.8501 345.498 254.6968 c
345.498 254.1436 345.6367 253.5903 345.9131 253.0366 c
336.8521 245.0132 L
337.2671 244.5986 L
346.3276 252.4834 L
347.4346 251.2388 347.9878 250.063 347.9878 248.9561 c
347.9878 246.6504 345.9014 243.377 341.7285 239.1348 c
337.5552 234.8926 334.5698 232.7715 332.772 232.7715 c
330.6514 232.7715 329.5913 234.0854 329.5913 236.7134 c
329.5913 239.1572 330.5132 241.0479 332.3574 242.3853 c
332.4956 242.3853 L
332.4956 240.7251 333.2329 239.8945 334.708 239.8945 c
335.2617 239.8945 335.792 240.1597 336.2993 240.6904 c
336.8057 241.2207 337.0591 241.832 337.0591 242.5234 c
337.0591 243.2153 336.8403 243.7915 336.4028 244.2524 c
335.9644 244.7139 335.4453 244.9448 334.8462 244.9448 c
333.418 244.9448 332.0464 243.9995 330.7319 242.1089 c
329.4175 240.2183 328.7607 238.4658 328.7607 236.8521 c
328.7607 233.5786 330.4204 231.9419 333.7402 231.9419 c
337.1982 231.9419 341.21 233.9014 345.7749 237.8198 c
348.4492 238.0967 350.6396 238.8579 352.3457 240.1025 c
353.314 240.7939 354.7202 242.2695 356.5654 244.5288 C
356.4956 245.4976 l
f/BBAccumRotation (-1.570796) XT
*U
*u
377.1636 268.3916 m
368.3159 258.7778 L
363.8032 258.7778 L
363.1191 257.9473 L
367.5605 257.9473 L
354.6821 243.6992 L
351.27 239.918 349.5635 236.9668 349.5635 234.8457 c
349.5635 232.9097 350.3936 231.9419 352.0532 231.9419 c
354.6821 231.9419 360.6304 236.1377 369.8984 244.5288 c
369.9668 245.4976 L
360.6064 237.0137 354.7275 232.7715 352.3301 232.7715 c
351.3159 232.7715 350.8091 233.0947 350.8091 233.7407 c
350.8091 234.2485 352.2349 236.0728 355.0864 239.2129 c
372.2349 257.9473 L
376.6821 257.9473 L
377.229 258.7778 L
372.8965 258.7778 L
381.7451 268.3916 L
377.1636 268.3916 l
f/BBAccumRotation (-1.570796) XT
*U
*u
389.8423 267.3887 m
389.3579 267.873 388.77 268.1152 388.0786 268.1152 c
387.3867 268.1152 386.7988 267.873 386.314 267.3887 c
385.8296 266.9048 385.5879 266.3169 385.5879 265.6255 c
385.5879 264.8872 385.8296 264.2764 386.314 263.792 c
386.7988 263.3081 387.3867 263.0659 388.0786 263.0659 c
388.77 263.0659 389.3579 263.3081 389.8423 263.792 c
390.3262 264.2764 390.5684 264.8872 390.5684 265.6255 c
390.5684 266.3169 390.3262 266.9048 389.8423 267.3887 c
f/BBAccumRotation (-1.570796) XT
383.6509 245.6357 m
380.021 242.5464 376.3911 239.457 372.7612 236.3677 c
369.7759 233.9702 367.6172 232.7715 366.2856 232.7715 c
365.0908 232.7715 364.4932 233.1392 364.4932 233.8745 c
364.4932 234.3804 366.1157 236.4722 369.3599 240.1499 c
381.4009 253.8672 L
377.0117 253.8672 L
365.5308 240.5869 L
363.686 238.4653 362.7637 236.6904 362.7637 235.2612 c
362.7637 233.0483 363.8706 231.9419 366.084 231.9419 c
367.5591 231.9419 369.98 233.2788 373.3452 235.9526 c
375.0054 237.2437 378.418 240.1719 383.5825 244.7368 C
383.6509 245.6357 l
f/BBAccumRotation (-1.570796) XT
*U
*u
0 D
416.2832 268.2534 m
411.5332 263.8726 405.0542 259.769 396.8467 255.9419 c
396.7085 255.9419 L
410.542 272.7266 418.9575 281.1187 421.9551 281.1187 c
422.8311 281.1187 423.2686 280.6113 423.2686 279.5967 c
423.2686 276.231 420.9404 272.4497 416.2832 268.2534 c
f/BBAccumRotation (-1.570796) XT
1 D
421.9551 281.9482 m
419.3262 281.9482 413.1934 277.2222 403.5562 267.77 c
394.564 259.0088 387.6245 251.3076 382.7383 244.667 c
380.6167 241.8086 379.5562 238.9956 379.5562 236.229 c
379.5562 233.3711 380.9849 231.9419 383.8433 231.9419 c
386.2876 231.9419 388.916 232.9097 391.728 234.8457 c
394.2646 236.644 397.4463 239.5952 401.2729 243.6992 c
402.1499 242.731 403.2104 242.2471 404.4551 242.2471 c
405.7925 242.2471 407.4067 243.0537 409.2974 244.667 c
409.2974 245.6357 L
407.2681 243.9297 405.6543 243.0767 404.4551 243.0767 c
403.3027 243.0767 402.3809 243.4688 401.689 244.2524 c
402.7031 245.5898 403.7402 246.9502 404.8013 248.3335 c
405.8618 249.9014 406.3921 251.1924 406.3921 252.207 c
406.3921 253.3135 405.9766 253.8672 405.1465 253.8672 c
404.0396 253.8672 402.9795 252.9907 401.9653 251.2383 c
400.9507 249.4858 400.4434 247.9878 400.4434 246.7432 c
400.4434 245.6362 400.5356 244.8521 400.7202 244.3906 c
397.228 240.5171 394.3335 237.7275 392.0361 236.0215 c
389.1875 233.855 386.5684 232.7715 384.1787 232.7715 c
382.2495 232.7715 381.2847 233.4629 381.2847 234.8457 c
381.2847 235.9985 382.1821 237.8203 383.9771 240.3105 c
386.0488 243.2148 390.0308 248.0103 395.9243 254.6968 c
403.9341 258.1094 410.6323 262.1558 416.019 266.8359 c
421.4053 271.5161 424.0981 275.7236 424.0981 279.4585 c
424.0981 281.1182 423.3838 281.9482 421.9551 281.9482 c
f/BBAccumRotation (-1.570796) XT
*U
*u
0 D
438.4731 265.522 m
431.9717 259.5962 425.7695 255.4805 419.8672 253.1748 c
419.729 253.1748 L
426.5996 262.0283 432.5938 269.0371 437.7119 274.2017 c
442.2769 278.813 445.2974 281.1187 446.7739 281.1187 c
447.7417 281.1187 448.2261 280.5654 448.2261 279.4585 c
448.2261 276.0928 444.9751 271.4468 438.4731 265.522 c
f/BBAccumRotation (-1.570796) XT
1 D
446.6353 281.9482 m
444.3296 281.9482 439.6035 278.6284 432.4561 271.9883 c
425.7695 265.7173 419.5674 259.0078 413.8496 251.8608 c
407.6255 244.1143 404.5132 238.9268 404.5132 236.2988 c
404.5132 233.394 405.8042 231.9419 408.3867 231.9419 c
409.769 231.9419 411.6133 232.8638 413.9189 234.7075 c
415.3945 235.9063 419.0835 239.2031 424.9858 244.5986 c
424.9858 245.4976 L
421.6318 242.5005 418.2778 239.5029 414.9238 236.5059 c
411.9385 234.0161 409.5957 232.7715 407.896 232.7715 c
406.7939 232.7715 406.2432 233.3247 406.2432 234.4307 c
406.2432 236.4136 410.478 242.293 418.9478 252.0688 c
424.5186 253.7749 430.8481 257.7173 437.938 263.8955 c
445.396 270.3975 449.1021 275.6313 449.0557 279.5967 c
449.0557 281.1646 448.249 281.9482 446.6353 281.9482 c
f/BBAccumRotation (-1.570796) XT
*U
*u
0 D
437.2349 245.9126 m
433.9761 243.4688 430.6025 242.2471 427.1147 242.2471 c
430.8784 246.5356 433.6553 249.4863 435.4448 251.1001 c
437.5103 252.9448 439.1621 253.8672 440.4014 253.8672 c
441.3652 253.8672 441.8472 253.4058 441.8472 252.4834 c
441.8472 250.4541 440.3096 248.2642 437.2349 245.9126 c
f/BBAccumRotation (-1.570796) XT
1 D
446.0669 245.5664 m
440.9487 241.2788 437.0981 238.2817 434.5161 236.5752 c
430.5503 234.0396 427.207 232.7715 424.4878 232.7715 c
422.6431 232.7715 421.7207 233.3247 421.7207 234.4307 c
421.7207 235.6763 423.2881 238.0049 426.4233 241.4165 c
429.6973 241.4165 433.2017 242.293 436.9365 244.0454 c
441.3633 246.166 443.5767 248.6792 443.5767 251.5845 c
443.5767 253.6592 442.5396 254.6968 440.4644 254.6968 c
436.729 254.6968 432.3252 252.4023 427.2529 247.8145 c
422.1812 243.2271 419.6455 239.0884 419.6455 235.3999 c
419.6455 233.0947 421.0752 231.9419 423.9346 231.9419 c
427.208 231.9419 431.0117 233.3481 435.3457 236.1606 c
438.02 237.9126 441.5938 240.7251 446.0669 244.5986 C
446.0669 245.5664 l
f/BBAccumRotation (-1.570796) XT
*U
U*u
0 D
524.5093 312.8384 m
522.7476 311.0376 520.5918 310.1377 518.042 310.1377 c
515.4922 310.1377 513.3364 311.0376 511.5747 312.8384 c
509.813 314.6387 508.9321 316.8135 508.9321 319.3633 c
508.9321 321.9136 509.813 324.0884 511.5747 325.8887 c
513.3364 327.689 515.4922 328.5894 518.042 328.5894 c
520.5918 328.5894 522.7476 327.689 524.5093 325.8887 c
526.271 324.0884 527.1519 321.9136 527.1519 319.3633 c
527.1519 316.8135 526.271 314.6387 524.5093 312.8384 c
f/BBAccumRotation (-1.570796) XT
1 D
527.0679 328.3174 m
524.5752 330.8057 521.5674 332.0493 518.0444 332.0493 c
514.522 332.0493 511.5142 330.8052 509.0215 328.3174 c
506.5288 325.8296 505.2822 322.8242 505.2822 319.3013 c
505.2822 315.7788 506.5288 312.7734 509.0215 310.2856 c
511.5142 307.7974 514.522 306.5532 518.0444 306.5532 c
521.5674 306.5532 524.5752 307.7974 527.0679 310.2856 c
529.5605 312.7734 530.8071 315.7788 530.8071 319.3013 c
530.8071 322.8242 529.5605 325.8296 527.0679 328.3174 c
f/BBAccumRotation (-1.570796) XT
525.5771 314.4556 m
525.4902 314.4556 525.3389 314.4771 525.1221 314.5205 c
524.9053 314.564 524.7451 314.603 524.6411 314.6377 c
524.4067 314.7241 524.1382 314.9043 523.8345 315.1772 c
523.5313 315.4502 523.293 315.6997 523.1191 315.9248 c
522.417 316.792 521.832 317.5308 521.3638 318.1421 c
520.8955 318.7534 520.4971 319.2671 520.1675 319.6831 c
521.0688 319.9434 521.7822 320.3247 522.3066 320.8276 c
522.8311 321.3306 523.0933 322.0327 523.0933 322.9341 c
523.0933 323.8965 522.6992 324.6138 521.9102 325.0864 c
521.1211 325.5591 519.9722 325.7949 518.4639 325.7949 c
511.9307 326.2744 511.7671 325.7949 v
511.603 325.3159 511.792 325.1821 511.7671 325.041 c
511.7417 324.8999 512.0767 324.9692 512.3066 324.9043 c
512.5361 324.8394 512.7334 324.772 512.8979 324.7026 c
513.1582 324.5898 513.3145 324.4707 513.3662 324.3452 c
513.4185 324.2192 513.4443 324.0483 513.4443 323.8315 c
513.4443 315.561 L
513.4443 315.3525 513.4097 315.1772 513.3403 315.0342 c
513.271 314.8911 513.1235 314.772 512.8979 314.6768 c
512.7681 314.6245 512.5884 314.5791 512.3584 314.54 c
512.1289 314.501 511.9307 314.6924 511.7671 314.4556 c
511.603 314.2188 511.5146 313.877 511.7671 313.7012 c
512.019 313.5254 517.9473 313.1836 518.0347 313.7012 c
518.1226 314.2188 518.0347 314.4556 y
517.6987 314.501 517.4951 314.5659 v
517.2915 314.6309 517.1377 314.6851 517.0337 314.7285 c
516.791 314.8325 516.6367 314.9517 516.5718 315.0864 c
516.5068 315.2207 516.4741 315.396 516.4741 315.6128 c
516.4741 319.1108 L
516.9126 319.1108 L
517.6494 318.2266 518.2842 317.4229 518.8169 316.6987 c
519.3501 315.9751 520.415 314.1548 520.8638 313.7012 c
521.313 313.248 525.2642 313.3223 525.5771 313.7012 c
525.8901 314.0801 525.5771 314.4556 y
f/BBAccumRotation (-1.570796) XT
0 D
519.0557 320.6455 m
518.6094 320.2119 517.9565 319.9951 517.0986 319.9951 c
516.4741 319.9951 L
516.4741 324.8848 L
517.1245 324.8848 L
517.9565 324.8848 518.5981 324.7202 519.0493 324.3906 c
519.5 324.061 519.7256 323.4932 519.7256 322.687 c
519.7256 321.7593 519.502 321.0791 519.0557 320.6455 c
f/BBAccumRotation (-1.570796) XT
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
