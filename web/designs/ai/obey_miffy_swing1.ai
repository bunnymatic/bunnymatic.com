%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8.0.1
%%For: (miffy ) (obeymiffy.com)
%%Title: (obey_miffy_swing1.ai)
%%CreationDate: (7/20/2001) (7:49 PM)
%%BoundingBox: -71 21 316 533
%%HiResBoundingBox: -70.9385 21.0107 315.5449 532.6538
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Arial-Black
%%DocumentNeededFonts: Arial-Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 112 216 112 216
%AI3_TileBox: -183.6157 -146.4766 368.3843 581.5234
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -411.5 919.5 0.6667 804 651 26 0 1 157 82 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:-183.6157 -146.4766
%AI7_GridSettings: 72 16 72 16 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 100 128 8
%%BeginData: 19946 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCB
%FFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCB
%CBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCB
%FFCBCBCBFFCBCBCBFD05FFFD60CBFD05FFFD5FCBFD04FFCBA9CBCBCBA9CB
%CBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCB
%A9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CB
%CBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBFD
%06FFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFF
%CBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCB
%CBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFF
%CBCBCBFFCBCBFD04FFFD60CBFD05FFFD11CBA2FD3BF8FD12CBFD04FFCBCB
%CBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCB7DFD3BF8CBA9CBCBCBA9CBCBCBA9
%CBCBCBA9CBCBCBA9FD05FFCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBA2F8
%4AB5FD09BB93FD22BB9993FD07BBB5F8F8CBFFCBCBCBFFCBCBCBFFCBCBCB
%FFCBCBCBFD05FFFD12CB7DF820B4C9A7C9C9C9A7C9C97CF8C9C9C9A7C9C9
%C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9F827
%C9C9C9A7C9C9C9FCF8F8FD12CBFD05FFFD11CBA2F820B5C9CAC9CFC9CAC9
%CFA1F8C9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9
%CAC9CFC9CAC9CF27F8C9CFC9CAC9CFC9B5F8F8FD12CBFD04FFCBA9CBCBCB
%A9CBCBCBA9CBCBCBA9CBCBCBA97DF820FCC9A7C9A7C9A7C9A77CF8C9A7C9
%A7C9A7C9A720F820A7C9A7C9A7C9A7C9A7C9A7C9A7C97CF8F84BA7C9A7C9
%A7F827C9A7C9A7C9A7C9FCF8F8CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CB
%CBFD06FFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFA2F84AB5C9CFC9CFC9CF
%C9CFA1F8C9CFC9CFC9CFC9F8A87D2751C9CFC9CFC9CFC9CFC9CFC9CF2727
%FFA85151C9CFC9CF27F8C9CFC9CFC9CFC9B5F8F8CBCBCBFFCBCBCBFFCBCB
%CBFFCBCBCBFFCBCBFD04FFFD0CCB27FD05CB7DF820FCC9C9C9A7C9C9C9A7
%7CF8C9A7C9C9C9A7F8A8FFFFA82776A7C9C9C9A7C9C9C9A7C97CF8FFFFFF
%A8F875C9C9A7F827C9A7C9C9C9A7C9B4F8F827FD11CBFD05FFFD0ACBA8F8
%77FD04CBA2F84AB5C9CFC9CAC9CFC9CAA1F8C9CAC9CFC95252CBFFFFFFA8
%27CAC9CFC9CAC9CFC9CAC9F8A8FD04FFA827CFC9CAF8F8C9CAC9CFC9CAC9
%B5FD04F8A2FD0FCBFD04FFCBCBCBA9CBCBCBA9CBCBCB7DF84CCBA9CBCB7D
%F820FCC9A7C9A7C9A7C9A77CF8C9A7C9A7C9F8A8A8FD04FF277CC9A7C9A7
%C9A7C9A72727A8FFFFA8FFFF277CC9A7F826C9A7C9A7C9A7C9FCFD05F84C
%A2A9CBCBCBA9CBCBCBA9CBCBCBA9FD05FFCBCBFFCBCBCBFFCBCBCB2776F8
%CBFFCBCBA2F84AB5C9CFC9CFC9CFC9CFA1F8C9CFC9CFA152FD07FFF8C9CF
%C9CFC9CFC9CF27A8FD06FFA827C9CF27F8C9CFC9CFC9CFC9B5FD06F8277D
%CBCBCBFFCBCBCBFFCBCBCBFD05FFFD06CBA2A27DA27DF8A02752A27DA252
%F820B4C9A7C9C9C9A7C9C97CF8C9C9C9A720FD08FF7D76A7C9C9C9A7C951
%27FD07FFA8F8C9C9F827C9C9C9A7C9C9C9FCF8F827FD05F827FD0BCBFD05
%FFFD06CB4CF8277676C97D764BF821A2F820B5C9CAC9CFC9CAC9CFA1F8C9
%CFC9CA27CBFD07FFA827CAC9CFC9CAC9F8FD09FF27A1CF2727C9CFC9CAC9
%CFC9B5F8F8CB7D27FD0AF8FD05CBFD04FFCBA9CBCBCBA9CBCB77F820A7C9
%A74BF84CA97DF820FCC9A7C9A7C9A7C9A77CF8C9A7C97C7DA8FFFFFFA8FD
%04FFF8A7C9A7C9A75127A8FFFFA8FFFFFFA8CB7D27A7F827C9A7C9A7C9A7
%C9FCF8F8CBCBA253FD09F8CBCBA9CBCBFD06FFCBCBCBFFCBCBCBA8F8A776
%A72752CBFFA2F84AB5C9CFC9CFC9CFC9CFA1F8C9CFC927FD0AFF7D7DC9CF
%C9CF277DFD09FFA227CF2727C9CFC9CFC9CFC9B5F8F8CBCBCB7DFD09F8CB
%CBFFCBCBFD04FFFD09CB7DF8A1F87C5152CBCB7DF820FCC9C9C9A7C9C9C9
%A77CF8C9A7C94BA8FD09FFA827C9A7C9C9F8FD0BFFF8A7F851C9A7C9C9C9
%A7C9B4F8F8CBA2FD0BF8FD05CBFD05FFFD08CB4C27F877F827F8CBCBA2F8
%4AB5C9CFC9CAC9CFC9CAA1F8C9CAA752FD0BFFF8C9CAC9A752FD0AFFA827
%CAF827C9CAC9CFC9CAC9B5F8F84CFD05F852FD0BCBFD04FFCBCBCBA9CBCB
%CBA9CBF8F87ECBCB27F877CB7DF820FCC9A7C9A7C9A7C9A77CF8A0A74BA8
%CBFFFFA8FFFFFFA8FFFFA8F8C9A7C95127FFFFA8FFFFFFA8FFFFFFCBF8A7
%F827C9A7C9A7C9A7C9FCFD07F87DCBCBCBA9CBCBCBA9CBCBCBA9FD05FFCB
%CBFFCBCBCBFFA227CBFFCBCBCB7D52CBA2F84AB5C9CFC9CFC9CFC9CFA1F8
%A1CF52A8FD0BFF27A1CFC926A8FD0AFFA827CFF851C9CFC9CFC9CFC9B5FD
%05F84CCBFFCBCBCBFFCBCBCBFFCBCBCBFD05FFFD08CBA2FD07CBA2CB7DF8
%20B4C9A7C9C9C9A7C9C97CF87CC9F8CBFD0BFF2775C9C926A8FD0BFFF8C9
%F851C9C9C9A7C9C9C9FCFD04F877FD0FCBFD05FFFD11CBA2F820B5C9CAC9
%CFC9CAC9CFA1F8A1CF27FD0CFF2752CFC9F8FD0BFFA827CFF84BC9CFC9CA
%C9CFC9B5F8F852FD11CBFD04FFCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCB
%A97DF820FCC9A7C9A7C9A7C9A77CF87CA7F8FFFFA8FFFFFFA8FFFFFFA8CB
%5227A77C27A8A8FFFFFFA8FFFFFFA8CBA827A7F851C9A7C9A7C9A7C9FCF8
%F877A27DA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBFD06FFCBCBCBFFCBCBCBFF
%CBCBCBFFCBCBCBFFA2F84AB5C9CFC9CFC9CFC9CFA1F8A1CF27FD0CFF5252
%CFA127FD0BFF7D76CF2751C9CFC9CFC9CFC9B5FD05F8FFCB777D7DCBCBCB
%FFCBCBCBFFCBCBFD04FFFD12CB7DF820FCC9C9C9A7C9C9C9A77CF87CA7F8
%FD0CFF5227A7277DFD0BFF277CA7F851C9A7C9C9C9A7C9B4FD05F8CB7DF8
%F827FD0ACBFD05FFFD11CBA2F84AB5C9CFC9CAC9CFC9CAA1F8A1CA27A8FD
%0BFF2752CA527DFD0BFFF8C9CAF827C9CAC9CFC9CAC9B5FD05F8CBA2F8F8
%27FD0ACBFD04FFCBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCB7DF820FCC9
%A7C9A7C9A7C9A77CF87CA7F8CBFFFFFFA8FFFFFFA8FFFFFF2726A7F87DCB
%FFFFA8FFFFFFA8FFFFA8F8C9A7F827C9A7C9A7C9A7C9FCFD05F8CB7DF8F8
%27CBA9CBCBCBA9CBCBCBA9FD05FFCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCB
%CBA2F84AB5C9CFC9CFC9CFC9CFA1F8A1CF27A8FD0BFF2752CF27A2FD0AFF
%A827C9CFF851C9CFC9CFC9CFC9B5FD05F8CBA2F8F827CBFFCBCBCBFFCBCB
%CBFD05FFFD12CB7DF820B4C9A7C9C9C9A7C9C97CF87CC9F8A8FD0BFF2775
%C9F8FD0BFF527CC9A1F851C9C9C9A7C9C9C9FCFD05F8A252F8F8277DA27D
%A27DFD05CBFD05FFFD11CBA2F820B5C9CAC9CFC9CAC9CFA1F8A1CF277DFD
%0BFFF8A1CF27A8FD09FFA852CAC97DF852C9CFC9CAC9CFC9B5FD0FF8FD05
%CBFD04FFCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA97DF820FCC9A7C9A7
%C9A7C9A77CF87CA72027FFA8FFFFFFA8FFFFFFA8A8F8C9A7F8FFFFA8FFFF
%FFA8FD04FFF8A7C97CF852C9A7C9A7C9A7C9FCFD0FF8CBCBA9CBCBFD06FF
%CBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFA2F84AB5C9CFC9CFC9CFC9CFA1F8
%A1CFA027FD0BFFF8C9CF27A8FD09FF7D52CFC9A7F8A7C9CFC9CFC9CFC9B5
%FD0FF8CBCBFFCBCBFD04FFFD12CB7DF820FCC9C9C9A7C9C9C9A77CF87CA7
%A0F8A8FD09FFA827C9A7F8FD09FFA827A0C9C97CF8A0C9A7C9C9C9A7C9B4
%F8F8274C2727274C2727274C272727FD05CBFD05FFFD11CBA2F84AB5C9CF
%C9CAC9CFC9CAA1F8A1CAC9F8FD0BFFF8C9CAF8A8FD09FFF8C9CFC9A1F87D
%C9CAC9CFC9CAC9B5F8F8FD12CBFD04FFCBCBCBA9CBCBCBA9CBCBCBA9CBCB
%CBA9CBCB7DF820FCC9A7C9A7C9A7C9A77CF87CA7C9267DFFFFA8FFFFFFA8
%FFFF7DFD04F8CBFFFFFFA8FD04FF2727C9A7C9A7F87CC9A7C9A7C9A7C9FC
%F8F87D7E77CBCBA9CBCBCBA9CBCBCBA9CBCBCBA9FD05FFCBCBFFCBCBCBFF
%CBCBCBFFCBCBCBFFCBCBA2F84AB5C9CFC9CFC9CFC9CF76F8C9CFC9F87DFD
%0AFFA8A87DA8FD08FFA8F852C9CFC9CFF87CC9CFC9CFC9CFC9B5FD05F8CB
%CB7D7D77CBFFCBCBCBFFCBCBCBFD05FFFD12CB7DF820B4C9A7C9C9C9A7C9
%C927F8C9C9C9F827FD17FFF87CC9A7C9C9F851C9C9C9A7C9C9C9FCFD05F8
%CB7DF8F84CFD0ACBFD05FFFD11CBA2F820B5C9CAC9CFC9CAC9CF52F8C9CF
%A127FD18FFA2F87CCAC9CFF84BC9CFC9CAC9CFC9B5FD05F8CBA2F8F827FD
%0ACBFD04FFCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA97DF820FCC9A7C9
%A7C9A7C9A726F8A07C27FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FD04FFF827A0A7F851C9A7C9A7C9A7C9FCFD05F8A977F8F827CBCB
%CBA9CBCBCBA9CBCBFD06FFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFA2F84A
%B5C9CFC9CFC9CFC9CF52F852A8FD1DFF7D27512751C9CFC9CFC9CFC9B5FD
%05F8FFA2F8F827CBCBCBFFCBCBCBFFCBCBFD04FFFD12CB7DF820FCC9C9C9
%A7C9C9C9A7F8F8A8FD1FFFA8F8F851C9A7C9C9C9A7C9B4FD05F8A252F8F8
%277DA27DA27DFD05CBFD05FFFD11CBA2F84AB5C9CFC9CAC9CFC9A12727FD
%21FFA8F8F8C9CAC9CFC9CAC9B5FD0FF8FD05CBFD04FFCBCBCBA9CBCBCBA9
%CBCBCBA9CBCBCBA9CBCB7DF820FCC9A7C9A7C9A7C951F827CBFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF27F8
%C9A7C9A7C9A7C9FCFD0FF8A9CBCBCBA9FD05FFCBCBFFCBCBCBFFCBCBCBFF
%CBCBCBFFCBCBA2F84AB5C9CFC9CFC9CFC9275227FD22FF52F8C9CFC9CFC9
%CFC9B5FD0FF8FFCBCBCBFD05FFFD12CB7DF820B4C9A7C9C9C9A7F8FFA87D
%FD22FF27F820C9C9A7C9C9C9FCF8F82727274C2727274C2727274C27FD05
%CBFD05FFFD11CBA2F820B5C9CAC9CFC9A152CBFF52FD22FFA87D5252C9CA
%C9CFC9B5F8F8FD12CBFD04FFCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9
%7DF820FCC9A7C9A7C9F87DA8A827FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA877FFA8F8A0A7C9A7C9FCF8F8
%CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBFD06FFCBCBCBFFCBCBCBFFCB
%CBCBFFCBCBCBFFA2F84AB5C9CFC9CFA1F8FFFFFF27FD22FFA8A8FF27A0CF
%C9CFC9B5F8F87D777D7D7D777D7D7D777D7D7DCBCBFFCBCBFD04FFFD12CB
%7DF820FCC9C9C9A7F87DFFFFA87DFD22FF7DFFFFA8F8C9C9A7C9B4FD0FF8
%FD05CBFD05FFFD11CBA2F84AB5C9CFC9CAF8A8FFFFFF7DFD23FFA8FFCB20
%CFC9CAC9B5FD0FF8FD05CBFD04FFCBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9
%CBCB7DF820FCC9A7C97DF8CBFFFFA87DCBFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8CBFFFFF8A7C9A7C9FC
%FD0FF8A9CBCBCBA9FD05FFCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBA2F8
%4AB5C9CFC9A7F8FD04FF7DFD23FFA8FFFF52A7C9CFC9B5F8F87D7D7D777D
%7D7D777D7D7D777DFFCBCBCBFD05FFFD12CB7DF820B4C9A7C951F8FFFFFF
%A87DFD22FFA8FFFFFF277CC9C9C9FCF8F8FD12CBFD05FFFD11CBA2F820B5
%C9CAC92752FD04FF52FD1BFF7DA8FD06FFA8FFFF52A1C9CFC9B5F8F8FD12
%CBFD04FFCBA9CBCBCB28A2CBCBA9CBCBCBA9CBCBCBA97DF820FCC9A7C927
%27FFFFA8A852FFA82727F8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8A8F8F852FFFFFFA8A8FFFFFF277CC9A7C9FCF8F8FD0D27CBCBA9CBCB
%FD06FFCBCBCBF8277DCBFFCBCBCBFFCBCBCBFFA2F84AB5C9CFC95152FD04
%FF7DFFFF52F827FD15FF52F8F827FD05FFA8FFFF52A7C9CFC9B5FD0FF8CB
%CBFFCBCBFD04FFFD05CBF8F8F827FD09CB7DF820FCC9C9C951F8FFFFFFA8
%7DFFFF27F8F8FD15FF52F8F8A8FD04FFA8FFFFFFF8C9C9A7C9B4FD0FF8FD
%05CBFD05FFFD04CBFD05F8A2FD07CBA2F84AB5C9CFC976F8CBFFFFA827FF
%FFA87DA8FD16FFA8A8FD05FFA8A8FFA820CFC9CAC9B5FD06F852527D7777
%527D7777FD05CBFD04FFCBCBCBA9CB27FD05F828A2CBCBA9CBCB7DF820FC
%C9A7C9A7F8CBFFFF7D77CBFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8A8CBA820A7C9A7C9FCFD08F82777A2
%A9CBCBCBA9CBCBCBA9FD05FFCBCBFFCBCBA2FD0BF8A2F84AB5C9CFC9CF27
%A8FFFFFF7DFD22FFA87DFF52A1CFC9CFC9B5F8F852FD09F85277A8FFCBCB
%CBFD05FFFD08CB52FD09F87DF820B4C9A7C9C92752FFFFA87DFD22FF7D7D
%CB27C9A7C9C9C9FCF8F8CBCBA27D4C27FD07F8FD05CBFD05FFFD07CB77FD
%09F8A2F820B5C9CAC9CFC9F8FFFFFF7DFD22FFA87DA827C9CAC9CFC9B5F8
%F8FD06CBA227FD05F8FD05CBFD04FFCBA9CBCBCBA97727FD0AF87DF820FC
%C9A7C9A7C92727FFA87DFFA8FFFFFFA8FFFFFFA8FFFF7DA8FFFFFFA8A852
%7DA8FFFFFFA8FFFFFFA8FFFFFFA87727F8A7C9A7C9A7C9FCF8F8CBCBA253
%2727FD07F8CBCBA9CBCBFD06FFCBCBCB27FD05F84CCBFFCBCBCBFFA2F84A
%B5C9CFC9CFC9A727A8FF7DFD0BFF52F8F82752FF2727F87DFD0DFFA8F827
%CFC9CFC9CFC9B5F8F85221FD08F8527DCBCBCBFFCBCBFD04FFFD05CBFD05
%F877FD07CB7DF820FCC9C9C9A7C9C951F82752FD0CFF52FD06F8A8FD0EFF
%2726A1A7C9C9C9A7C9B4FD07F8212777A2FD09CBFD05FFFD04CBF8F8F852
%FD09CBA2F84AB5C9CFC9CAC9CFC927F827FD0BFF7D27F827F827F8F8F8FD
%0EFF2727C9CAC9CFC9CAC9B5FD06F852527D7777527D7777FD05CBFD04FF
%CBCBCBA9CBF8F87DCBCBCBA9CBCBCBA9CBCB7DF820FCC9A7C9A7C9A7C9A7
%F8F8A8FFFFA8FFFFFFA8FFFFFF7D2752A8A8FFA82727FFFFFFA8FFFFFFA8
%FFFFFFA8A84BF827C9A7C9A7C9A7C9FCFD0FF8A9CBCBCBA9FD05FFCBCBFF
%CB4CCBFFCBCBCBFFCBCBCBFFCBCBA2F84AB5C9CFC9CFC9CFC9CF27F8F87D
%FD1DFF7D7DA0F851C9CFC9CFC9CFC9B5FD0FF8FFCBCBCBFD05FFFD0FCBA2
%7DA27DF820B4C9A7C9C9C9A7C9C9F8267C27F87DA8FD17FF7D52F87CC9C9
%F851C9C9C9A7C9C9C9FCF8F82727274C2727274C2727274C27FD05CBFD05
%FFFD04CBF8F8F8CB7D7D77A2CBCBF8F8F8A2F820B5C9CAC9CFC9CAC9CF27
%27C9FD04F827A8A8FD11FF7D7DF8F8446E27C9CFF84BC9CFC9CAC9CFC9B5
%F8F8FD12CBFD04FFCBA9CBCBCBF8F8F8CB53F8F852A9CBF8F8F87DF820FC
%C9A7C9A7C9A7C9A7F8F8F8208C92F8208C92205277A8A8CBA8CBA8CBA8A8
%7D772720448C8C2044B48C6820C9F827C9A7C9A7C9A7C9FCF8F8CBCBCBA9
%CBCBCBA9CBCBCBA9CBCBCBA9CBCBFD06FFCBCBCBF8F8F8CB7DF8F87DFFCB
%F8F8F8A2F84AB5C9CFC9CFC9CFC9CF27F86EFCB4B5B5206FB4B5FCB59292
%68F8F8F820B58CB58CB5B5B4B49344B5B5B4B46EF8F8F8C9CFC9CFC9CFC9
%B5F8F8CBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBFD04FFFD05CBF8F8F8
%CB77F8F852CBCBF8F8F87DF820FCC9C9C9A7C9C9C9A7F8F8FCFCB4B4B5B4
%682044928CB48C68F86E8C688CB4B4FCFCB48C6868B4B5FCB4B4FCF8F827
%76A7C9C9C9A7C9B4F8F8FD12CBFD05FFFD04CBF8F8F8CB77F8F87DCBCBF8
%F8F8A2F84AB5C9CFC9CAC9CFC952F8F893B4B4B5B4B5B4FCB54444209368
%B4B5B5B4B44492686E206E92B4B5B4B5B4FCA1CBFF7D27CAC9CFC9CAC9B5
%F8F8FD12CBFD04FFCBCBCBA9CBF8F8F8CB77F8F852CBCBF8F8F87DF820FC
%C9A7C9A7C9A72052A8A827688CFCB4FCB4FD06FCB4264A20B4B4FCFCB48C
%B4FCFCB4FCB4FCB46FA8FFFFA87D27C9A7C9A7C9FCF8F8CBA9CBCBCBA9CB
%CBCBA9CBCBCBA9CBCBCBA9FD05FFCBCBFFCBF8F8F8A252F8F852A2A2F8F8
%F8A2F84AB5C9CFC9CFC97C52FD04FFA2B5B5B4B5B4B5B4B5B4B5B568FEA4
%7A92B4B5B4B5B4B5B4B5B4B5B4B5B5A8FD05FFF8C9CFC9CFC9B5F8F8CBFF
%CBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFD05FFFD05CBFD0DF87DF820B4C9A7
%C9C9C9267DFD05FF44FCB4B4B5FCB4B4B5FCB49274C620B4B5FCB4B4B5FC
%B4B4B5FCB4B48CFD06FF277CA7C9C9C9FCF8F8FD12CBFD05FFFD04CBFD0D
%F8A2F820B5C9CAC9CFC9F8FD05FFA820B4B4B5B4B5B4B5B4B5B4B4B568B4
%B5B4B5B4B5B4B5B4B5B4B5B4B592FD06FF2776CAC9CFC9B5F8F8FD12CBFD
%04FFCBA9CBCBCBFD0DF87DF820FCC9A7C9A77CF8A8A8FD04FF27B4B4FCB4
%FCB4FCB4FCB4FCFCFCB4FCB4FCB4FCB4FCB4FCB4FCB4FC20FFFFA8FFFFFF
%7D26A7C9A7C9FCF8F8CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBFD06FF
%CBCBCB2752274C2752274C2752274C27A2F84AB5C9CFC9CFA1F8FD06FF52
%8CB4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B476FD06
%FF7D52CFC9CFC9B5F8F8CBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBFD04
%FFFD12CB7DF820FCC9C9C9A77CF8A8FD05FF27B4B5FCB4B4B5FCB4B4B5FC
%B4B4B5FCB4B4B5FCB4B4B5FCB4B4B5FC20FD06FF7D27C9C9A7C9B4F8F8FD
%12CBFD05FFFD0CCBA2A2A8CBCBA2F84AB5C9CFC9CAC9F8FD06FF4CFCB4B5
%B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B592A8FD05FF52
%A1CFC9CAC9B5F8F8FD12CBFD04FFCBCBCBA9CBCB7D282777CBA9FD04F852
%CB7DF820FCC9A7C9A7C9F87DFFFFA8FFFF20FCB4FCB4FCB4FCB4FCB4FCB4
%FCB4FCB4FCB4FCB4FCB4FCB4FCB4FC8C7DCBFFFFA8A8F8C9A7C9A7C9FCF8
%F8CBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9FD05FFCBCBFFCBA2FD04F8
%7752FD05F877A2F84AB5C9CFC9CFC9A77DFD04FFA892B5B4B5B4B5B4B5B4
%B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B48CA8FFFFA8527CC9CFC9
%CFC9B5F8F8CBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFD05FFFD05CB4CFD
%0BF84C7DF820B4C9A7C9C9C9A727527DA87D4B8CFCB4B4B5FCB4B4B5FCB4
%B4B5FCB4B4B5FCB4B4B5FCB4B4B5FCB4B4B5B4687527F820C9C9A7C9C9C9
%FCF8F8FD12CBFD05FFFD04CBFD08F82727F8F8F8A2F820B5C9CAC9CFC9CA
%A1F8F8F8B4B4B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5
%B4B5B4B5B4B5B4B493F827CFC9CAC9CFC9B5F8F8FD12CBFD04FFCBA9CBCB
%CBF8F8F85253F8F827A977F8F8F87DF820FCC9A7C9A7C9A77CF8F8208CFC
%B4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FC
%B4FC8CF8F8A7C9A7C9A7C9FCF8F8CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9
%CBCBFD06FFCBCBCBF8F8F8CBFFF8F87DFFCBF8F8F8A2F84AB5C9CFC9CFC9
%CFA1F8F820B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4
%B5B4B5B4B5B4B5B4B593F827CFC9CFC9CFC9B5F8F8CBCBCBFFCBCBCBFFCB
%CBCBFFCBCBCBFFCBCBFD04FFFD05CBF8F8F8CBCBF8F852CBCBF8F8F87DF8
%20FCC9C9C9A7C9C97CF8F820B4FCB4B4B5FCB4B4B5FCB4B4B5FCB4B4B5FC
%B4B4B5FCB4B4B5FCB4B4B5FCB4B4B5FC68F8F8A7C9C9C9A7C9B4F8F8FD12
%CBFD05FFFD04CBF8F8F8A2A2F8F852A2A2F8F8F8A2F84AB5C9CFC9CAC9CF
%76F8F8F8B5B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5B4B5
%B4B5B4B5B4B5B4B592F827CAC9CFC9CAC9B5F8F8FD12CBFD04FFCBCBCBA9
%CBFD0DF87DF820FCC9A7C9A7C9A74BF8F8208CB4B4FCB4FCB4FCB4FCB4FC
%B4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FCB4FCFCB468F8F8A7C9A7C9A7
%C9FCF8F8CBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9FD05FFCBCBFFCBFD
%0DF8A2F84AB5C9CFC9CFC9CFC95227F8F820928CB5B4B4B4B5B5B4B5B4B5
%B4B5B4B5B4B5B4B5B4B5B4B5B4FD04B5FC9320F8F8A0CFC9CFC9CFC9B5F8
%F8CBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFD05FFFD05CBFD0DF87DF820
%B4C9A7C9C9C9A7C9C9FD05F82727F8204468928CB48CB48CB48CB48CB48C
%B48CB48CB468682020FD06F8C9C9C9A7C9C9C9FCF8F8FD12CBFD05FFFD04
%CB274C274C274C274C274C274C27A2F820B5C9CAC9CFC9CAC9CF27F8F8F8
%A8FFFFCBFFA8FFA8CB7DA27DA82727F852274C275252A27DA8A8FFCBA8FD
%05F8C9CFC9CAC9CFC9B5F8F8FD12CBFD04FFCBA9CBCBCBA9CBCBCBA9CBCB
%CBA9CBCBCBA97DF820FCC9A7C9A7C9A7C9A7F8F8F827A8FFFFA8FFFFFFA8
%FFFFFFA8CBFF7DA8CBFFFFFFCBFFFFA8CBFFFFA8A87DF8F8F827C9A7C9A7
%C9A7C9FCF8F8CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBFD06FFCBCBCB
%FFCBCBCBFFA2A2A2FFCBCBCBFFA2F84AB5C9CFC9CFC9CFC9CF27F8F8A8FD
%0FFF7DFD0EFF27F8F8F8C9CFC9CFC9CFC9B5F8F8CBCBCBFFCBCBCBFFCBCB
%CBFFCBCBCBFFCBCBFD04FFFD08CB4CFD06F87DCBCB7DF820FCC9C9C9A7C9
%C9C9A7F8F8F8FD0FFFA87DFD0EFF27F8F827C9A7C9C9C9A7C9B4F8F8FD06
%CBA2FD0BCBFD05FFFD05CBA8FD09F852CBA2F84AB5C9CFC9CAC9CFC9CAF8
%F8F8FD10FF27FD0EFF52F8F8F8C9CAC9CFC9CAC9B5F8F8FD05CBA27DFD0B
%CBFD04FFCBCBCBA9CBCBFD0BF8777DF820FCC9A7C9A7C9A7C9A7F8F8F8FF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8A8F8FFA8FFFFFFA8FFFFFFA8FD04FF27
%F8F826C9A7C9A7C9A7C9FCF8F8CBA9CBCBCB52F8CBCBA9CBCBCBA9CBCBCB
%A9FD05FFCBCBFFCB77FD04F8272752FD05F8A2F84AB5C9CFC9CFC92727F8
%26F8F87DFF7DA8A8FFA8FD05FFA8A87D7D27FFA8FFA8FFA8FFA8FFA8FFFF
%FFA8FD04F85151A1CFC9CFC9B5F8F8CBFFCBCBCBF8F8A2CBFFCBCBCBFFCB
%CBCBFD05FFFD05CB4CF8F821FD05CB52F8F8F852F820B4C9A7C9C9A0F827
%76517651272727262727272627272726272727262727272627FD0BF82727
%272627F87DC9C9C9FCF8F8FD04CBA2272777FD0ACBFD05FFFD04CBF8F8F8
%A8FD06CB4CF8F877F820B5C9CAC9CFA0F8C9CFC9CAC9CFC9CAC9CFC9CAC9
%CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9A7F8
%A1C9CFC9B5F8F8A2A2A27D52527C20A2A2A27DFD06CBFD04FFCBA9CBCBCB
%F8F8F8CBA9CBCBCBA9CB77F8F827F820FCC9A7C9A726F8C9A7C9A7C9A7C9
%A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9
%A7C9A7C9A7F87CC9A7C9FCF8F852F8F827F87DA027F8F8F852CBCBCBA9CB
%CBFD06FFCBCBCBF8F8F8CBFFCBCBCBFFCB52F8F877F84AB5C9CFC9CF52F8
%C9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CF
%C9CFC9CFC9CFC9CFC9CFC9A1F8A7C9CFC9B5F8F8CBA22727C9CFC9CF52F8
%A2FFCBCBCBFFCBCBFD04FFFD05CB27F8F821A8FD04CB52F8F8F852F820FC
%C9C9C9A74BF8C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9
%C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A1F8A1C9A7C9B4F8F8CBCBA227
%27A0767CF8FD09CBFD05FFFD04CB77FD04F827274CFD05F8A2F84AB5C9CF
%C9CAA1FD05F8FD04274B2727517C5276517C5276517C5276517C5276517C
%5276517C527651512727274B2726CFC9CAC9B5F8F8CBCBCB27A05176CAF8
%A8FD08CBFD04FFCBCBCBA9CBCBFD0BF8777DF820FCC9A7C9A7C9A75126FD
%05F826FD09F827F826F827F826F827F826FD05F827F826FD05F82751A7C9
%A7C9FCF8F8CBA9A2F82700F827F87DCBCBCBA9CBCBCBA9FD05FFCBCBFFCB
%CBA8FD09F852CBA2F84AB5C9CFC9CFC9CFC9CF27F82752C9CFC9CFC9CFC9
%CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC927F8F8A1CFC9
%CFC9CFC9B5F8F8CBFF7DF852FFCB52F827CBCBCBFFCBCBCBFD05FFFD07CB
%A84C21FD05F87DCBCB7DF820B4C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9
%A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C97CA7C9
%C9C9A7C9C9C9FCF8F8CBCB277DFD04CB7D27A2FD07CBFD05FFFD09CBA8A2
%A2A8FD04CBA2F820B5C9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9
%CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9
%CFC9B5F8F8FD12CBFD04FFCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA97D
%F820FCC9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9
%A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9A7C9FCF8F8CB
%CBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBFD06FFCBCBCBFFCBCBCBFFCBCB
%CBFFCBCBCBFFA2F84AB5C9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CF
%C9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CF
%C9CFC9B5F8F8CBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBFD04FFFD12CB
%7DF820FCC9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9
%C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9B4F8F8
%FD12CBFD05FFFD11CBA2F820446E446E446E446E446E446E446E446E446E
%446E446E446E446E446E446E446E446E446E446E446E446E446E446E446E
%446E446E446E44F8F8FD12CBFD04FFCBCBCBA9CBCBCBA9CBCBCBA9CBCBCB
%A9CBCB7DFD3BF8CBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9FD05FFCBCB
%FFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCB5277527752775277527752775277
%527752775277527752775277527752775277527752775277527752775277
%527752775277527752775277527752CBFFCBCBCBFFCBCBCBFFCBCBCBFFCB
%CBCBFD05FFFD60CBFD05FFFD5FCBFD04FFCBA9CBCBCBA9CBCBCBA9CBCBCB
%A9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CB
%CBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCB
%A9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBFD06FFCBCBCBFF
%CBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCB
%CBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFF
%CBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCBCBFFCBCB
%FD04FFFD60CBFD05FFFD5FCBFD04FFCBCBCBA9CBCBCBA9CBCBCBA9CBCBCB
%A9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CB
%CBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCB
%A9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9CBCBCBA9FFFFFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Arial-Black
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Arial-Black Arial-Black
[/_Arial-Black/Arial-Black 0 0 0 TZ%AI3_EndEncoding TrueType
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0.84 0.9 0 k
(New Color Swatch 4) Pc
0.0471 0.1412 0.2863 0.0039 0.9647 0.8431 0.6549 Xa
(New Color Swatch) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0.0275 0.1804 0.0078 0 0.9882 0.8157 1 Xa
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
312.5293 21.0107 m
-67.9224 21.0107 L
-67.9224 532.6538 L
312.5293 532.6538 L
312.5293 21.0107 L
fu0 0.84 0.9 0 k
0 R
0 0 0 1 K
2 J 7 w 2 M236.9492 55.1113 m
7.9648 55.1113 L
7.9648 505.1118 L
236.9492 505.1118 L
236.9492 55.1113 L
b0 Ap
0.0471 0.1412 0.2863 0.0039 0.9647 0.8431 0.6549 Xa
0 J 1 w 4 M17.0586 496.9731 m
227.8555 496.9731 L
227.8555 63.25 L
17.0586 63.25 L
17.0586 496.9731 L
f0.52 0.52 0.5 1 k
0 R
0.52 0.52 0.5 1 K
2 J 1.8 w 2 M56.5898 373.6699 m
55.3896 367.9697 54.3896 359.6699 57.5898 354.6699 C
84.0898 361.4697 64.5898 385.9697 67.5898 401.6699 C
64.3896 430.4697 71.3896 457.4697 84.5898 480.6699 C
88.8896 483.4697 93.0898 489.1699 98.5898 485.6699 C
121.3896 457.4697 126.3896 416.9697 117.5898 380.6699 C
117.3896 378.1699 117.5898 374.9697 120.5898 374.6699 C
123.8896 378.6699 129.3896 370.6699 130.5898 377.6699 C
131.0898 415.1699 134.5898 451.4697 154.5898 480.6699 C
157.3896 485.1699 161.8896 485.4697 165.5898 487.6699 C
174.8896 484.1699 178.8896 473.1699 182.5898 464.6699 C
193.8896 431.9697 179.8896 397.4697 171.5898 366.6699 C
178.3896 360.4697 185.5898 355.1699 193.5898 351.6699 C
195.0898 359.4697 195.0898 368.9697 193.5898 376.6699 C
194.5898 496.6699 L
198.5898 496.6699 L
196.5898 371.6699 L
199.3896 357.1699 194.0898 339.1699 206.5898 328.6699 C
213.3896 313.4697 215.3896 291.4697 208.5898 275.6699 C
205.0898 268.1699 203.8896 259.9697 197.5898 253.6699 C
198.8896 240.4697 193.8896 224.6694 205.5898 215.6694 C
210.3896 203.6689 212.5898 185.6689 201.5898 175.6689 C
202.0898 165.6689 205.5898 151.9688 198.5898 143.6689 C
198.5898 115.6689 L
202.5898 111.4688 213.0898 116.4688 212.5898 107.6689 C
212.8896 100.4688 212.8896 92.1689 208.5898 87.6689 C
202.3896 88.9688 199.8896 80.4688 193.5898 81.6689 C
184.0898 93.9688 168.8896 83.4688 155.5898 86.6689 C
125.5898 89.9688 95.5898 84.4688 65.5898 87.6689 C
61.0898 82.9688 54.8896 79.6689 49.5898 84.6689 C
47.3896 88.6689 42.0898 89.9688 37.5898 90.6689 C
36.0898 98.4688 35.8896 107.9688 39.5898 114.6689 C
43.8896 115.4688 50.5898 112.4688 51.5898 118.6689 C
50.5898 119.6689 L
50.5898 123.4688 50.5898 129.6689 50.5898 134.6689 C
52.3896 137.6689 51.3896 141.9688 51.5898 145.6689 C
50.0898 149.6689 45.0898 147.1689 44.5898 151.6689 C
45.0898 161.1689 49.0898 174.9688 39.5898 181.6689 C
36.3896 191.6689 36.3896 205.4688 43.5898 213.6689 C
56.3896 220.9692 49.8896 235.9697 51.5898 247.6699 C
35.5898 263.9697 28.8896 285.1699 33.5898 308.6699 C
34.5898 327.9697 53.5898 340.9697 52.5898 359.6699 C
53.5898 360.6699 L
52.5898 361.6699 L
54.3896 406.1699 53.3896 452.9697 53.5898 496.6699 C
55.5898 496.6699 L
56.5898 373.6699 L
b0.01 0.01 0 0 k
0.01 0.01 0 0 K
174.5898 473.6699 m
191.0898 441.1699 179.0898 400.1699 166.5898 369.6699 C
166.5898 364.6699 L
174.8896 356.1699 186.8896 352.9697 192.5898 342.6699 C
192.8896 320.6699 196.3896 302.6699 193.5898 280.6699 C
194.5898 279.6699 L
191.3896 267.6699 198.8896 249.4697 182.5898 244.6699 C
147.0898 227.9692 90.5898 223.4692 57.5898 248.6699 C
56.0898 260.4697 56.0898 273.9697 57.5898 285.6699 C
56.5898 286.6699 L
57.5898 287.6699 L
56.5898 288.6699 L
57.5898 289.6699 L
56.5898 290.6699 L
57.5898 291.6699 L
56.5898 292.6699 L
57.5898 293.6699 L
56.0898 303.1699 56.0898 314.1699 57.5898 323.6699 C
57.3896 326.6699 58.3896 332.9697 56.5898 336.6699 C
57.5898 337.6699 L
57.0898 339.9697 57.8896 344.1699 57.5898 347.6699 C
63.3896 356.4697 73.8896 357.9697 77.5898 367.6699 C
72.3896 394.1699 65.8896 426.1699 75.5898 452.6699 C
79.3896 462.9697 83.3896 474.1699 91.5898 481.6699 C
98.8896 482.4697 101.3896 474.1699 104.5898 469.6699 C
122.5898 442.4697 116.5898 404.9697 113.5898 372.6699 C
115.0898 370.6699 117.0898 369.6699 119.5898 369.6699 C
123.5898 370.9697 133.5898 366.4697 135.5898 373.6699 C
134.5898 412.6699 138.0898 449.9697 159.5898 479.6699 C
165.8896 487.6699 170.5898 477.9697 174.5898 473.6699 C
b50.5898 256.6699 m
36.3896 270.6699 35.8896 294.6699 39.5898 314.6699 C
42.5898 322.4697 44.8896 330.4697 49.5898 337.6699 C
51.5898 331.6699 L
50.5898 256.6699 L
b206.5898 316.6699 m
210.5898 299.4697 208.5898 279.4697 200.5898 264.6699 C
198.8896 285.1699 199.8896 309.9697 199.5898 330.6699 C
203.3896 327.4697 204.3896 321.4697 206.5898 316.6699 C
b0.52 0.52 0.5 1 k
0.52 0.52 0.5 1 K
75.5898 294.6699 m
78.3896 291.6699 74.8896 288.6699 74.5898 285.6699 C
73.0898 283.9697 70.5898 284.9697 68.5898 284.6699 C
65.3896 286.9697 66.3896 291.9697 67.5898 294.6699 C
69.3896 298.4697 73.8896 298.4697 75.5898 294.6699 C
b174.5898 292.6699 m
173.3896 289.9697 174.0898 286.4697 170.5898 284.6699 C
167.8896 283.6699 166.3896 286.1699 164.5898 287.6699 C
163.8896 291.9697 165.8896 295.9697 168.5898 297.6699 C
172.3896 299.4697 174.0898 294.9697 174.5898 292.6699 C
b138.5898 260.6699 m
137.0898 258.1699 133.0898 256.9697 130.5898 254.6699 C
135.5898 249.6699 L
135.0898 249.1699 134.3896 248.6699 134.5898 247.6699 C
130.3896 248.9697 125.3896 248.9697 121.5898 251.6699 C
115.8896 250.4697 110.5898 247.9697 104.5898 247.6699 C
104.3896 252.9697 112.8896 249.4697 112.5898 254.6699 C
109.8896 256.4697 105.3896 255.4697 104.5898 259.6699 C
110.5898 261.4697 116.5898 256.9697 122.5898 255.6699 C
128.0898 256.9697 132.8896 262.9697 138.5898 260.6699 C
b0.03 0.15 0.29 0 k
0 J 1 w 4 M61.5898 237.6699 m
62.5898 235.1694 59.5898 234.4692 58.5898 232.6694 C
57.5898 232.1694 56.0898 233.6694 56.5898 234.6694 C
54.5898 238.4697 59.5898 242.1699 61.5898 237.6699 C
f0 0.84 0.9 0 k
0 R
0 0.84 0.9 0 K
2 J 1.8 w 2 M187.5898 223.6694 m
176.8896 213.4688 174.8896 198.1689 177.5898 183.6689 C
180.3896 180.4688 181.8896 176.6689 185.5898 173.6689 C
200.3896 176.1689 190.8896 158.4688 193.5898 150.6689 C
191.8896 147.9688 186.8896 147.9688 183.5898 146.6689 C
141.0898 140.4688 98.3896 140.4688 57.5898 150.6689 C
59.0898 158.4688 53.3896 171.6689 64.5898 172.6689 C
72.5898 182.9688 72.8896 201.4688 66.5898 212.6689 C
65.5898 218.1694 55.8896 218.4692 58.5898 223.6694 C
67.5898 231.6694 L
77.3896 224.1694 87.5898 217.9692 99.5898 215.6694 C
100.5898 216.6694 L
103.3896 216.9692 109.0898 215.9692 112.5898 217.6694 C
109.5898 214.9688 109.3896 210.9688 109.5898 206.6689 C
112.5898 202.6689 116.5898 200.9688 121.5898 201.6689 C
125.3896 204.9688 130.5898 210.1689 125.5898 214.6689 C
123.0898 218.9692 118.8896 218.9692 114.5898 218.6694 C
117.5898 220.6694 120.0898 222.9692 123.5898 223.6694 C
131.8896 215.4688 144.3896 214.4688 155.5898 216.6694 C
163.0898 220.1694 171.0898 227.1694 175.5898 233.6694 C
180.5898 232.4692 183.5898 226.9692 187.5898 223.6694 C
b109.5898 224.6694 m
110.0898 225.1694 110.5898 225.9692 111.5898 225.6694 C
110.0898 222.9692 106.0898 221.9692 102.5898 221.6694 C
94.5898 223.4692 85.8896 225.4692 80.5898 231.6694 C
89.5898 227.9692 99.8896 226.9692 109.5898 224.6694 C
b164.5898 230.6694 m
158.0898 221.1694 145.8896 218.9692 134.5898 221.6694 C
132.5898 222.9692 130.0898 223.1694 128.5898 225.6694 C
129.5898 226.6694 L
130.5898 225.6694 L
142.5898 225.9692 153.3896 228.9692 164.5898 230.6694 C
b0.01 0.01 0 0 k
0.01 0.01 0 0 K
203.5898 211.6689 m
203.8896 202.9688 207.3896 194.4688 204.5898 185.6689 C
201.5898 180.9688 195.8896 174.6689 189.5898 178.6689 C
179.0898 184.1689 181.5898 197.9688 182.5898 207.6689 C
184.5898 211.6689 186.0898 217.9692 191.5898 218.6694 C
197.3896 220.6694 201.0898 215.4688 203.5898 211.6689 C
b63.5898 206.6689 m
63.5898 196.9688 68.8896 182.4688 58.5898 175.6689 C
55.3896 173.6689 50.5898 174.9688 47.5898 176.6689 C
41.3896 183.4688 42.8896 193.4688 42.5898 202.6689 C
44.5898 207.1689 45.5898 213.6689 51.5898 214.6689 C
56.5898 214.4688 62.5898 212.1689 63.5898 206.6689 C
b0.03 0.1 1 0 k
0.03 0.1 1 0 K
121.5898 210.6689 m
121.0898 209.1689 120.8896 207.6689 119.5898 206.6689 C
117.5898 206.4688 115.8896 206.9688 114.5898 208.6689 C
114.8896 210.6689 113.8896 213.4688 116.5898 213.6689 C
119.0898 214.4688 121.0898 212.6689 121.5898 210.6689 C
b0.01 0.01 0 0 k
0.01 0.01 0 0 K
120.5898 136.6689 m
124.5898 131.1689 121.0898 122.6689 123.5898 116.6689 C
120.8896 113.4688 115.0898 114.4688 111.5898 115.6689 C
94.5898 112.6689 82.0898 117.1689 64.5898 115.6689 C
60.8896 122.1689 62.8896 130.9688 66.5898 136.6689 C
71.5898 140.6689 L
87.3896 137.9688 104.3896 137.9688 120.5898 136.6689 C
b183.5898 131.6689 m
184.8896 126.6689 185.8896 119.1689 182.5898 114.6689 C
129.5898 115.6689 L
130.3896 122.6689 128.3896 128.4688 127.5898 134.6689 C
129.5898 136.6689 L
145.8896 136.1689 161.5898 137.1689 176.5898 139.6689 C
183.5898 131.6689 L
b0.03 0.15 0.29 0 k
0 J 1 w 4 M118.5898 109.6689 m
119.5898 108.6689 L
120.5898 109.6689 L
121.0898 108.4688 122.5898 108.6689 123.5898 108.6689 C
124.5898 109.6689 L
126.0898 109.6689 129.8896 109.6689 132.5898 109.6689 C
155.3896 108.1689 182.5898 108.1689 206.5898 109.6689 C
211.3896 104.6689 205.8896 98.9688 207.5898 92.6689 C
170.0898 90.9688 130.3896 91.9688 93.5898 91.6689 C
41.5898 93.6689 L
42.8896 99.4688 38.3896 109.1689 45.5898 110.6689 C
70.5898 108.9688 94.3896 109.9688 118.5898 109.6689 C
f192.5898 228.6694 m
188.5898 230.6694 185.5898 235.6694 181.5898 237.6699 C
183.5898 241.1699 188.3896 242.9697 191.5898 245.6699 C
192.5898 228.6694 L
f0 To
0 1 -1 0 1.0615 185.4023 0 Tp
0 Tv
TP
-111.9902 0 Td
0 Tr
0 0 0 1 k
%_ 0 50 XQ
/_Arial-Black 72 72 -22.0781 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
1 Ta
0 1 2 2 3 Th
0 Tq
240 Tg
0 0 Tl
0 Tc
0 Tw
(OBEY) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
0 1 -1 0 293.4668 356.1123 0 Tp
0 Tv
TP
-124.0137 0 Td
0 Tr
(MIFFY) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0.03 0.15 0.29 0 k
264.6201 118.7588 m
270.0391 103.8574 l
282.4014 103.6875 l
272.4102 95.2207 l
276.1357 81.8438 l
264.4512 89.9717 l
253.7832 83.0283 l
257.001 95.3906 l
248.0254 103.5186 l
260.2734 103.5029 l
264.6201 118.7588 l
f/BBAccumRotation (-6.283185) XT
*u
0 0 0 1 0 0 0 Xa
271.6953 105.3213 m
289.1963 105.3242 L
275.0361 95.0283 L
281.1387 76.2969 L
265.1914 87.877 L
249.4463 76.4238 L
255.4678 94.915 L
241.1641 105.3223 l
258.8096 105.3232 L
265.251 125.1055 l
271.6953 105.3213 L
f/BBAccumRotation (-3.769911) XT
1 D
265.2256 115.4316 m
261.0928 102.7393 L
249.7715 102.7393 l
258.9482 96.0625 L
255.0859 84.1992 L
265.1875 91.5469 L
275.4189 84.1172 L
271.5039 96.1348 L
280.5889 102.7412 L
269.3604 102.7393 L
265.2256 115.4316 l
f/BBAccumRotation (-3.769911) XT
*U
0 D
273.4385 102.1738 m
274.5303 101.7832 275.249 99.5439 273.8232 99.3682 c
272.3477 99.1924 272.9414 101.6133 273.4385 102.1738 C
f/BBAccumRotation (-6.283185) XT
256.4248 101.2695 m
257.8281 100.9287 258.1563 98.916 257.0762 98.6328 c
255.3564 98.1973 256.0518 100.6299 256.4248 101.2695 C
f/BBAccumRotation (-6.283185) XT
262.9404 94.21 m
263.9648 94.0283 264.9941 93.8486 266.0176 93.667 C
266.2617 93.8369 267.1045 93.9053 267.1045 94.21 C
267.2852 94.21 267.4658 94.21 267.6465 94.21 C
267.6465 94.0283 267.6465 93.8486 267.6465 93.667 C
267.585 93.667 267.5283 93.667 267.4658 93.667 C
267.2676 93.4971 266.9229 93.2432 266.9229 92.9434 C
267.1885 92.9033 267.6465 92.875 267.6465 92.5811 C
267.709 92.5811 267.7715 92.5811 267.8281 92.5811 C
267.8281 92.5195 267.8281 92.457 267.8281 92.4004 C
267.7646 92.4004 267.709 92.4004 267.6465 92.4004 C
267.6465 92.3379 267.6465 92.2754 267.6465 92.2197 C
266.8604 92.377 266.0742 92.5361 265.2881 92.7002 C
264.4453 92.5977 263.6025 92.4961 262.7598 92.4004 C
262.7598 92.4619 262.7598 92.5195 262.7598 92.5811 C
262.8223 92.5811 262.8848 92.5811 262.9404 92.5811 C
262.9404 92.6436 262.9404 92.7002 262.9404 92.7627 C
263.1338 92.8975 263.4834 93.0283 263.4834 93.3057 C
263.5469 93.3057 263.6084 93.3057 263.665 93.3057 C
263.665 93.3672 263.665 93.4238 263.665 93.4863 C
263.5342 93.5371 262.5391 94.0283 262.9404 94.0283 C
262.9404 94.0908 262.9404 94.1484 262.9404 94.21 C
f/BBAccumRotation (-6.283185) XT
0.0471 0.1412 0.2863 0.0039 0.9647 0.8431 0.6549 Xa
-20.9287 474.9697 m
-15.5098 460.0684 l
-3.1475 459.8984 l
-13.1387 451.4316 l
-9.4131 438.0547 l
-21.0977 446.1826 l
-31.7656 439.2393 l
-28.5479 451.6016 l
-37.5234 459.7295 l
-25.2754 459.7139 l
-20.9287 474.9697 l
f/BBAccumRotation (-6.283185) XT
*u
0 0 0 1 0 0 0 Xa
-13.8535 461.5322 m
3.6475 461.5352 L
-10.5127 451.2393 L
-4.4102 432.5078 L
-20.3574 444.0879 L
-36.1025 432.6348 L
-30.0811 451.126 L
-44.3848 461.5332 l
-26.7393 461.5342 L
-20.2979 481.3164 l
-13.8535 461.5322 L
f/BBAccumRotation (-3.769911) XT
1 D
-20.3232 471.6426 m
-24.4561 458.9502 L
-35.7773 458.9502 l
-26.6006 452.2734 L
-30.4629 440.4102 L
-20.3613 447.7578 L
-10.1299 440.3281 L
-14.0449 452.3457 L
-4.96 458.9521 L
-16.1885 458.9502 L
-20.3232 471.6426 l
f/BBAccumRotation (-3.769911) XT
*U
0 D
-12.1104 458.3848 m
-11.0186 457.9941 -10.2998 455.7549 -11.7256 455.5791 c
-13.2012 455.4033 -12.6074 457.8242 -12.1104 458.3848 C
f/BBAccumRotation (-6.283185) XT
-29.124 457.4805 m
-27.7207 457.1396 -27.3926 455.127 -28.4727 454.8438 c
-30.1924 454.4082 -29.4971 456.8408 -29.124 457.4805 C
f/BBAccumRotation (-6.283185) XT
-22.6084 450.4209 m
-21.584 450.2393 -20.5547 450.0596 -19.5313 449.8779 C
-19.2871 450.0479 -18.4443 450.1162 -18.4443 450.4209 C
-18.2637 450.4209 -18.083 450.4209 -17.9023 450.4209 C
-17.9023 450.2393 -17.9023 450.0596 -17.9023 449.8779 C
-17.9639 449.8779 -18.0205 449.8779 -18.083 449.8779 C
-18.2813 449.708 -18.626 449.4541 -18.626 449.1543 C
-18.3604 449.1143 -17.9023 449.0859 -17.9023 448.792 C
-17.8398 448.792 -17.7773 448.792 -17.7207 448.792 C
-17.7207 448.7305 -17.7207 448.668 -17.7207 448.6113 C
-17.7842 448.6113 -17.8398 448.6113 -17.9023 448.6113 C
-17.9023 448.5488 -17.9023 448.4863 -17.9023 448.4307 C
-18.6885 448.5879 -19.4746 448.7471 -20.2607 448.9111 C
-21.1035 448.8086 -21.9463 448.707 -22.7891 448.6113 C
-22.7891 448.6729 -22.7891 448.7305 -22.7891 448.792 C
-22.7266 448.792 -22.6641 448.792 -22.6084 448.792 C
-22.6084 448.8545 -22.6084 448.9111 -22.6084 448.9736 C
-22.415 449.1084 -22.0654 449.2393 -22.0654 449.5166 C
-22.002 449.5166 -21.9404 449.5166 -21.8838 449.5166 C
-21.8838 449.5781 -21.8838 449.6348 -21.8838 449.6973 C
-22.0146 449.748 -23.0098 450.2393 -22.6084 450.2393 C
-22.6084 450.3018 -22.6084 450.3594 -22.6084 450.4209 C
f/BBAccumRotation (-6.283185) XT
ULB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Layer 2) Ln
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
