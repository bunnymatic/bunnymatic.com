%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8.0.1
%%For: (miffy ) (obeymiffy.com)
%%Title: (miffies_upskirt.ai)
%%CreationDate: (6/22/2001) (2:28 PM)
%%BoundingBox: 15 431 189 617
%%HiResBoundingBox: 15.0957 431.5513 188.9023 616.9609
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Helvetica-Bold
%%DocumentNeededFonts: Helvetica-Bold
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 280 252 280 252
%AI3_TileBox: 4 -108 556 620
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -241.4077 703.8374 1.3799 1006 665 18 0 1 11 68 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:4 -108
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 120 128 8
%%BeginData: 24294 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCF8FDE8F87C9FA79FA79FA79FA79FA79FA79FA79FA79FA79FA7
%9FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA7
%9FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA7
%9FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA79FA7
%75FD08F87BC8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8
%C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9
%C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8
%C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8A0FD08F8A7
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE7BFD08F87BC9C8C8A6C9
%C8C8A6C9C8C8A6C9C8C8A6C9C8C8A676F8F8F8769FC8A6C9C8C8A6C9C8C8
%A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9
%C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8
%A6C9C8C8A6C9C8C8A6C9C8C8A6C9C89FFD08F8A7C8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC852F827F8F8F82675CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8A74B27F8F8F87CC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC87C
%265175CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC87C2627F8F826CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CE9FFD08F87BC9C8C8C8C9C8C8C8C9C8C8C8C9C8C8
%C8C9C851F852A8FFA87DF8F826C9C8C8C8C9C8C8C8C9C8C89F27F8FD0427
%F8F827A0C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C89FFD06F851C8C9C8C8
%C8C9C8C8C8C9C8C89F27F8F8F827F8F8F8C9C8C8C8C9C8C8C8C9C8C8C8C9
%C8A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC87CF87DFD06FF27
%F87BCEC8CEC8CEC8CEC8CE9F26F8A8FD04FFA827F851C8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CE9F26F827264B20F8F851C8CEC8CEC8CEC8CEC8CE9F26
%F8274B75767526F851CEC8CEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC8A6C9
%C8C8A6C9C8C8A6C9C8C8A6C9C8A0F87DFD08FFF820A6C9C8C8A6C9C8C87B
%F827FD07FFA827F8A0C8C8A6C9C8C8A6C9C8C8A6C9C8C87B26F84B756F75
%6F20F8F875A6C9C8C8A6C9C8C87BF8F84B756F756F756F20F87BC9C8C8A6
%C9C8C8A6C9C8C8A6A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE26
%52FD09FF7DF8A7C8CEC8CEC8CEC827F8FD09FFA8F827CEC8CEC8CEC8CEC8
%CEC8CEC8CEC852F8759A7575759A7520F8F8CEC8CEC8CEC8CEC851F84B9A
%7575759A757575F8A6C8CEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC8C8C9C8
%C8C8C9C8C8C8C9C8C8C8C975F87DFD0AFFF826C9C8C8C8C9C875F87DFD0A
%FF27F8C8C8C8C9C8C8C8C9C8C8C8C9C8A0F84B756F7575756F7575F8F875
%C9C8C8C8C9C87BF827756F7575756F7575752626C9C8C8C8C9C8C8C8C9C8
%C8C8A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8CEC8CEC82727FD0BFF5227C8
%CEC8CEC8CEF827FD0BFF7DF8CEC8CEC8CEC8CEC8CEC8CEC8CE4B20767575
%7576757575764BF851C8CEC8CEC8CEF8F86F7575757675757576754BF8C8
%CEC8CEC8CEC8CEC8CEC8CE7BFD08F87BC9C8C8A6C9C8C8A6C9C8C8A6C9C8
%7BF87DFD0BFFA8F8A6A6C9C8C851F87DFD0BFF52F87BC9C8C8A6C9C8C8A6
%C9C8C87BF8266F756F756F756F756F4AF8F8C8A6C9C8C851F8266F756F75
%6F756F756F7575F89FA6C9C8C8A6C9C8C8A6C9C89FFD08F8A7C8CEC8CEC8
%CEC8CEC8CEC8CEC8CE4BF8A8FD0CFFF89FCEC8CEC827F8FD0CFFA8F8A7C8
%CEC8CEC8CEC8CEC8CEC8A6F8759A7575759A7575759A75F8F8A0CEC8CEC8
%27F8759A7575759A7575759A7575F87BCEC8CEC8CEC8CEC8CEC8CE9FFD08
%F87BC9C8C8C8C9C8C8C8C9C8C8C8C9C8F8F8FD0DFF2775C8C9C8A0F852FD
%0CFFA8F87BC9C8C8C8C9C8C8C8C9C8C82620756F7575756F7575756F7527
%F8A0C8C9C8A6F827756F7575756F7575756F7575F875C8C9C8C8C8C9C8C8
%C8C9C8A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8CEC8A7F852FD0DFF5251CE
%C8CE51F8A8FD0CFF7DF8CEC8CEC8CEC8CEC8CEC8CEC82720757575767575
%75767575754AF875CEC8CE75F84A757575767575757675757576F851CEC8
%CEC8CEC8CEC8CEC8CE9FFD08F87BC8A6C9C8C8A6C9C8C8A6C9C8C87BF827
%FD0DFF524BC8C8A627F8FD0DFF52F8C8C8A6C9C8C8A6C9C8C8A6C9F84B75
%6F756F756F756F756F754BF876C8C8A627F875756F756F756F756F756F75
%6FF876C8C8A6C9C8C8A6C9C8C8A6A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8
%CEC87CF87DFD0DFF7D26CEC8CEF852FD0DFF5226CEC8CEC8CEC8CEC8CEC8
%CEA0F8267575759A7575759AFD0475F851CEC8CEF8279A7575759A757575
%9A7575759AF851CEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC8C8C9C8C8C8C9
%C8C8C8C9C8C851F852FD0DFF5227C8C875F87DFD0DFFF851C8C8C8C9C8C8
%C8C9C8C8C8A0F84B7575756F7575756F7575756FF851C8C87BF8266F7575
%756F7575756FFD0475F876C8C8C8C9C8C8C8C9C8C8C8A0FD08F8A7C8CEC8
%CEC8CEC8CEC8CEC8CEC87CF87DFD0DFFA8F8CEC851F8A8FD0CFFA8F875CE
%C8CEC8CEC8CEC8CEC8CE7BF8267576757575767575757675752026CEC87C
%F8757575767575757675757576754BF851CEC8CEC8CEC8CEC8CEC8CE7BFD
%08F87BC9C8C8A6C9C8C8A6C9C8C8A6C951F852FD0DFF7DF8A6C9F8F8FD0D
%FF7DF8A6A6C9C8C8A6C9C8C8A6C9C89FF84B756F756F756F756F756F756F
%F827A6C926F84B6F756F756F756F756F756F754BF851A6C9C8C8A6C9C8C8
%A6C9C89FFD08F8A7C8CEC8CEC8CEC8CEC8CEC8CEC87CF87DFD0DFFA8F8A7
%C8F827FD0DFF5227C8CEC8CEC8CEC8CEC8CEC8CE9FF84B759A7575759A75
%75759A75752726CEC827F87575759A7575759A7575759A7526F875CEC8CE
%C8CEC8CEC8CEC8CE9FFD08F87BC9C8C8C8C9C8C8C8C9C8C8C8C975F827FD
%0DFFA8F87BA0F852FD0CFFA8F84AC8C8C9C8C8C8C9C8C8C8C9C8C8F84B75
%6F7575756F7575756F75752027C8C9F8267575756F7575756F7575756F75
%27F8A0C8C9C8C8C8C9C8C8C8C9C8A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8
%CEC8A7F852FD0DFFA8F8A77BF87DFD0CFF7DF8A6C8CEC8CEC8CEC8CEC8CE
%C8CEC8F8207575757675757576757575764B26CEA6F82675767575757675
%757576757575F8F89FCEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC8A6C9C8C8
%A6C9C8C8A6C9C8C87BF827FD0DFF7DF87B7BF8A8FD0CFF27F8A6C9C8C8A6
%C9C8C8A6C9C8C8A6C92020756F756F756F756F756F756F2027C89FF84B75
%6F756F756F756F756F756F4AF8F8C9C8C8A6C9C8C8A6C9C8C8A6A0FD08F8
%A7C8CEC8CEC8CEC8CEC8CEC8CEC8CEF8F8FD0DFFA8F8A751F8A8FD0CFFF8
%26CEC8CEC8CEC8CEC8CEC8CEC8CEC851F87575759A7575759A7575759A4B
%26CE9FF84B759A7575759A7575759A75754BF827C8CEC8CEC8CEC8CEC8CE
%C8CE9FFD08F87BC8C8C9C8C8C8C9C8C8C8C9C8C8C827F8FD0DFF7DF87B75
%F8FD0CFF7DF87BC8C9C8C8C8C9C8C8C8C9C8C8C8C951F84B75756F757575
%6F7575756F26F8C87BF84B756F7575756F7575756F757520F826C9C8C8C8
%C9C8C8C8C9C8C8C8A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8CEC8CE26F8A8
%FD0CFF7DF8A726F8FD0CFF27F8C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8A7F8
%4B76757575767575757675754BF8CE51F826757575767575757675757576
%F8F87CC8CEC8CEC8CEC8CEC8CEC8CE7BFD08F87BC9C8C8A6C9C8C8A6C9C8
%C8A6C9C851F8A8FD0CFF52F87B27F8FD0BFFA8F826C9C8C8A6C9C8C8A6C9
%C8C8A6C9C8C8A6F8206F756F756F756F756F756F26F8A676F84B756F756F
%756F756F756F754BF8F89FC8A6C9C8C8A6C9C8C8A6C9C89FFD08F8A7C8CE
%C8CEC8CEC8CEC8CEC8CEC8CE75F852FD0CFF7DF852F8F8FD0BFF7DF8A6C8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE27F8FD04759A7575759A75754BF8CE
%51F8207575759A7575759A75757526F8F8CEC8CEC8CEC8CEC8CEC8CEC8CE
%9FFD08F87BC9C8C8C8C9C8C8C8C9C8C8C8C9C8A0F852FD0CFF7DF8F8F827
%FD0BFFF8F89FC9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C87CF84B7575756F75
%75756F757526F87B76F8267575756F7575756F75757520F84BC8C8C8C9C8
%C8C8C9C8C8C8C9C8A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8CEC8CEA0F827
%FD0DFFA87D52FD0BFF7DF826CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEA6
%27F8757675757576757575764BFD04F84B7576757575767575757675F8F8
%75CEC8CEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC8A6C9C8C8A6C9C8C8A6C9
%C8C8A6C9F827FD1BFF52F851C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8
%26F8266F756F756F756F756F4AF8F8F8206F756F756F756F756F756F4AF8
%F8C8A6C9C8C8A6C9C8C8A6C9C8C8A6A0FD08F8A7C8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC826F8FD1BFFF8F851CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEF8269A7575759A7575759A756F759A7575759A7575759A7575759A4B
%F851C8CEC8CEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC8C8C9C8C8C8C9C8C8
%C8C9C8C8C851F827FD1AFFA8F8F851C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8
%C9C8C826F8F86F7575756F7575756F7575756F7575756F7575756F757575
%6F20F84AC8C8C9C8C8C8C9C8C8C8C9C8C8C8A0FD08F8A7C8CEC8CEC8CEC8
%CEC8CEC8CEC827F8A8FD1CFFA827F851A0CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8A7F8F8F84B757576757575767575757675757576757575767575757675
%754BF8F84BCEC8CEC8CEC8CEC8CEC8CEC8CE7BFD08F87BC9C8C8A6C9C8C8
%A6C9C8C87BF827FD20FF52F8F89FC8A6C9C8C8A6C9C8C8A6C9C87BF8F8F8
%75756F756F756F756F756F756F756F756F756F756F756F756F756F754BF8
%F820A6A6C9C8C8A6C9C8C8A6C9C89FFD08F8A7C8CEC8CEC8CEC8CEC8CE51
%F852FD22FFA8F8269FCEC8CEC8CEC8CEC8CEC852F8F826759A7575759A75
%75759A7575759A7575759A7575759A7575759A7575759A754B20F8A7C8CE
%C8CEC8CEC8CEC8CE9FFD08F87BC9C8C8C8C9C8C8C8C94AF827FD24FF7DF8
%269FC9C8C8C8C9C8C89F4BF8F84A75756F7575756F7575756F7575756F75
%75756F7575756F7575756F7575756F75754B20F87CC8C8C8C9C8C8C8C9C8
%A0FD08F8A7C8CEC8CEC8CEC8CE51F827FD26FFA8F851C8CEC8CEC8CEC851
%F8F84B757675757576757575767575757675757576757575767575757675
%75757675757576757526F87CC8CEC8CEC8CEC8CE9FFD08F87BC8A6C9C8C8
%A6C99FF8F8FD28FF52F89FA6C9C8C8A676F8F8266F756F756F756F756F75
%6F756F756F756F756F756F756F756F756F756F756F756F756F756F6F20F8
%7CC8C8A6C9C8C8A6A0FD08F8A7C8CEC8CEC8CEC851F8A8FD28FFA8F826CE
%C8CEC8CEF8F8267575759A7575759A7575759A7575759A7575759A757575
%9A7575759A7575759A7575759A7575756F27F8A7C8CEC8CEC8CE9FFD08F8
%7BC8C8C9C8C8C8C9F827FD2AFF52F87BC9C8C851F8F86F7575756F757575
%6F7575756F7575756F7575756F7575756F7575756F7575756F7575756F75
%75756F4AF8F8C8C8C9C8C8C8A0FD08F8A7C8CEC8CEC8CE7BF87DFD2BFFF8
%51C8CEC827F8757575767575757675757576757575767575757675757576
%7575757675757576757575767575757675757520F84BCEC8CEC8CE7BFD08
%F87BC9C8C8A6C9C851F8FD2CFFF8F8C8A6A1F826756F756F756F756F756F
%756F756F756F756F756F756F756F756F756F756F756F756F756F756F756F
%756F754BF8F89FC8A6C9C89FFD08F8A7C8CEC8CEC8CE2652FD2CFF27F87B
%CE51F84B7575759A7575759A7575759A7575759A7575759A7575759A7575
%759A7575759A7575759A7575759A7575759A27F852C8CEC8CE9FFD08F87B
%C9C8C8C8C9C82752FD2CFF7DF875C84BF86F7575756F7575756F7575756F
%7575756F7575756F7575756F7575756F7575756F7575756F7575756F7575
%756F20F8F8C8C8C9C8A0FD08F8A7C8CEC8CEC8CEF8A8FD2CFF52F826CEF8
%4B7575767575757675757576757575767575757675757576757575767575
%757675757576757575767575757675754BF8F8C8CEC8CE9FFD08F87BC8A6
%C9C8C8A6F87DFD2CFF7DF827C8F84A6F756F756F756F756F756F756F756F
%756F756F756F756F756F756F756F756F756F756F756F756F756F756F756F
%4AF8F8A0C8C8A6A0FD08F8A7C8CEC8CEC8CEF8A8FD2CFF52F8F8CEF87575
%759A7575759A7575759A7575759A7575759A7575759A7575759A7575759A
%7575759A7575759A7575759A757575F8F89FCEC8CE9FFD08F87BC8C8C9C8
%C8C8F8A8FD2CFF7DF8F8C8F87575756F7575756F7575756F7575756F7575
%756F7575756F7575756F7575756F7575756F7575756F7575756F757575F8
%F8A0C8C8C8A0FD08F8A7C8CEC8CEC8CE267DFD2CFF52F820CEF875767575
%757675757576757575767575757675757576757575767575757675757576
%75757576757575767575757675F8F89FCEC8CE7BFD08F87BC9C8C8A6C9C8
%2752FD07FFA87D7DFD22FF7DF827A6F8756F756F756F756F756F756F756F
%756F756F756F756F756F756F756F756F756F756F756F756F756F756F756F
%756F75F8F8C8A6C9C89FFD08F8A7C8CEC8CEC8CE2652FD07FF7DF8F8FD18
%FFA8FD09FF52F875CEF8759A7575759A7575759A7575759A7575759A7575
%759A7575759A7575759A7575759A7526276F7575759A7575759A75F851C8
%CEC8CE9FFD08F87BC9C8C8C8C9C851F8FD07FF52F8F8A8FD16FF52F8F8FD
%08FF27F8A0C8F84A6F7575756F7575756FF8F8266F7575756F7575756F75
%75756F7575756F7575756F4AF8F8F87575756F7575756F4BF84BC8C8C9C8
%A0FD08F8A7C8CEC8CEC8CE51F8A8FD06FFA82752A8FD16FF27F8F87DFD07
%FFF827C8CEF84B757576757575767575F8F8277575767575757675757576
%7575757675757576757575F8F8F8757675757576757575F87CC8CEC8CE9F
%FD08F87BC8A6C9C8C8A676F8A8FD20FF27F8F8FD08FFF826C9C827F86F75
%6F756F756F756FF8F84A6F756F756F756F756F756F756F756F756F756F75
%6F756F264B756F756F756F756F26F87BC9C8C8A6A0FD08F8A7C8CEC8CEC8
%CE75F8F87D7DA8FD1EFFA8FD05FFA8A87D7DF87CC8CE51F84BFD05759A75
%75756F7575759A7575759A7575759A7575759A7575759A7575759A757575
%9A7575759A757526F8CEC8CEC8CE9FFD08F87BC8C8C9C8C87BF8277D5252
%27F8F8527DFD1DFF5227FD06F875C9A026FD05F82626FD04756F7575756F
%7575756F7575756F7575756F7575756F7575756F7575754BFD07F827C8C9
%C8C8C8A0FD08F8A7C8CEC8CEC8267DFD06FFA827F8A8FD1BFF27F852FFFF
%FFA87DF8267B27F8F84A754B4B20F8F84B76757575767575757675757576
%7575757675757576757575767575756F27F8F8F82720FD04F8A7C8CEC8CE
%7BFD08F87BC9C8C8A65127FD09FF5252FD1AFF52F8A8FD06FFA8F8F8F826
%6F6F756F756F26F8F875756F756F756F756F756F756F756F756F756F756F
%756F756F756F7520F8204A6F756F757520F8F8A0A6C9C89FFD08F8A7C8CE
%C8CEF87DFD0AFFF8FD1AFF27A8FD08FF7DF82775759A7575759A756FF826
%7575759A7575759A7575759A7575759A7575759A7575759A75754BF82775
%759A7575759A7526F826CEC8CE9FFD08F87BC9C8C8C8F852FD0AFFF87DFD
%18FF7D27FD09FF7DF84A75756F7575756F7575F8F86F75756F7575756F75
%75756F7575756F7575756F7575756F7575F8267575756F7575756F7575F8
%F8C8C9C8A0FD08F8A7C8CEC8CEF852FD0AFFF827A8FD08FFA8FFFFFF7D52
%FD08FFA8F827FD09FF52F84B76757575767575756FF8F8F8267575757675
%757576757527264B4B75767575757675757520F826757675757576757575
%762727CEC8CE9FFD08F87BC8A6C9C827F87DFD08FF7DF8F8F827527DA8A8
%FFFFFFA827525227FD06FFA85227F8F8F87DFD07FF7DF8F8F875756F756F
%756F754BF86E4A2620F8F826204B264B2627F8F8F8264A4B4A4B2620FD05
%F826756F756F756F756F7575F87CC8C8A6A0FD08F8A7C8CEC8CE75F8F87D
%FD06FFA827052E2F2E0527FD04F82727FD04F827522752F8270528282E2E
%27F852FD04A85227FD05F84B75759A756F4BF898FD06BA9298926E4A6E4A
%6E4A4A206E4A6E4A6E4A989298BA98F84B9A7575759A7575754AF8C8CEC8
%CE9FFD08F87BC8C8C9A026F8F8F8277DA8A8A827F800282F282F282F282F
%2805270005F805F805002828282F282F282F282805FD07F8280527FD05F8
%26F8F82098FD1EBA20204A75756F4B4B20F8F8C9C8C8C8A0FD08F8A7C8CE
%A627F82828282F2E282E052828282F2E2F282F2E2F282F2E2F282F2E2F28
%2F2E2F282F2E2F282F2E2F282F2F0528052828282F2E2F274A98FD26BA92
%4AFD08F89FCEC8CE7BFD08F87BC9C826F8282F062F282F062F282F062F28
%2F062F282F062F282F062F282F062F282F062F282F062F282F062F282F06
%2F282F062F282F06F86EFD2ABA92986E98BABAF851A6C9C89FFD08F8A7C8
%CEF8272F2F2F2E2F2F2F2E2F2F2F2E2F2F2F2E2F2F2F2E2F2F2F2E2F2F2F
%2E2F2F2F2E2F2F2F2E2F2F2F2E2F2F2F2E2F2F2F2E2F2F2F276EFD30BA6E
%F8CEC8CE9FFD08F87BC9A0F8F8282F282F282F282F282F282F282F282F28
%2F282F282F282F282F282F282F282F282F282F282F282F282F282F282F28
%2F282F28F8BABABA6E266EFD2BBA98F826C9C8A0FD08F8A7C8CEF8002F28
%2F2E2F2E052E2F282F2E2F282F2E2F282F2E2F282F2E2F282F2E2F282F2E
%2F282F2E2F282F2E2F282827F8F82F2E2F2FF84ABABABA6EF8F82074FD2A
%BA6EF8C8CE9FFD08F87BC8A651F8282F282F0605F8F8282F282F062F282F
%062F282F062F282F062F282F062F282F062F282F062F282F28FD05F8282F
%06F8F820BABABA6EFD04F82692FD28BA6EF8C8A6A0FD08F8A7C8CEA0F800
%2E2F2F2F2EF8F8F827282F2F2E2F2F2F2E2F2F2F2E2F2F2F2E2F2F2F2E2F
%2F2F2E2F2F2F2E2805F8277DFFF8282F2F00F8F8F84ABABA98F84B754B20
%F84AFD1DBA6E4A20FD07BA2027C8CE9FFD08F87BC8C8C94BF805282F282F
%05F8A82727F82828282F282F282F282F282F282F282F282F282F282F2828
%28F8F8F852A8FFFFF8002EF8F8F8A051F8209892F82675756F6F4BF82044
%6E92FD14BA984420F8F8F826FD06BA6EF87BC8C8A0FD08F8A7C8CEC8CE26
%F806282F2E0552FFFFFFA85227F828282E2F282F2E2F282F2E2F282F2E2F
%282F280000F82752FD05FFF8F8F82775CEC8CE9F27F8F8F84B7675757576
%754B4BF8F8204A6EFD0EBA984A26F8F8F82720F84AFD05BA6EF851CEC8CE
%7BFD08F87BC9C8C8A6C920F805282F2727FD06FFA87D522700F827052805
%28062805280527F8F8F82752A8FD07FFF8F84B7BC9C8C8A6C9C851F8F84A
%6F756F756F756F756F4A26FD04F8206E6E986E986E984A4AF8F8F820204B
%4B6F7575F898FD04BA4AF826C8A6C9C89FFD08F8A7C8CEC8CEC8CE26F8F8
%280052FD0CFFA8A8527D527D527D527D7DA8A8FD0BFFF851C8CEC8CEC8CE
%C8CEC8A7F84B9A7575759A7575759A7575754B4B2627FD06F82027264B4B
%759A7575759A7575F86EBABA9820F826CEC8CEC8CE9FFD08F87BC9C8C8C8
%C9C8C85127F8F827FD24FFF826C8C8C9C8C8C8C9C8C87BF8266F7575756F
%7575756F7575756F7575756F7575756F7575756F7575756F7575756F7575
%F84A6E4AF8F826C9C8C8C8C9C8A0FD08F8A7C8CEC8CEC8CEC8CEC8A7F8F8
%FD24FFF851C8CEC8CEC8CEC8CEC8A7F82775757675757576757575767575
%75767575757675757576757575767575757675757576FD04F8517BCEC8CE
%C8CEC8CE9FFD08F87BC8A6C9C8C8A6C9C8C8A67CF8A8FD23FFF826C9C8C8
%A6C9C8C8A6C97BF8F8264A6F756F756F756F756F756F756F756F756F756F
%756F756F756F756F756F756F756FF8F851C8A6C9C8C8A6C9C8C8A6A0FD08
%F8A7C8CEC8CEC8CEC8CEC8CEA0F87DFD22FF7DF87CC8CEC8CEC8CEC8CEC8
%CEFD05F84B6F759A7575759A7575759A7575759A7575759A7575759A7575
%759A7575759AF826CEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC8C8C9C8C8C8
%C9C8C8C8C9F82752FD1FFFA852F8F851C9C8C8C8C9C8C8C8C9C8F84ABA6E
%4AF8F8F84B4B75756F7575756F7575756F7575756F7575756F7575756F75
%754A20F851C8C8C8C9C8C8C8C9C8C8C8A0FD08F8A7C8CEC8CEC8CEC8CEC8
%CEC851F8F8F8277DFD19FF7D7D2828282EF87CC8CEC8CEC8CEC8CEC8CEF8
%6EFD04BA4A26F8F8F84B4B75767575757675757576757575767575757675
%4B27FD04F851CEC8CEC8CEC8CEC8CEC8CE7BFD08F87BC9C8C8A6C9C8C8A6
%C9C8C826052F280505F82752A8FD0EFF7DA8527D0528062E2F282F0605F8
%51C8A6C9C8C8A6C9C8C8A6F820FD05BA926EFD05F82626756F6F756F756F
%756F756F75752626F8204A6E92BAF851A6C9C8C8A6C9C8C8A6C9C89FFD08
%F8A7C8CEC8CEC8CEC8CEC8CEC87CF82F2F2E2F2F28280500F82727522752
%27522727F805F828282E2F2E2F2F2F2E2F2F2F28F8A7C8CEC8CEC8CEC8CE
%C8CEF8F8F84A6EFD06BA984A4AFD05F827202720272027F8F8F84A6EFD06
%BA2051CEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC9C8C8C8C9C8C8C8C9C8C8
%51F828282F282F282F282F28052705270027052806282F282F282F282F28
%2F280628FD04F87BC8C8C9C8C8C8C9C8C8C827F826F8F8F8264A98FD06BA
%926E4A20FD06F8204A6EFD09BAF875C8C9C8C8C8C9C8C8C8C9C8A0FD08F8
%A7C8CEC8CEC8CEC8CEC8CEC87CF8F80028062E2F2E2F282F2E2F282F2E2F
%282F2E2F282F2E2F282F2E0627F8F827A8A852F8A7C8CEC8CEC8CEC8CEC8
%CE26F875756F512620F8264A98FD09BA9892FD0ABA984A26F8F851CEC8CE
%C8CEC8CEC8CEC8CE9FFD08F87BC8A6C9C8C8A6C9C8C8A6C951F827A85252
%F8F8F800F8282F062F282F062F282F062F282F060527F8F8277DA8FFFFFF
%52F87BC9C8C8A6C9C8C8A6C9C827F86F756F756F757520F8F8F82098FD0E
%BA926E20F8F84B4A4BF8279FC8A6C9C8C8A6C9C8C8A6A0FD08F8A7C8CEC8
%CEC8CEC8CEC8CEC827F8FD06FFA87D52270505FD042F2E2F2F2F2E2827F8
%527DA8FD07FFA8F87CC8CEC8CEC8CEC8CEC87CF82775759A7575759A7575
%7520F8F84A92FD09BA6E4AF8F8204B4B7575759A4BF827C8CEC8CEC8CEC8
%CEC8CE9FFD08F87BC8C8C9C8C8C8C9C8C8C851F8A8FD0AFFA852F8272828
%2F280505F8527DFD0BFFA8F8F8C9C8C8C8C9C8C8C8A1F8F82675756F7575
%756F7575756F4B4BF8F82098BABA926E4420F827264B7575756F7575756F
%7527F851C8C9C8C8C8C9C8C8C8A0FD08F8A7C8CEC8CEC8CEC8CEC87CF8A8
%FD0EFF7D27F827F8F852FD0FFFA82720CEC8CEC8CEC8CEF8204B75767575
%75767575757675757576754B27F82620F8F84B4B75767575757675757576
%7575757627F8CEC8CEC8CEC8CEC8CE7BFD08F87BC9C8C8A6C9C8C8A6C9F8
%52FD11FF52F827A8FD11FFA8F826C9C8C8A6C951F8266F756F756F756F75
%6F756F756F756F756F7575F8F8F875756F756F756F756F756F756F756F75
%6F4BF84AC8A6C9C8C8A6C9C89FFD08F8A7C8CEC8CEC8CEC8CE75F8A8FD11
%FF7DF852FD13FF7DF8A0CEC8CEC827F87575759A7575759A7575759A7575
%759A7575756FF8F84B9A7575759A7575759A7575759A7575759A752027C8
%CEC8CEC8CEC8CE9FFD08F87BC9C8C8C8C9C8C8C85152FD12FF7DF87DFD13
%FFA8F8A0C8C8C8C9F8F84A75756F7575756F7575756F7575756F7575754B
%F8F8206F7575756F7575756F7575756F7575756F7527F8C8C8C9C8C8C8C9
%C8A0FD08F8A7C8CEC8CEC8CEC8CE267DFD12FF52F852FD13FF7DF87BCEC8
%CEC851F84B76757575767575757675757576757575767526F8F827757576
%757575767575757675757576757575F8F8C8CEC8CEC8CEC8CE9FFD08F87B
%C8A6C9C8C8A6C9C84B7DFD12FF27F827FD13FF27F8C8A6C9C8C851F8F86F
%756F756F756F756F756F756F756F756F4BF8204BF875756F756F756F756F
%756F756F756F756F4AF8F8C9C8C8A6C9C8C8A6A0FD08F8A7C8CEC8CEC8CE
%C8CE5152FD11FFA8F87CF8A8FD11FF7DF87CC8CEC8CEC8CE26F8F84B4B75
%4B7575759A7575759A7575759A4BF87C9FF826759A7575759A7575759A75
%75759A754B20F87CC8CEC8CEC8CEC8CE9FFD08F87BC8C8C9C8C8C8C9C8A0
%F8277DFD0DFFA87D2726C827F8A8FD0CFF7D7D5227F827C8C8C8C9C8C8C8
%C94BFD08F826F8272026F82720F8F827C8C8F8F82026264B4A4B4A754B4B
%4A4B2626F8F8F8279FC9C8C8C8C9C8C8C8A0FD08F8A7C8CEC8CEC8CEC8CE
%C87CF8F8F852277D527D527D527D525227F8F8279FCE7B27F827277D527D
%527D52522727F8F8F851517C9FCEC8CEC8CEC8CEC8CEC87C4B51FD0DF827
%9FCEC8CE7551FD0EF8207CC8CEC8CEC8CEC8CEC8CE7BFD08F87BC9C8C8A6
%C9C8C8A6C9C8C87BA0514BF827FD05F826F827517B7BC9C8C87B762627F8
%272627F85151517BA1C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8
%C8A6A07B9F7BC9C8C8A6C9C8C8A6C9C8C8A6C99F9F517651512676515151
%A09FC8A6C9C8C8A6C9C8C8A6C9C89FFD08F8A7C8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CE9FFD08F87BC9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8
%C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8
%C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8
%C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8
%C8C8C9C8A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE9F
%FD08F87BC8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6
%C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8
%C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6
%C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6A0FD08F8A7C8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC8C8C9C8C8C8
%C9C8C8C8C9C8C8C876F8C8C876F875C876F875C8C9C8C8C8C9C8C8C8C951
%F8C876F8C8C8F851C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8
%C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8
%C8C8C9C8C8C8C9C8C8C8C9C8C8C8A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8
%CEC8CE9FA7C8CE2651A0CE2651A0CEC8CEC8CEC8CEC8CEC87CF8CE9FA7C8
%CEF87CC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE7551C8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CE7BFD08F87BC9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6
%C9C8F851C9C8F851C9C8C8A6C9C8C8A6C9C8C851F8C8C8A6C9C8F851C9C8
%C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A676F8C8A6C9C8C8A6C9C8C8A6
%C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8
%C8A6C9C89FFD08F8A7C8CEC8CE75F851F8267CF827A0CE75F8C851F8F875
%51F8F875F875CEA0F875CEC8CEC87CF8CE75F8C8CEF87CC827F8CE4BF8F8
%52C8CE5127F82775CEC8CEC8A7F8F8F8CE7527F82775CEC8CEC8CEC8CEC8
%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE9F
%FD08F87BC9C8C8C876F87551F8209FF84BC875F8C99FF84AC99FF84AC9F8
%26C876F8A6C8C9C8C851F8C875F8C9C8F8514BF8A02627757BF85175F875
%A051279FC9C8C89F51F89F4BF8519F51F851C8C8C9C8C8C8C9C8C8C8C9C8
%C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8A0FD08F8A7C8
%CEC8CE51F8C8CEF87CC85126CE75F8C8CEF87CC8CEF87CC87CF8CE2651C8
%CEC8CEC87CF8CE75F8C8CEF826F87CC8FD06F8CEF8F8F85175CEC8CEC8CE
%51F8C8274BCEC8CE4B27C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC8A6C9C875F8C9C8F8
%51C92627A676F8C8A6F851C8A6F851C87BF851F851C9C8C8A6C951F8A676
%F8C8A6F8F826F8C92051A6C9C8C87BA07B7526F875C8A6C9C875F8C9F851
%A6C9C851F8C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9
%C8C8A6C9C8C8A6C9C8C8A6A0FD08F8A7C8CEC8CE75F8C8CEF87CC85126CE
%75F8C8CEF87CC8CEF87CC8CE2627F8CEC8CEC8CEC87CF8CE75F8C8CEF87C
%9FF82652F87C7B274BA7F87C7B7CF8A6C8CEC8CE75F89F7CF87C9F7CF87C
%C87C26CE7551C87C26CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CE9FFD08F87BC8C8C9C875F8C9C8F851C92627C876F8C8C8F8
%51C8C8F851C8C87CF851C8C9C8C8C8C951F8C876F8C8C8F851C84AF85151
%F8F826C8C876F8F8F876C8C8C8C9C89FF8F8C875F8F8F875C8C951F8C876
%F8C851F8C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8
%C8A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CE51F8A0CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE7BFD08F8
%7BC9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C951F851C9
%C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8
%A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9
%C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C8C8A6C9C89FFD08F8A7C8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE9FFD08F87BC9C8C8C8C9C8C8C8C9
%C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8
%C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9
%C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8C8C9C8C8
%C8C9C8C8C8C9C8C8C8C9C8A0FD08F8A7C8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CE9FFD08F8519F7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA0
%7B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F
%7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA0
%7B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F7BA07B9F
%7B76FDFCF8FDE7F8F8
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica-Bold
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
uu1 Ap
0 O
0.0235 0.1451 0.4784 0 0.9922 0.8471 0.4824 Xa
0 R
0 0 0 1 0 0 0 XA
800 Ar
0 J 0 j 6 w 4 M []0 d%AI3_Note:0 D
0 XR
18.0957 613.9609 m
185.9023 613.9609 L
185.9023 434.5513 L
18.0957 434.5513 L
18.0957 613.9609 L
b/BBAccumRotation (-6.283185) XT
0 To
1 0 0 1 27.3115 445.751 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 0 0 0 Xa
1 w%_ 0 50 XQ
/_Helvetica-Bold 16.7807 16.1429 -3.8259 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
240 Tg
0 0 Tl
0 Tc
0 Tw
(miffy likes to...) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (-6.283185) XT
Uu0 Ap
0 0 0 1 k
53.2061 606.666 m
67.3584 605.8662 65.5391 592.6816 67.5889 579.6973 C
67.5889 576.501 67.5889 573.3047 67.5889 570.1074 C
67.9951 569.4922 67.9238 569.626 68.4873 569.209 C
68.6875 569.5088 68.8877 569.8086 69.0869 570.1074 C
69.4863 574.1035 69.8867 578.0996 70.2861 582.0938 C
72.6758 591.1563 75.0752 601.7207 83.7705 604.5684 c
85.7842 605.2285 88.4189 605.8223 90.6621 604.5684 c
105.2715 596.4004 86.835 567.4688 89.7637 562.0176 C
96.1104 559.4102 103.1523 547.0488 101.4502 536.8457 C
100.6514 533.75 99.8525 530.6533 99.0527 527.5566 C
99.6523 527.0576 100.251 526.5586 100.8506 526.0586 C
101.25 526.0586 101.6494 526.0586 102.0488 526.0586 C
102.8486 526.7578 103.6475 527.457 104.4463 528.1563 C
102.4219 539.1055 103.2744 551.4023 110.4395 557.2227 C
113.0361 559.3203 115.6338 561.418 118.2305 563.5156 C
112.9014 574.8447 110.708 590.9316 118.8301 600.9727 c
120.2783 602.7627 122.7852 605.4082 126.6211 604.5684 c
139.1445 601.8281 134.8291 581.0635 137.1084 567.4111 C
138.2197 567.1895 138.2744 567.2715 139.2061 567.7109 C
138.7988 583.082 143.5596 608.0332 159.2832 604.8682 C
168.6563 596.1387 164.6475 573.9375 160.1826 562.6172 C
166.5557 557.3555 177.9375 550.6211 175.7646 537.4453 C
175.0654 533.8496 174.3662 530.2539 173.667 526.6582 C
180.5195 522.2051 174.5127 519.9971 175.7646 514.9717 c
176.4688 512.1445 178.7686 511.4268 178.7607 506.8809 C
176.8535 503.6465 173.8945 499.7559 170.6709 497.8916 c
168.8486 496.8379 166.8125 497.0947 165.5762 495.4941 C
164.3652 493.1123 164.9131 487.8008 164.9766 484.4063 C
169.0986 481.6152 173.1611 471.9072 166.1758 468.8242 C
161.0439 465.9077 143.9092 466.8755 140.1055 469.7231 C
139.7715 471.1929 139.2217 472.9805 138.3076 473.9185 C
138.208 473.9185 138.1074 473.9185 138.0078 473.9185 C
137.543 471.3628 136.2813 469.9209 135.0117 468.2256 C
126.5781 467.7612 109.1826 466.3184 106.2441 472.4204 C
103.1865 477.5967 107.6621 481.1924 109.8408 483.8066 C
109.541 489.5996 109.2412 495.3945 108.9414 501.1875 C
106.0508 502.5137 104.2129 504.1963 101.75 505.6816 C
99.2529 504.1836 96.7549 502.6855 94.2578 501.1875 C
93.959 495.4941 93.6592 489.7998 93.3594 484.1074 C
94.9355 478.106 101.7393 478.7969 95.1572 469.124 C
90.04 468.1401 73.8076 465.1616 67.8887 467.9258 C
66.293 468.9458 66.1689 470.5039 65.1914 472.1211 C
64.9922 472.021 64.792 471.9214 64.5918 471.8213 C
64.0313 469.8608 63.042 468.4111 61.2959 467.626 C
55 465.856 40.0225 466.3311 35.5254 469.124 C
33.252 476.0591 35.3984 479.2734 39.1221 483.209 C
39.2148 487.2539 39.1162 494.541 37.3232 497.292 C
36.1699 498.5488 34.3291 498.4355 32.8291 499.3896 c
30.0049 501.1836 23.5703 508.0137 25.6367 513.1738 C
26.9355 514.5723 28.2344 515.9707 29.5322 517.3691 C
26.5908 522.9746 29.04 525.4707 32.2295 529.3555 C
31.1816 539.3594 30.0713 548.6348 35.2266 555.7246 c
36.832 557.9346 43.9111 562.3203 44.5156 563.8154 C
43.8164 568.9082 43.1172 574.0039 42.418 579.0977 C
40.501 592.7256 46.3066 601.4141 53.2061 606.666 C
f/BBAccumRotation (-6.283185) XT
0.2745 0.5216 0.6392 0.149 0.6157 0.3608 0.2314 Xa
135.6104 519.167 m
130.373 519.2832 123.1094 519.4961 119.7295 521.8633 C
119.2295 523.0625 118.7305 524.2607 118.2305 525.459 C
116.0566 529.002 112.0605 528.4268 107.1436 529.3555 C
100.002 544.5713 112.5771 556.7383 121.2275 561.7178 C
120.9863 566.0488 118.6885 568.1973 117.6318 571.6064 c
114.4473 581.876 114.208 601.5947 126.6211 601.5723 C
133.5234 597.0049 133.9365 586.168 134.4121 575.2021 c
134.583 571.2461 133.7559 567.332 135.3105 564.4141 C
146.7334 564.4531 140.3408 570.6162 142.2031 579.3984 c
144.1982 588.8096 146.5107 602.4727 157.4854 602.7705 C
169.1006 595.2568 158.2998 571.7373 157.1855 561.7178 C
158.6475 559.6416 160.5459 559.3145 162.5801 557.8223 c
168.7764 553.2744 172.8398 547.8379 172.7676 536.8457 c
172.75 534.0918 172.4678 530.123 170.9697 528.7559 C
168.7734 528.7559 166.5752 528.7559 164.3779 528.7559 C
159.5811 527.9961 158.0752 524.2529 155.9873 520.665 C
152.1152 519.9453 147.7305 519.1025 143.1025 518.8672 C
143.1025 519.1855 141.6387 519.5918 141.6924 519.9014 c
141.7559 520.2715 144.1768 520.0488 143.3037 521.2949 c
142.6943 522.167 141.2998 521.5137 140.3848 521.0781 C
137.6729 519.7012 137.1436 522.2676 135.9102 521.5645 c
134.6777 520.8594 136.5078 520.2324 136.5078 520.0322 C
136.4072 519.4326 135.7109 519.7656 135.6104 519.167 C
f/BBAccumRotation (-6.283185) XT
0 0 0 1 k
156.5869 535.0488 m
160.4561 536.2754 160.4316 531.3027 158.9834 530.8535 c
157.5352 530.4033 156.2939 530.416 155.8379 531.6523 c
155.6904 532.0518 154.9414 534.5264 156.5869 535.0488 c
f/BBAccumRotation (-6.283185) XT
120.6279 534.4492 m
121.377 534.749 122.9248 534.1494 123.3242 533.5508 c
123.7246 532.9512 122.875 529.9541 122.126 529.6543 c
121.377 529.3555 119.9785 529.8545 119.4297 530.5537 c
118.8799 531.2529 119.3291 532.4512 119.4297 532.9512 C
119.8291 533.4502 119.8789 534.1494 120.6279 534.4492 c
f/BBAccumRotation (-6.283185) XT
0 0 0 0 k
53.8047 603.9688 m
40.6523 596.0068 45.8203 578.1777 47.2119 562.6172 C
38.9102 558.125 30.5869 549.1777 33.7275 535.3477 C
34.0273 533.75 34.3271 532.1514 34.627 530.5537 C
36.0557 528.7295 42.8906 529.1729 44.8154 527.8574 c
47.1318 526.2725 46.6416 522.2539 48.7109 520.665 C
51.7598 518.9238 57.668 518.8164 61.5957 518.2676 C
62.1982 518.7393 62.5576 518.4766 62.957 519.0762 C
62.8408 519.5449 62.1299 519.4766 61.5234 520.2998 C
61.0947 520.8809 61.8242 521.2832 62.5361 521.0586 C
67.0928 516.834 67.6211 521.7832 69.4609 521.5586 C
70.2549 521.7754 70.3154 521.0488 70.0869 520.6797 C
68.9639 518.8633 67.9355 519.4141 68.7881 518.5674 C
68.9873 518.4668 69.1875 518.3672 69.3867 518.2676 C
73.6963 518.1104 81.8809 518.8223 83.4707 521.5645 C
87.0898 529.7393 87.417 528.0518 97.2549 529.6543 C
99.9287 546.4063 98.2178 554.7832 85.5684 562.0176 C
85.9463 569.0254 102.4043 596.6816 88.5645 602.4707 C
76.8408 605.541 73.7539 585.8105 72.084 576.7012 c
71.5488 573.7861 72.5146 568.6504 70.5859 567.1113 C
68.4463 566.1055 66.0625 567.1631 64.8926 568.0107 C
65.2363 580.9512 67.1162 604.0498 53.8047 603.9688 C
f/BBAccumRotation (-6.283185) XT
35.5254 527.5566 m
34.0273 527.5566 32.9785 528.1563 31.0313 525.1602 c
28.3125 520.9785 34.8096 513.4961 41.8184 516.7695 C
44.9258 517.957 46.1523 520.6035 45.1152 524.2607 C
43.3096 526.6895 39.7666 527.6035 35.5254 527.5566 C
f/BBAccumRotation (-6.283185) XT
0.2745 0.5216 0.6392 0.149 0.6157 0.3608 0.2314 Xa
107.7432 526.6582 m
104.9141 524.8887 103.9531 524.9395 102.6484 521.5645 C
104.5654 516.1475 111.0439 515.873 115.5342 518.8672 C
115.9941 520.3203 116.3809 520.9531 116.4326 523.0625 C
113.9111 525.2656 112.7979 526.709 107.7432 526.6582 C
f/BBAccumRotation (-6.283185) XT
165.2773 526.0586 m
162.751 524.5967 161.5371 523.6816 159.583 521.8633 C
159.583 521.1641 159.583 520.4648 159.583 519.7656 C
161.8945 514.9863 169.4043 514.6709 173.667 517.668 C
174.1641 518.8789 174.9336 520.002 174.5664 521.2637 C
173.666 524.8516 169.623 526.0059 165.2773 526.0586 C
f/BBAccumRotation (-6.283185) XT
0.0196 0.5961 0.9137 0 1 0.4 0 Xa
118.5303 519.167 m
114.1221 513.1279 111.3262 516.2559 104.4463 514.9717 C
104.5498 511.7051 103.9482 510.3164 102.9482 508.3789 C
104.0313 506.3867 105.8643 504.4824 108.6416 504.1836 C
108.6416 504.3838 108.6416 504.584 108.6416 504.7832 C
109.3457 506.8926 107.6123 509.7383 108.6416 511.0762 C
111.7725 511.6836 117.1904 506.8164 120.3281 505.6816 C
125.5215 504.4834 130.7168 503.2852 135.9102 502.0859 C
148.2666 499.6621 157.0859 506.1074 165.876 506.8809 C
166.0752 506.6816 166.2754 506.4814 166.4756 506.2813 C
165.3535 504.4326 164.2354 501.4941 165.5762 498.791 C
165.6758 498.791 165.7764 498.791 165.876 498.791 C
169.5654 499.5498 176.9697 504.4941 176.6641 508.6787 C
175.665 510.4766 174.666 512.2754 173.667 514.0723 C
165.1113 512.8848 162.2734 514.0566 156.8857 518.2676 C
143.7979 516.7373 130.6709 517.2324 118.5303 519.167 C
f/BBAccumRotation (-6.283185) XT
0.8235 0.4431 0.2039 0.0706 0.1882 0.349 0.5137 Xa
47.2119 518.5674 m
42.3877 511.4336 38.2578 516.6094 31.9297 515.2715 C
23.0195 512.5156 31.0176 501.1953 37.0244 500.2891 C
37.124 500.3887 37.2236 500.4883 37.3232 500.5879 C
37.4023 504.6943 36.4336 506.4219 35.8252 508.9785 C
36.125 509.0781 36.4248 509.1777 36.7246 509.2783 C
37.0244 509.2783 37.3232 509.2783 37.623 509.2783 C
39.2217 508.2793 40.8203 507.2793 42.418 506.2813 C
50.1582 502.918 62.4951 499.9834 73.8818 502.3867 c
81.54 504.002 87.6572 509.165 94.8574 510.1777 C
94.957 509.9775 95.0576 509.7773 95.1572 509.5781 C
94.7109 507.7695 93.8242 506.1455 94.2578 504.1836 C
94.3584 504.1836 94.458 504.1836 94.5576 504.1836 C
98.6719 505.0811 106.8086 515.6738 99.0527 516.4697 C
95.0752 514.5254 89.2988 513.6563 85.5684 516.4697 c
84.5117 517.2676 84.8555 518.502 82.5713 518.2676 C
78.9766 517.5684 75.3799 516.8691 71.7842 516.1699 C
62.8506 514.5537 53.8936 517.4473 47.2119 518.5674 C
f/BBAccumRotation (-6.283185) XT
0.2745 0.5216 0.6392 0.149 0.6157 0.3608 0.2314 Xa
111.6387 506.8809 m
111.3799 503.416 111.0527 499.1406 112.5371 496.6924 C
129.9775 490.084 142.5859 485.0537 162.5801 493.9961 C
162.7021 496.8594 163.1143 501.5381 161.6807 502.9854 C
152.2695 500.8262 140.333 497.4033 128.7188 500.8877 c
123.0205 502.5977 116.998 505.6387 111.6387 506.8809 C
f/BBAccumRotation (-6.283185) XT
0 0 0 0 k
90.3623 506.5811 m
78.0928 497.0547 53.8809 499.2051 40.0205 505.082 C
39.0273 501.6211 39.9365 496.5957 40.6201 493.6953 C
44.3154 492.498 48.0117 491.2988 51.707 490.0996 C
60.501 488.1641 88.458 489.998 91.5615 495.1943 C
91.5615 498.9893 91.5615 502.7852 91.5615 506.5811 C
91.1621 506.5811 90.7617 506.5811 90.3623 506.5811 C
f/BBAccumRotation (-6.283185) XT
0.0196 0.5961 0.9137 0 1 0.4 0 Xa
111.6387 493.6953 m
111.585 491.9697 111.7549 490.7803 112.2373 489.8008 C
118.0303 488.1025 123.8242 486.4043 129.6182 484.7061 C
132.4141 483.3086 135.2109 481.9102 138.0078 480.5117 C
160.1777 486.3516 162.5801 487.1035 V
162.6797 487.9023 162.7793 488.7012 162.8789 489.501 C
162.6797 489.9004 162.4795 490.2998 162.2803 490.6992 C
154.3916 489.9453 146.8369 484.7998 136.8096 486.5039 C
132.1152 487.5029 127.4199 488.502 122.7256 489.501 C
119.1797 490.8232 115.9365 493.251 111.6387 493.6953 C
f/BBAccumRotation (-6.283185) XT
0.2745 0.5216 0.6392 0.149 0.6157 0.3608 0.2314 Xa
112.5371 486.8047 m
112.04 484.709 112.4873 482.877 111.6387 481.1104 C
109.5859 480.3105 108.5 479.4199 108.042 476.915 c
107.8379 475.7983 108.1514 473.1782 109.2412 472.4204 c
111.1211 471.1118 130.0264 469.3413 133.5137 470.9224 C
135.3975 472.2314 136.4248 475.6689 136.5098 478.7129 C
129.0449 481.5527 121.9551 485.3047 112.5371 486.8047 C
f/BBAccumRotation (-6.283185) XT
0 0 0 0 k
89.1641 486.2041 m
80.6182 482.7441 73.7686 482.6836 66.6904 478.1143 C
66.582 474.4517 67.1729 470.8828 69.6865 469.7231 C
75.0537 467.4849 87.667 469.3989 93.0596 470.6226 C
99.041 477.9609 93.4805 477.353 91.2617 482.3086 c
90.6963 483.5723 91.0889 485.3232 90.6621 486.2041 C
90.1631 486.2041 89.6631 486.2041 89.1641 486.2041 C
f/BBAccumRotation (-6.283185) XT
42.7178 484.7061 m
41.4639 482.4961 32.2188 473.7964 37.9229 470.3228 C
42.3428 467.8228 58.3721 468.1675 62.1953 470.6226 C
62.9746 473.4922 64.5342 476.5522 63.0938 479.0137 C
60.3975 480.1113 57.7002 481.2109 55.0039 482.3086 C
50.9082 483.1074 46.8125 483.9072 42.7178 484.7061 C
f/BBAccumRotation (-6.283185) XT
0.2745 0.5216 0.6392 0.149 0.6157 0.3608 0.2314 Xa
160.4824 484.7061 m
154.1035 481.3594 145.8184 481.9951 140.4053 478.1143 C
140.6504 475.3618 141.6191 472.5059 142.8027 470.6226 C
147.3076 469.6475 164.0576 468.8345 166.1758 472.4204 C
170.3887 477.501 163.3721 481.9434 161.9805 484.7061 C
161.4814 484.7061 160.9814 484.7061 160.4824 484.7061 C
f/BBAccumRotation (-6.283185) XT
0 0 0 1 k
46.3135 536.5469 m
45.7305 536.4951 44.9775 535.7754 44.8154 535.3477 c
44.6533 534.9209 45.0146 533.75 45.1152 532.9512 C
45.3145 532.6504 45.5146 532.3516 45.7139 532.0518 C
46.6416 531.6074 47.7578 532 48.1113 532.0518 c
48.4648 532.1035 48.542 531.9746 48.7109 532.9512 c
48.8789 533.9268 48.3105 534.9492 48.1113 535.9473 C
47.5117 536.1475 46.8965 536.5977 46.3135 536.5469 c
f/BBAccumRotation (-6.283185) XT
82.8711 534.4492 m
82.4336 534.1758 81.7598 532.623 81.9727 531.4531 c
82.1846 530.2813 82.4365 530.207 83.4707 529.9541 c
84.5049 529.7012 85.1406 529.8125 85.5684 530.2539 c
85.9961 530.6953 85.7686 530.8535 85.8682 531.1523 C
86.5283 532.792 85.7129 533.4434 84.9688 534.4492 C
84.8691 534.4492 83.3096 534.7227 82.8711 534.4492 c
f/BBAccumRotation (-6.283185) XT
0 0 0 0 k
91.5615 526.958 m
95.208 527.1182 97.9492 526.3672 99.0527 523.9609 C
99.252 523.0625 100.251 524.8594 99.6523 521.2637 c
99.0527 517.668 86.1201 514.3594 85.8682 522.1631 C
87.29 525.1504 88.6895 525.4375 91.5615 526.958 C
f/BBAccumRotation (-6.283185) XT
0.8235 0.4431 0.2039 0.0706 0.1882 0.349 0.5137 Xa
40.9199 490.999 m
45.8135 489.8008 50.709 488.6016 55.6025 487.4033 C
66.2715 485.8301 82.6221 490.4727 90.6621 492.1973 C
90.8623 491.998 91.0615 491.7979 91.2617 491.5977 C
91.2871 490.0098 91.1045 489.1953 90.6621 488.3027 C
84.8379 487.6943 65.6025 480.1563 64.293 480.5117 c
61.292 481.3232 57.1494 483.6416 53.8047 484.7061 c
50.416 485.7852 43.8574 485.1289 41.5186 487.4033 C
41.3193 488.6016 41.1191 489.8008 40.9199 490.999 C
f/BBAccumRotation (-6.283185) XT
UULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
