%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8.0.1
%%For: (george g rat) ( )
%%Title: (miffy_circle_stars.ai)
%%CreationDate: (5/3/2001) (1:43 PM)
%%BoundingBox: -124 -63 289 394
%%HiResBoundingBox: -123.1509 -62.3711 288.8496 393.6284
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 88 100 88 100
%AI3_TileBox: -207.5 -256.5 384.5 487.5
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -459.5 695.5 0.5 640 607 18 1 1 100 125 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:-207.5 -256.5
%%AI3_PaperRect:-8 784 604 -8
%%AI3_Margin:8 -40 -9 8
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 116 128 8
%%BeginData: 15218 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFD52FFA8A87DA8FD38FF7DA87DFD30FF7D52
%27FD08F827527DFD2EFF7D52FD09F85252A8FD27FF7D52FD10F8277DFD28
%FF5227FD0FF82752FD23FFA8FD0BF827FD09F8277DFD23FFA852FD0BF820
%FD09F852A8FD1EFFA827FD06F827709B9BC4F8209BC477764BFD07F8A8FD
%20FF52FD06F8264A99999F98F8209F98994A26FD06F852FD1CFF7D27FD04
%F8279BC4A2C4C4C47DF8F89BA2C4C4C4A29B4CFD05F87DFD1EFF27FD04F8
%2751C1C8C1C8C1C875F8F8A0C1C8C1C8C17526FD04F827FD1AFF52FD04F8
%2777A2C49BC4A2C49B27F8F84CC4A2C49BC4A2C49B27FD04F827A8FD1AFF
%A8FD05F875FD08C1F8F8F875FD07C175FD05F87DFD17FF27FD04F877C4A2
%C4A2C4A2C4A2C4F8F8F821A2C4A2C4A2C4A2C4A27727F8F8F827FD19FF7D
%FD04F826C1C7C1C8C1C7C1C8C19FF8F8F826C1C8C1C7C1C8C1C7C14BFD04
%F87DFD15FF27F8F8F8209BC49BC49BC49BC49BC470FD04F89B9BC49BC49B
%C49BC49B9B4BF8F8F827A8FD16FF7DFD04F86E9FC1C1C19FC1C1C19FC14B
%FD04F8999FC1C1C19FC1C1C19F74FD04F87DFD13FF52F8F8F827C4C4A2C4
%C4C4A2C4C4C4A24BFD04F877C4A2C4C4C4A2C4C4C4A2C44CF8F8F827FD16
%FFF8F8F827A0C1C8C1C8C1C8C1C8C1C8C120FD04F875C8C1C8C1C8C1C8C1
%C8C1A020F8F8F8A8FD11FF7DF8F8F827A2C49BC4A2C49BC4A2C49BC4FD05
%F8209BC4A2C49BC4A2C49BC4A2C44BF8F8F852FD14FFFD04F898FD0BC198
%FD05F826FD0BC198FD04F8A8FD0FFFA827F8F821A2C4A2C4A2C4A2C4A2C4
%A2C477F8F8F826F8F8C4A2C4A2C4A2C4A2C4A2C4A2C44CF8F8F8A8FD12FF
%27F8F8F87BC1C8C1C7C1C8C1C7C1C8C1C751F8F852F8F8F8C7C1C8C1C7C1
%C8C1C7C1C8C19F20F8F827FD0FFF27F8F8F89BC49BC49BC49BC49BC49BC4
%9B4BF8F85026F8F870C49BC49BC49BC49BC49BC49BC421F8F8F8FD11FF7D
%F8F8F84AC1C19FC1C1C19FC1C1C19FC1C1F8F8F8A827F8F875C19FC1C1C1
%9FC1C1C19FC1C16EF8F8F852FD0DFFA8F8F8F87DC4C4C4A2C4C4C4A2C4C4
%C4A2C427F8F8A4A4F8F827C4C4A2C4C4C4A2C4C4C4A2C4C49BF8F8F852FD
%10FF27F8F826C1C8C1C8C1C8C1C8C1C8C1C8C1A0F8F827FF7DF8F827C1C8
%C1C8C1C8C1C8C1C8C1C8C126F8F827FD0DFFF8F8F827C4A2C49BC4A2C49B
%C4A2C49BC47DF8F8F8FEFEF8F8F8A19BC4A2C49BC4A2C49BC4A2C49B4CF8
%F8F8A8FD0EFF7DF8F8F89FFD0DC175F8F827FFA8F8F8F89FFD0CC19FF8F8
%F87DFD0BFF7DF8F8F8A1A2C4A2C4A2C4A2C4A2C4A2C4A24BF8F850FEFE50
%F8F877C4A2C4A2C4A2C4A2C4A2C4A2C4A2F8F8F87DFD0EFFF8F8F84BC7C1
%C8C1C7C1C8C1C7C1C8C1C7C120F8F8A8FFFF27F8F875C7C1C8C1C7C1C8C1
%C7C1C8C1C775F8F8F8FD0BFF52F8F8219BC49BC49BC49BC49BC49BC49BC4
%F8F8F8A4A4FE7AF8F8219BC49BC49BC49BC49BC49BC49BC44BF8F8F8FD0D
%FF7DF8F8F898C1C19FC1C1C19FC1C1C19FC1C198F8F8F8FFFFFF7DF8F820
%C1C19FC1C1C19FC1C1C19FC1C199F8F8F87DFD0AFFF8F8F87DC4C4C4A2C4
%C4C4A2C4C4C4A2C4A2F8F826FD04FEF8F8F8C4C4C4A2C4C4C4A2C4C4C4A2
%C4C4C4F8F8F87DFD0CFF52F8F826C1C8C1C8C1C8C1C8C1C8C1C8C1C875F8
%F852FD04FFF8F827C8C1C8C1C8C1C8C1C8C1C8C1C8C14BF8F852FD09FF7D
%F8F820C4A2C49BC4A2C49BC4A2C49BC4A24BF8F850FEC6FEFE26F8F877C4
%9BC4A2C49BC4A2C49BC4A2C49B27F8F852FD0CFFF8F8F875FD0EC120F8F8
%A8FD04FF27F8F899FD0DC175F8F8F8FD09FF52F8F8202721272727212727
%27212727272127F8F8A4FD04FE7AF8F8F827272721272727212727272127
%2727F8F827FD0BFFA8F8F8F826FD10F827FD05FF7DFD11F820F8F8A8FD08
%FF27F8F87027FD10F8A4FEC6FEA4A4FD10F82770F8F8F8FD0BFF7DF8F8F8
%C14AFD0FF827FD05FFA8FD10F89F26F8F87DFD08FFF8F8F8A1C47027FD04
%F82650265026502650267AFD06FE50502650265026502626FD05F877C4C4
%F8F8F8A8FD0AFF52F8F875C8C19F27FD04F8527D527D527D527D52A8FD06
%FF7D7D527D527D527D5227FD04F826C1C875F8F852FD08FFF8F8F8A2C49B
%9B27F8F8F826A4C6FEFE26A4FEFEFEC6FEFEFEC6FEFEFEC6FEFEFEC6FEA4
%26F8F8F82077C4A2C427F8F87DFD0AFF27F8F84AC1C1C1984BFD04F87DFF
%FFA8F8A8FD0CFFA8A8FFFFA852FD04F874C1C1C174F8F827FD07FF7DF8F8
%27C4A2C4A2A252F8F8F8267AFE7AF87AFD0CFEA4F8FEFE7AFD04F84BA2C4
%A2C4A227F8F87DFD0AFF27F8F89FC8C1C7C1C875FD04F852FF52F8A8FD0C
%FF52F8FFA827F8F8F8269FC1C7C1C89FF8F827FD07FFA8F8F8219BC49BC4
%9BC470FD04F826A4269EFEA4FEC6FEA4FEC6FEA4FEC626F8A44AFD04F876
%9BC49BC49BC44BF8F852FD0AFF27F8F8749FC1C1C19FC1C120F8F8F827A8
%52FD0DFF27F852FD04F84BC19FC1C1C19F74F8F8F8FD07FFA8F8F84BC4A2
%C4C4C4A2C4C427FD04F8FD0EFEA45026F8F8F827C4C4C4A2C4C4C4A24CF8
%F87DFD0AFF27F8F89FC8C1C8C1C8C1C8C151FD04F87DFD0EFF27FD04F89F
%C8C1C8C1C8C1C89FF8F8F8FD07FFA8F8F8209BC4A2C49BC4A2C49B4CFD04
%F87AFEC6FEFEFEC6FEFEFEC6FEFE50FD04F84CC4A2C49BC4A2C49BC427F8
%F852FD0AFF27F8F874FD09C174FD04F852A8FD0AFFA8FD04F8209FFD08C1
%74F8F827FD07FFA8F8F8F8C4A2C4A2C4A2C4A2C4A27727F8F8F87AFD0AFE
%26FD04F8A2C4A2C4A2C4A2C4A2C4A221F8F8A8FD0AFF27F8F875C7C1C8C1
%C7C1C8C1C7C1A64BF8F8F87DFD0AFF27F8F8F851C1C7C1C8C1C7C1C8C1C7
%9FF8F827FD08FFF8F8F89BC49BC49BC49BC49BC49B9BF8F8F87AC6FEA4FE
%C6FEA4FEC6FE50F8F8209BC49BC49BC49BC49BC49BC4F8F8F87DFD0AFF52
%F8F84AC1C19FC1C1C19FC1C1C19F98F8F8F8A8FFFFA8A8FFA8A8FFFFFF7D
%F8F8269FC1C1C19FC1C1C19FC1C14AF8F827FD08FF27F8F89BC4C4A2C4C4
%C4A2C4C4C4A2F8F8F8FEFEFEA4265050F8FEFEFEA4F8F827C4A2C4C4C4A2
%C4C4C4A2C4C4F8F8F8FD0BFF52F8F84BC8C1C8C1C8C1C8C1C8C1C899F8F8
%27FFFFFFA8F8F8F852FFFFFFA8F8F826C8C1C8C1C8C1C8C1C8C1C84BF8F8
%52FD08FF27F8F852C49BC4A2C49BC4A2C49B4CF8F850FEFEFE9EF8502626
%A4FEFEC6F8F8F877C4A2C49BC4A2C49BC4A276F8F827FD0BFFA8F8F8F8FD
%0BC126F8F87DFFFFFF7D52A87D7DFD04FFF8F8F89FFD0AC1F8F8F8A8FD08
%FF7DF8F820A2C4A2C4A2C4A2C4A2C427F8F87AFD05FE7A7AFD05FE7AF8F8
%4CA2C4A2C4A2C4A2C4A2C44CF8F852FD0CFFF8F8F87BC1C7C1C8C1C7C1C8
%C1C7F8F8F8FD05FFA82752FD05FF52F8F850C1C8C1C7C1C8C1C7C19FF8F8
%F8A8FD08FFA8F8F8F89B9BC49BC49BC49BC49BF8F8F8C6FEA4FEC626F8F8
%4AA4A4FEC6A4F8F820C49BC49BC49BC49BC49BF8F8F87DFD0CFF27F8F826
%C1C1C19FC1C1C19FC175F8F827FD04FF7DF8F8F827A8FFFFFFA8F8F820C1
%9FC1C1C19FC1C1C14AF8F827FD0AFF27F8F852C4C4C4A2C4C4C4A276F8F8
%51FEFEFEA4FD05F826A4FEFEFE26F8F8A2C4A2C4C4C4A2C4C476F8F8F8FD
%0DFFA8F8F8F8C1C8C1C8C1C8C1C8C127F8F87DFFFFFF52FD06F87DFFFFFF
%F8F8F8C1C8C1C8C1C8C1C8C1F8F8F87DFD0AFF7DF8F8F8A2C49BC4A2C49B
%C427F8F87AFEFE50FD08F850FEFE74F8F84B9BC4A2C49BC4A2C427F8F852
%FD0DFFA8F8F8F84AFD08C1F8F8F8A8FF7DFD04F826FD04F827FFFF52F8F8
%4AFD07C174F8F8F8A8FD0AFFA827F8F84CA2C4A2C4A2C4A2F8F8F8FEA426
%F8F8F8279B7DFD04F826FEA4F8F827C4A2C4A2C4A2C477F8F8F8A8FD0EFF
%52F8F820A6C1C7C1C8C1C799F8F827FF52FD04F875C7C126FD04F8A8A8F8
%F827C7C1C8C1C7C1C826F8F852FD0CFF52F8F8F89B9BC49BC49B70F8F84A
%7AFD04F8279B9BC49B21FD04F89EF8F8F877C49BC49BC49BF8F8F827FD10
%FFF8F8F84AC1C1C19FC1C126F8F85227FD04F875C1C1C19F4AFD04F87DF8
%F8F8C1C19FC1C1C14AF8F8F8A8FD0DFFF8F8F827C4C4C4A2C44CFD07F877
%C4A2C4C4C4A27621F8F8F826F8F84CC4C4A2C4C44BF8F8F8A8FD10FF7DF8
%F8F89FC8C1C8C1C820FD06F84BC1C8C1C8C1C8C1A026FD06F875C1C8C1C8
%9FF8F8F852FD0EFFA8F8F8F84CC49BC4A2FD07F8A2C49BC4A2C49BC4A29B
%21FD05F827C49BC4A276F8F8F852FD11FFA827F8F8F8FD04C199FD06F86E
%FD09C19F4AFD05F826FD04C1FD04F8A8FD0FFF52F8F8F877C4A276FD05F8
%4CA2C4A2C4A2C4A2C4A2C4A2C452FD05F8A2C4A29BF8F8F827FD13FFA8F8
%F8F820C1C7C14AFD04F8279FC1C8C1C7C1C8C1C7C1C8C1C775FD05F8C1C7
%C120F8F8F87DFD10FFA827F8F8F870C427FD04F8779BC49BC49BC49BC49B
%C49BC49BC470FD04F84C9B9BFD04F8A8FD14FF7DFD04F8C1C1FD04F84AC1
%C1C19FC1C1C19FC1C1C19FC1C1C19FFD04F84AC120F8F8F852FD12FFA827
%F8F8F852F8F8F84CC4A2C4C4C4A2C4C4C4A2C4C4C4A2C4C4C4A227F8F827
%76FD04F8A8FD16FF52F8F8F82675F8F8F89FC8C1C8C1C8C1C8C1C8C1C8C1
%C8C1C8C1C8C151F8F82726F8F8F852FD14FFA8FD06F852C49BC4A2C49BC4
%A2C49BC4A2C49BC4A2C49BC4A24CFD06F87DFD18FF52FD05F820FD15C174
%FD05F827FD16FFA827FD04F870A2C4A2C4A2C4A2C4A2C4A2C4A2C4A2C4A2
%C4A2C477FD05F8A8FD1AFF52FD04F84B9FC1C7C1C8C1C7C1C8C1C7C1C8C1
%C7C1C8C1C7C19F4BFD04F852FD18FFA852FD05F8709B9BC49BC49BC49BC4
%9BC49BC49BC49B7627FD05F8A8FD1CFF7DFD05F826C1C19FC1C1C19FC1C1
%C19FC1C1C19FC1C14AFD05F852FD1BFF7DFD05F8214B7DC4C4C4A2C4C4C4
%A2C4C49B5220FD05F852FD1FFFA852FD05F82775C1C8C1C8C1C8C1C8C1C8
%C1754BFD05F827A8FD1EFF52FD08F82727524C4B2127FD07F827A8FD22FF
%7DFD08F8204A4A754A4A20FD08F87DFD21FFA852FD12F852A8FD26FF7D27
%FD11F8277DFD26FF7D52FD0CF8277DA8FD2AFFA85227FD0BF82752A8FD2C
%FFA87D7D527D527DA8FD33FFA8A8527D527D52A8A8FDFCFFFDFCFFFDFCFF
%FD66FFA87D7D275227522752527DA8FD30FFA8525227522752275252A8A8
%FD29FF7D27FD0EF8527DFD29FFA87DFD0EF82752A8FD24FF7D27FD13F87D
%FD25FFA827FD13F827A8FD20FF7DFD07F80505060D06F80D060C05FD07F8
%52FD21FFA852FD07F850507A50F8267A5050FD07F827A8FD1DFF52FD05F8
%2813363C363C3605F813363C363C350500FD04F827FD1FFF7D27FD04F826
%7AA4FD04FEA4F826FD04FEA47A26FD05F852FD1AFFA8FD05F805143C1436
%143C140DF8F80636143C143614350CFD05F87DFD1CFF52FD04F8267AFD07
%FE26F8F8A4FD06FE7A26FD04F827FD18FF7DFD04F80535363C143C363C14
%3C2FF8F8F8363C143C363C143C3605FD04F87DFD1AFF27FD04F87AFD09FE
%F8F8F87AFD08FEA4FD04F827FD16FF7DFD04F80C36143C1436143C143614
%05F8F8F80C1436143C1436143C140CFD04F852FD18FF27F8F8F826A4FD09
%FE7AF8F8F826FD0AFE26FD04F8FD14FF7DFD04F8363C363C363C363C363C
%363C00F8F8F8283C363C363C363C363C363527F8F8F87DFD16FF27F8F8F8
%50FD0BFE26FD04F8FD0BFE50F8F8F827FD12FFA8FD04F8133C1436143C14
%36143C14360DFD05F81436143C1436143C1436143505F8F8F87DFD14FF27
%F8F8F826FD0BFEA4FD05F850FD0BFE7AF8F8F827FD11FF27F8F8F8363C14
%3C363C143C363C143C3605FD05F835363C143C363C143C363C143C05F8F8
%F8FD13FF7DF8F8F850FD0CFEA4FD05F826FD0CFE50F8F8F852FD0FFF7DF8
%F8F80D3C1436143C1436143C1436143CF8F8F852F8F8063C1436143C1436
%143C14361413F8F8F827FD11FFA8FD04F8FD0DFE26F8F84CF8F8F8FD0DFE
%26F8F8F8A8FD0EFFF8F8F82E3C363C363C363C363C363C363C2FF8F827FF
%F8F8F8363C363C363C363C363C363C360CF8F8F87DFD10FF52F8F8F8FD0E
%FE26F8F8A14CF8F87AFD0DFEF8F8F852FD0DFF27F8F8000D143C1436143C
%1436143C14361405F8F87DFF27F8F8131436143C1436143C1436143C1400
%F8F827FD0FFFA8F8F8F87AFD0DFEA4F8F8F89B52F8F850FD0DFEA4F8F8F8
%A8FD0BFFA8F8F8F82E363C143C363C143C363C143C363C05F8F8A8FF7DF8
%F80C3C363C143C363C143C363C143C36F8F8F87DFD0EFF27F8F826FD0EFE
%50F8F871C49BF8F8F8FD0EFE26F8F827FD0BFF52F8F8F8143C1436143C14
%36143C1436143C0DF8F827FFFFFFF8F8F8143C1436143C1436143C143614
%3C05F8F827FD0DFFA8F8F8F87AFD0EFEF8F8F8779B9C4BF8F87AFD0DFE7A
%F8F8F8A8FD0AFFF8F8F82F3C363C363C363C363C363C363C3605F8F87DFF
%FFFF27F8F835363C363C363C363C363C363C3635F8F8F8A8FD0CFF7DF8F8
%F8FD0EFEA4F8F8219CC49C77F8F850FD0EFE26F8F852FD09FF7DF8F8F80D
%143C1436143C1436143C1436143CF8F8F8A8FFFFFF52F8F8063C1436143C
%1436143C1436143C14F8F8F87DFD0CFFF8F8F87AFD0EFE50F8F84CA29BA2
%9BF8F8F8FD0EFE7AF8F8F8FD09FF7DF8F805363C143C363C143C363C143C
%363C13F8F8F8FD04FFA8F8F8F8143C363C143C363C143C363C143C2EF8F8
%27FD0CFFF8F8F87AA47AA4A4A47AA4A4A47AA4A4A47A26F8F89B9BC49CC4
%4BF8F850A4A4A47AA4A4A47AA4A4A47AA4A4F8F8F8A8FD08FF27F8F80CFD
%11F852FD05FF27FD14F8FD0BFFA8F8F8F87AFD11F89B9C9BA29B4CFD10F8
%26F8F8F87DFD08FF27F8F8353605FD0FF8A8FD05FF52FD0FF80536F8F8F8
%FD0BFF52F8F850FEA4FD0FF84CC49CC49CC49CFD0FF850FE50F8F852FD08
%FFF8F8F8143C1406FD04F827527D527D527D527D52FD07FF527D527D527D
%527D52FD05F80C143C05F8F87DFD0AFF52F8F850FEFEFE26FD04F84B7776
%77764C7677767D9BA29BA29BA2777776777677767776FD05F87AFEFE7AF8
%F827FD07FF7DF8F8F83C143C361305F8F8F852FFFFFF5227FD0DFF7DFFFF
%FFA827F8F8F80535363C1405F8F87DFD0AFF27F8F8A4FD04FE7A26F8F8F8
%4CC49C70F8A19CC49BC49CC49BC49CC49BC4774C9BC49CFD04F826FD04FE
%A4F8F827FD07FFA8F8F8051436143C140D05FD04F87DFFF827FD0CFFA8F8
%52FF52FD04F80636143C143605F8F852FD0AFF27F8F87AFD05FEA426F8F8
%F821774BF877A29B9C9BA29B9C9BA29B9C9B21F89C4CFD04F850FD05FE7A
%F8F8F8FD07FFA8F8F8273C363C363C363C2FFD04F852A87DFD0CFFA8F87D
%27FD04F8353C363C363C360CF8F87DFD0AFF27F8F8A4FD07FE50F8F8F821
%709CC49CC49CC49CC49CC49CC49CC44C4B27F8F8F826A4FD06FEA4F8F8F8
%FD07FFA8F8F8051436143C1436143C13FD05F8FD0EFFA8FD04F805143C14
%36143C143606F8F852FD0AFF27F8F87AFD08FE7AFD04F8279BA29BA29BA2
%9BA29BA29BA29B52FD04F850A4FD07FE7AF8F8F8FD07FFA8F8F8053C363C
%143C363C143C3605FD04F87DFD0BFF7DFD04F80C363C143C363C143C3605
%F8F87DFD0AFF27F8F8A4FD0AFE26FD04F89BC49CC49BC49CC49BC49C4BFD
%04F87AFD09FEA4F8F827FD08FFF8F8F8143C1436143C1436143C140CFD04
%F8FD0AFFA8F8F8F8050D143C1436143C1436143C05F8F87DFD0AFF52F8F8
%50FD0BFE50F8F8F8719BA29B9C9BA29B9C9BA221F8F826A4FD0AFE7AF8F8
%27FD08FFF8F8F835363C363C363C363C363C360CF8F852FFFFFFA8FFFFA8
%FD04FF27F8F835363C363C363C363C363C36F8F8F8A8FD0AFF52F8F850FD
%0CFEF8F8F89CC49C764C9B71709CC49C70F8F850FD0BFE7AF8F852FD08FF
%27F8F80C3C1436143C1436143C143605F8F87DFFFFFF27F8F8F87DFFFFFF
%27F8F80D36143C1436143C14361413F8F8F8FD0BFFA8F8F8F8FD0BFE50F8
%F84BA29BA270F8F8F827A29BA29BF8F8F8FD0BFE26F8F87DFD08FF7DF8F8
%05143C363C143C363C143C36F8F8F8FD04FF527DA87DA8FFFFFFA8F8F805
%363C143C363C143C363C0DF8F827FD0BFFA8F8F8F8A4FD0AFE26F8F89B9C
%C49B9B9C9B9B9B9CC49BC427F8F8A4FD09FEA4F8F8F8A8FD08FF7DF8F8F8
%0D143C1436143C1436140CF8F852FD05FF52F8A8FD05FFF8F8F835143614
%3C1436143C14F8F8F87DFD0CFFF8F8F87AFD0AFEF8F8F89BA29B9C9B4CF8
%F877A29B9C9B4CF8F850FD09FE7AF8F8F8FD0AFFF8F8F82F3C363C363C36
%3C363C27F8F87DFD04FF52F8F8F852FD04FF52F8F82F3C363C363C363C36
%35F8F8F8A8FD0CFF7DF8F8F8FD09FE7AF8F852C49CC49C27FD04F871C49C
%C49CF8F826FD09FE26F8F852FD0AFF52F8F8F8143C1436143C143614F8F8
%F8FFFFFF7DFD06F827A8FFFF7DF8F8051436143C1436143C06F8F827FD0D
%FFA8F8F8F87AFD08FE26F8F8529BA270FD07F827779BA221F8F8A4FD07FE
%A4F8F8F87DFD0AFFA8F8F8F80C143C363C143C360CF8F852FFFF52FD04F8
%05F8F8F8277DFFFFF8F8F83C363C143C363C14F8F8F87DFD0EFF27F8F826
%FD08FEF8F8F89CA24CF8F8F8267A26F8F8F820779B4CF8F87AFD07FE50F8
%F8F8FD0CFF27F8F8F80D143C1436143C05F8F87DA8FD05F8133C0DFD04F8
%27FF27F8F80D3C1436143C1400F8F827FD0FFFA8F8F8F87AFD06FE50F8F8
%4B7721F8F8F826A4FEFE50FD04F82177F8F8F8FD06FEA4F8F8F87DFD0DFF
%F8F8F82E3C363C363C36F8F8F87DFD04F80C363C363C3605F8F8F80552F8
%F805363C363C3613F8F8F87DFD10FF52F8F8F8FD06FE26F8F82721F8F8F8
%50FD06FE26F8F8F82021F8F8A4FD05FEF8F8F827FD0EFF52F8F8F80D3C14
%36140CFD07F80C1436143C1436140CFD07F83514361435F8F8F827FD11FF
%A8F8F8F826FD05FEFD07F8A4FD08FE26FD06F850FD04FE50F8F8F87DFD0E
%FFA827F8F8F8143C363C05FD05F80535143C363C143C363C1435FD06F80D
%3C363C05F8F8F8A8FD12FF52F8F8F850FEFEFE7AFD05F826FD0BFE7A26FD
%05F8FEFEFE7AF8F8F852FD10FFA8FD04F8133C14FD05F80C3C1436143C14
%36143C1436143505FD04F805143505F8F8F87DFD14FF27F8F8F87AFEFE26
%FD04F850FD0DFEA426FD04F8A4FE7AF8F8F827FD12FF7DFD04F8360CFD04
%F8353C363C363C363C363C363C363C363C2FF8F8F8273C27F8F8F852FD16
%FF27F8F8F850FEF8F8F826A4FD10FE7AF8F8F87A7AFD04F8FD14FF7DFD04
%F805F8F8051436143C1436143C1436143C1436143C143613F8F8F805F8F8
%F852FD18FFFD07F850A4FD12FEA4FD07F8A8FD15FF7DFD05F80C143C363C
%143C363C143C363C143C363C143C363C1405FD04F852FD1AFF27FD04F87A
%FD15FEA4FD05F8A8FD17FF7DFD05F805143C1436143C1436143C1436143C
%1436143C0DFD05F87DFD1CFF27FD04F8267AFD11FEA450FD05F8FD1AFFA8
%27FD05F82835363C363C363C363C363C363C360C05FD05F8A8FD1EFF52FD
%05F8267AFD0DFEA426FD05F852FD1DFF7DFD07F8050C0D0D0D130D0D0C05
%00FD06F852FD21FFA827FD07F85050A47AA47AA47A7A26FD06F8277DFD20
%FF5227FD13F852A8FD24FFA827FD14F87DFD23FFA87D27FD0EF82752FD29
%FFA852FD0FF8527DFD29FFA852522727F8F82752277D7DFD2FFFA87D5252
%2727F8272752527DA8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDF9FF
%FF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Layer 2) Ln
0 A
1 Ap
0 O
0 0 0 0 k
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
288.8496 -62.3711 m
-123.1509 -62.3711 L
-123.1509 393.6284 L
288.8496 393.6284 L
288.8496 -62.3711 L
fuu0.8588 0 0.0039 0 k
0 R
0 0 0 1 K
10 w-23.0352 159.5005 m
-67.9443 159.5005 -104.3457 123.0991 -104.3457 78.1924 c
-104.3457 33.2842 -67.9443 -3.1182 -23.0352 -3.1182 c
21.8706 -3.1182 58.272 33.2842 58.272 78.1924 c
58.272 123.0991 21.8706 159.5005 -23.0352 159.5005 c
bu0 Ap
0 0 0 0 k
1 w-20.3516 139.0259 m
-37.1245 92.9102 l
-75.3784 92.3848 l
-44.4624 66.1826 l
-55.9888 24.7852 l
-19.832 49.9385 l
13.1821 28.4512 l
3.2271 66.709 l
31.0005 91.8613 l
-6.9033 91.8135 l
-20.3516 139.0259 l
f/BBAccumRotation (-7.853981) XT
*u
0 0 0 1 0 0 0 Xa
-22.3037 158.6665 m
-2.3701 97.4463 L
52.2339 97.4434 l
7.9717 65.2363 L
26.6064 8.0127 L
-22.1226 43.4561 L
-71.4741 7.6201 L
-52.5859 65.5869 L
-96.4067 97.4502 L
-42.25 97.4404 L
-22.3037 158.6665 l
f/BBAccumRotation (-5.340707) XT
1 D
-35.021 89.4502 m
-69.7695 89.4561 L
-41.6577 69.0117 L
-53.7705 31.8213 L
-22.1104 54.8135 L
9.1504 32.0752 L
-2.7993 68.7881 L
25.5967 89.4502 l
-9.4355 89.4502 L
-22.2256 128.729 l
-35.021 89.4502 L
f/BBAccumRotation (-5.340707) XT
*U
0 D
-47.6416 87.7002 m
-51.02 86.4912 -53.2446 79.5615 -48.832 79.0176 c
-44.269 78.4736 -46.1064 85.9658 -47.6416 87.7002 C
f/BBAccumRotation (-7.853981) XT
5.0103 84.9014 m
0.6641 83.8467 -0.3511 77.6182 2.9912 76.7422 c
8.3164 75.3945 6.1646 82.9219 5.0103 84.9014 C
f/BBAccumRotation (-7.853981) XT
-15.1538 63.0547 m
-18.3267 62.4932 -21.5122 61.9365 -24.6792 61.374 C
-25.4351 61.9004 -28.04 62.1123 -28.04 63.0547 C
-28.6021 63.0547 -29.1582 63.0547 -29.7202 63.0547 C
-29.7202 62.4932 -29.7202 61.9365 -29.7202 61.374 C
-29.5269 61.374 -29.3516 61.374 -29.1582 61.374 C
-28.5479 60.8486 -27.478 60.0625 -27.478 59.1348 C
-28.2998 59.0107 -29.7202 58.9238 -29.7202 58.0137 C
-29.9136 58.0137 -30.1069 58.0137 -30.2822 58.0137 C
-30.2822 57.8232 -30.2822 57.6299 -30.2822 57.4551 C
-30.083 57.4551 -29.9136 57.4551 -29.7202 57.4551 C
-29.7202 57.2617 -29.7202 57.0684 -29.7202 56.8955 C
-27.2842 57.3818 -24.8545 57.875 -22.4189 58.3828 C
-19.8135 58.0654 -17.2026 57.751 -14.5977 57.4551 C
-14.5977 57.6455 -14.5977 57.8232 -14.5977 58.0137 C
-14.791 58.0137 -14.9844 58.0137 -15.1538 58.0137 C
-15.1538 58.207 -15.1538 58.3828 -15.1538 58.5762 C
-15.752 58.9932 -16.834 59.3984 -16.834 60.2559 C
-17.0332 60.2559 -17.2207 60.2559 -17.396 60.2559 C
-17.396 60.4463 -17.396 60.6221 -17.396 60.8154 C
-16.9912 60.9727 -13.9146 62.4932 -15.1538 62.4932 C
-15.1538 62.6865 -15.1538 62.8643 -15.1538 63.0547 C
f/BBAccumRotation (-7.853981) XT
UUu1 Ap
0 0 1 0 k
0 R
0 0 0 1 K
10 w188.7334 159.5005 m
143.8281 159.5005 107.4229 123.0991 107.4229 78.1924 c
107.4229 33.2842 143.8281 -3.1182 188.7334 -3.1182 c
233.6426 -3.1182 270.0439 33.2842 270.0439 78.1924 c
270.0439 123.0991 233.6426 159.5005 188.7334 159.5005 c
bu0 Ap
0.1333 0.4902 0 0 k
0.1765 0.4784 0 0 K
1 w191.2813 140.0981 m
174.5088 93.9834 l
136.2539 93.457 l
167.1709 67.2559 l
155.6445 25.8584 l
191.8008 51.0117 l
224.8145 29.5244 l
214.8604 67.7813 l
242.6338 92.9346 l
204.7295 92.8867 l
191.2813 140.0981 l
b/BBAccumRotation (-7.853981) XT
*u
0 0 0 1 0 0 0 Xa
189.3291 159.7393 m
209.2627 98.5195 L
263.8672 98.5166 l
219.6045 66.3096 L
238.2393 9.0859 L
189.5107 44.5293 L
140.1592 8.6924 L
159.0469 66.6602 L
115.2266 98.5225 L
169.3828 98.5137 L
189.3291 159.7393 l
f/BBAccumRotation (-5.340707) XT
1 D
176.6113 90.5234 m
141.8633 90.5293 L
169.9756 70.084 L
157.8623 32.8936 L
189.5225 55.8867 L
220.7832 33.1475 L
208.834 69.8604 L
237.2295 90.5234 l
202.1973 90.5234 L
189.4072 129.8022 l
176.6113 90.5234 L
f/BBAccumRotation (-5.340707) XT
*U
0 D
163.9912 88.7734 m
160.6123 87.5645 158.3887 80.6348 162.8008 80.0908 c
167.3643 79.5469 165.5264 87.0381 163.9912 88.7734 C
f/BBAccumRotation (-7.853981) XT
216.6426 85.9746 m
212.2969 84.9199 211.2813 78.6914 214.624 77.8145 c
219.9492 76.4668 217.7979 83.9951 216.6426 85.9746 C
f/BBAccumRotation (-7.853981) XT
196.4795 64.1279 m
193.3057 63.5654 190.1211 63.0098 186.9531 62.4473 C
186.1982 62.9736 183.5928 63.1846 183.5928 64.1279 C
183.0313 64.1279 182.4746 64.1279 181.9131 64.1279 C
181.9131 63.5654 181.9131 63.0098 181.9131 62.4473 C
182.1064 62.4473 182.2813 62.4473 182.4746 62.4473 C
183.085 61.9219 184.1553 61.1357 184.1553 60.208 C
183.333 60.084 181.9131 59.9961 181.9131 59.0869 C
181.7188 59.0869 181.5254 59.0869 181.3506 59.0869 C
181.3506 58.8965 181.3506 58.7031 181.3506 58.5273 C
181.5498 58.5273 181.7188 58.5273 181.9131 58.5273 C
181.9131 58.334 181.9131 58.1406 181.9131 57.9688 C
184.3486 58.4551 186.7783 58.9473 189.2139 59.4551 C
191.8193 59.1377 194.4307 58.8242 197.0352 58.5273 C
197.0352 58.7178 197.0352 58.8965 197.0352 59.0869 C
196.8418 59.0869 196.6484 59.0869 196.4795 59.0869 C
196.4795 59.2803 196.4795 59.4551 196.4795 59.6484 C
195.8809 60.0654 194.7988 60.4707 194.7988 61.3291 C
194.5996 61.3291 194.4121 61.3291 194.2373 61.3291 C
194.2373 61.5195 194.2373 61.6953 194.2373 61.8887 C
194.6416 62.0459 197.7188 63.5654 196.4795 63.5654 C
196.4795 63.7588 196.4795 63.9375 196.4795 64.1279 C
f/BBAccumRotation (-7.853981) XT
UUu1 Ap
0.0157 0.3451 0.7059 0 k
0 R
0 0 0 1 K
10 w188.7305 360.375 m
143.8281 360.375 107.4229 323.9736 107.4229 279.0679 c
107.4229 234.1587 143.8281 197.7573 188.7305 197.7573 c
233.6396 197.7573 270.0439 234.1587 270.0439 279.0679 c
270.0439 323.9736 233.6396 360.375 188.7305 360.375 c
bu0 Ap
0 0 0 0 k
1 w191.4629 342.1094 m
174.6895 295.9946 l
136.4355 295.4688 l
167.3516 269.2671 l
155.8252 227.8696 l
191.9824 253.0229 l
224.9961 231.5356 l
215.041 269.7925 l
242.8145 294.9458 l
204.9111 294.8975 l
191.4629 342.1094 l
f/BBAccumRotation (-7.853981) XT
*u
0 0 0 1 0 0 0 Xa
189.5107 361.75 m
209.4443 300.5308 L
264.0479 300.5278 l
219.7861 268.3208 L
238.4209 211.0967 L
189.6914 246.5405 L
140.3398 210.7041 L
159.2285 268.6714 L
115.4072 300.5337 L
169.5645 300.5249 L
189.5107 361.75 l
f/BBAccumRotation (-5.340707) XT
1 D
176.793 292.5342 m
142.0449 292.5405 L
170.1563 272.0957 L
158.0439 234.9053 L
189.7041 257.8975 L
220.9648 235.1592 L
209.0146 271.8721 L
237.4111 292.5342 l
202.3789 292.5342 L
189.5889 331.813 l
176.793 292.5342 L
f/BBAccumRotation (-5.340707) XT
*U
0 D
164.1729 290.7847 m
160.7939 289.5757 158.5693 282.646 162.9824 282.1021 c
167.5449 281.5581 165.708 289.0498 164.1729 290.7847 C
f/BBAccumRotation (-7.853981) XT
216.8242 287.9858 m
212.4785 286.9312 211.4629 280.7026 214.8057 279.8262 c
220.1309 278.4785 217.9785 286.0063 216.8242 287.9858 C
f/BBAccumRotation (-7.853981) XT
196.6602 266.1392 m
193.4873 265.5767 190.3018 265.021 187.1348 264.4585 C
186.3789 264.9844 183.7744 265.1963 183.7744 266.1392 C
183.2119 266.1392 182.6563 266.1392 182.0938 266.1392 C
182.0938 265.5767 182.0938 265.021 182.0938 264.4585 C
182.2871 264.4585 182.4629 264.4585 182.6563 264.4585 C
183.2666 263.9326 184.3359 263.147 184.3359 262.2192 C
183.5146 262.0952 182.0938 262.0078 182.0938 261.0981 C
181.9004 261.0981 181.707 261.0981 181.5322 261.0981 C
181.5322 260.9077 181.5322 260.7144 181.5322 260.5391 C
181.7314 260.5391 181.9004 260.5391 182.0938 260.5391 C
182.0938 260.3457 182.0938 260.1523 182.0938 259.98 C
184.5303 260.4663 186.96 260.959 189.3955 261.4668 C
192.001 261.1494 194.6113 260.835 197.2168 260.5391 C
197.2168 260.7295 197.2168 260.9077 197.2168 261.0981 C
197.0234 261.0981 196.8301 261.0981 196.6602 261.0981 C
196.6602 261.2915 196.6602 261.4668 196.6602 261.6602 C
196.0625 262.0771 194.9805 262.4819 194.9805 263.3403 C
194.7813 263.3403 194.5938 263.3403 194.418 263.3403 C
194.418 263.5308 194.418 263.7061 194.418 263.8994 C
194.8232 264.0566 197.8994 265.5767 196.6602 265.5767 C
196.6602 265.77 196.6602 265.9487 196.6602 266.1392 C
f/BBAccumRotation (-7.853981) XT
UUu1 Ap
0.07 0.43 0 0 k
0 R
0 0 0 1 K
10 w-23.0381 360.375 m
-67.9443 360.375 -104.3457 323.9736 -104.3457 279.0679 c
-104.3457 234.1587 -67.9443 197.7573 -23.0381 197.7573 c
21.8706 197.7573 58.272 234.1587 58.272 279.0679 c
58.272 323.9736 21.8706 360.375 -23.0381 360.375 c
bu0 Ap
0.0196 0.0275 1 0 k
1 w-21.751 340.9185 m
-38.5239 294.8037 l
-76.7778 294.2778 l
-45.8613 268.0762 l
-57.3877 226.6792 l
-21.231 251.832 l
11.7827 230.3447 l
1.8276 268.6021 l
29.6011 293.7554 l
-8.3022 293.707 l
-21.751 340.9185 l
f/BBAccumRotation (-7.853981) XT
*u
0 0 0 1 0 0 0 Xa
-23.7031 360.5596 m
-3.769 299.3403 L
50.8354 299.3369 l
6.5728 267.1304 L
25.207 209.9063 L
-23.522 245.3496 L
-72.8735 209.5132 L
-53.9849 267.481 L
-97.8062 299.3433 L
-43.6494 299.334 L
-23.7031 360.5596 l
f/BBAccumRotation (-5.340707) XT
1 D
-36.4204 291.3438 m
-71.1689 291.3496 L
-43.0571 270.9048 L
-55.1694 233.7144 L
-23.5098 256.707 L
7.751 233.9683 L
-4.1982 270.6812 L
24.1978 291.3438 l
-10.835 291.3438 L
-23.6245 330.6221 l
-36.4204 291.3438 L
f/BBAccumRotation (-5.340707) XT
*U
0 D
-49.0405 289.5938 m
-52.4194 288.3848 -54.644 281.4551 -50.2314 280.9111 c
-45.668 280.3672 -47.5054 287.8589 -49.0405 289.5938 C
f/BBAccumRotation (-7.853981) XT
3.6108 286.7954 m
-0.7349 285.7407 -1.7505 279.5117 1.5923 278.6353 c
6.917 277.2876 4.7651 284.8159 3.6108 286.7954 C
f/BBAccumRotation (-7.853981) XT
-16.5527 264.9482 m
-19.7261 264.3862 -22.9116 263.8301 -26.0786 263.2681 C
-26.834 263.7939 -29.439 264.0054 -29.439 264.9482 C
-30.0015 264.9482 -30.5576 264.9482 -31.1196 264.9482 C
-31.1196 264.3862 -31.1196 263.8301 -31.1196 263.2681 C
-30.9263 263.2681 -30.751 263.2681 -30.5576 263.2681 C
-29.9468 262.7422 -28.877 261.9565 -28.877 261.0283 C
-29.6992 260.9048 -31.1196 260.8169 -31.1196 259.9072 C
-31.313 259.9072 -31.5063 259.9072 -31.6816 259.9072 C
-31.6816 259.7168 -31.6816 259.5234 -31.6816 259.3481 C
-31.4819 259.3481 -31.313 259.3481 -31.1196 259.3481 C
-31.1196 259.1548 -31.1196 258.9614 -31.1196 258.7891 C
-28.6836 259.2759 -26.2539 259.7681 -23.8179 260.2759 C
-21.2129 259.9585 -18.6021 259.6445 -15.9966 259.3481 C
-15.9966 259.5386 -15.9966 259.7168 -15.9966 259.9072 C
-16.1899 259.9072 -16.3838 259.9072 -16.5527 259.9072 C
-16.5527 260.1006 -16.5527 260.2759 -16.5527 260.4692 C
-17.1514 260.8867 -18.2329 261.2915 -18.2329 262.1499 C
-18.4326 262.1499 -18.6201 262.1499 -18.7954 262.1499 C
-18.7954 262.3403 -18.7954 262.5156 -18.7954 262.709 C
-18.3901 262.8662 -15.314 264.3862 -16.5527 264.3862 C
-16.5527 264.5796 -16.5527 264.7578 -16.5527 264.9482 C
f/BBAccumRotation (-7.853981) XT
UUULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
