%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8.0.1
%%For: (kj cottrell) (killpeople.com)
%%Title: (blanco_unleash.ai)
%%CreationDate: (9/20/01) (7:35 PM)
%%BoundingBox: 90 188 572 670
%%HiResBoundingBox: 90.1055 188.5059 571.3916 669.792
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Impact
%%DocumentNeededFonts: Impact
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 342 395 342 395
%AI3_TileBox: 0 0 592 768
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -1530 1619 0.3333 1146 827 26 0 1 3 40 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%%AI3_PaperRect:-10 783 602 -9
%%AI3_Margin:10 -10 -10 9
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 128 8
%%BeginData: 16394 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD35FFCFCEC8C8C8C79EC79FC79EC79FC79EC79FC8A5CEC9CFCFFD
%64FFA7C99FC79EC79EC19EC79EC19EC79EC19EC79EC19EC79EC19EC79EC1
%9EC8A6CFFD5DFFC9C89FC79EC79FC79EC79FC79EC79FC79EC79FC79EC79F
%C79EC79FC79EC79FC79EC79FC7A5CECFFD55FFCFA7C79EC19EC79EC19EC7
%9EC19EC79EC19EC79EC19EC79EC19EC79EC19EC79EC19EC79EC19EC79EC1
%9EC79FC9A8FD50FFCAC89EC79FC79EC79FC79EC79FC79E9F7A7550512626
%264BF8F8264B26264A75749F9EC79FC79EC79FC79EC79FC79EC7C8CFFD4B
%FFCFC99FC79EC19EC79EC19EC79E9F745026FD16F8264A749EC79EC19EC7
%9EC19EC79EC7A6FD48FFC8C79FC79EC79FC79EC79F9F4A26FD1EF820517A
%C79EC79FC79EC79FC79FCEFD43FFA8C99EC19EC79EC19EC79E7A26FD26F8
%4A74C79EC19EC79EC19EC7A6FD40FFC9C79FC79EC79FC79EC77426FD2AF8
%20759EC79FC79EC79FC79FCFFD3DFF9FC19EC79EC19EC79E4AFD30F8269F
%9EC19EC79EC19EC8CFFD39FFC99EC79FC79EC79F9F26FD34F8519EC79EC7
%9FC79EC7C9FD36FFA8C79EC19EC79EC19E4AFD38F8269F9EC79EC19EC79F
%CFFD33FFC9C79FC79EC79FC75026FD3BF8759FC79EC79FC79FCFFD31FFA6
%C19EC79EC19E9FFD3FF82674C19EC79EC19EC8FD2FFF9FC79FC79EC79E51
%FD42F84AC19EC79FC79EC8FD2CFFCF9FC19EC79EC17426FD45F89E9EC79E
%C19EC7CAFD2AFF9FC79EC79FC774FD1AF8262651509F749F9FC79EC79FC7
%9E9F7A754A4BFD1BF87B9FC79EC79FC7CFFD27FFCF9EC79EC19EC726FD18
%F84A509F9EC19EC79EC19EC79EC19EC79EC19EC79EC19EC79E742626FD17
%F8509EC19EC79EC7A7FD25FFCF9FC79EC79FC120FD16F8517AC79FC79EC7
%9FC79EC79FC79EC79FC79EC79FC79EC79FC79EC79FC79E9F4A26FD15F826
%9EC79EC79FC7C9FD23FFCF9EC79EC19E9FFD15F84A74C79EC19EC79EC19E
%9F6E98686EFD09686E6E98989F9EC79EC19EC79E7A26FD14F82674C19EC7
%9EC1A7FD21FFCF9FC79FC79E9FFD13F826509F9EC79FC79EC79899688C68
%68688C6868688C6868688C6868688C686868B5929F9EC79FC79EC79E75FD
%13F8269EC79FC79EC7CFFD1FFFCF9EC19EC79E9FFD13F8509EC79EC19EC7
%9892FD1C686E9F9EC19EC79E9F4AFD13F874C79EC19EC7CAFD1EFF9FC79F
%C79E9FFD12F8269F9FC79EC79E99FD21686E98C19EC79FC79E4BFD11F820
%7AC79FC79EC7FD1DFF9FC19EC79E9EFD11F82674C19EC79E9F6EFD266892
%9EC79EC19E9FFD12F874C79EC19EC7FD1BFFC8C79EC79FC720FD10F8519E
%C79EC79E99688C6868688C6868688C6868688C6868688C6868688C686868
%8C6868688C6868688C6868688C6868688C92C79EC79FC74AFD10F8279EC7
%9EC79FC9FD19FFA7C79EC19EC720FD10F8749EC79EC174FD2E68989EC79E
%C17420FD0FF8269EC19EC79EC9FD17FFCFC79EC79FC726FD0FF8209F9FC7
%9EC16EFD116844FD1E68929EC79FC79E26FD0FF8519FC79EC79FFD17FFC7
%9EC19EC774FD0FF8269F9EC79E98FD10684420F8F844FD1F686EC79EC19E
%4AFD0FF8749EC19EC79FFD15FFCE9FC79EC79EFD0FF84AC79EC79E99688C
%6868688C6868688C6868688C686820FD04F8FD04688C6868688C6868688C
%6868688C6868688C6868688C6868688C6868688C92C79EC79F51FD0FF89F
%9EC79FC7C9FD13FFCF9EC79EC19E26FD0EF826C79EC19E6EFD0F6844FD06
%F844FD22689F9EC79E4AFD0FF89F9EC79EC1CAFD12FFC7C79EC79F51FD0E
%F84AC79EC79EFD106820FD07F8FD076844FD1C68C19EC79F50FD0EF84AC7
%9EC79FC8FD11FFA7C79EC19E9FFD0EF826C79EC198FD106820FD08F844FD
%046844F8F820FD1C689E9EC79E4AFD0EF874C19EC79ECFFD10FFC79FC79E
%C720FD0DF826C79FC79EB46868688C6868688C6868688C68686844FD09F8
%44688C4420F8F8F844688C6868688C6868688C6868688C6868688C686868
%8C6868688C686868C19FC79E51FD0DF8269EC79FC79FFD0FFFC99EC79EC1
%4AFD0DF8209F9EC79EFD106844FD0AF8446820FD05F820FD1E689F9EC19E
%26FD0DF8509EC79EC1A6FD0EFF9FC79EC79E20FD0DF89F9FC79E6EFD0F68
%44FD05F8A8FFA8F8F8F868FD07F844FD1F68C19FC79E26FD0DF89F9EC79F
%C7CFFD0CFFA6C79EC19E4AFD0DF8749EC79E6EFD1068FD05F8A8FFFF7DF8
%F820FD08F820FD2068C19EC174FD0DF826C19EC79EC9FD0CFFC79FC79E9F
%FD0DF8519EC79F99688C6868688C6868688C6868688C686820FD04F8FD04
%FFA8FD07F8527D27F8446868688C6868688C6868688C6868688C6868688C
%6868688C6868688C6868688C92C79EC74AFD0DF89EC79FC79FFD0BFFC99E
%C79EC126FD0CF8269EC19E99FD106844FD04F8A8FD04FF52FD05F852FFFF
%FFF8F820FD216898C19EC1FD0DF84A9EC79EC1A6FD0AFF9FC79EC79EFD0D
%F874C79FC1FD116820F8F8F8FD06FF52F8F8F827A8FD04FFF8F8FD22686E
%9EC79E9FFD0DF89F9EC79FC7FD09FFA7C79EC19E4AFD0CF826C19EC7FD11
%6844F8F8F87DFD06FFF8F8F827A8FD04FFA8F8F844FD22686E9EC19E4AFD
%0CF826C19EC79ECFFD08FFC89FC79EC7FD0DF89F9EC79868688C6868688C
%6868688C6868688C686820F8F827FD06FF7DF8F827FD06FF7DF8F868688C
%6868688C6868688C6868688C6868688C6868688C6868688C6868688C6868
%688C68999EC79EFD0DF89EC79FC7A6FD07FFCF9EC79EC14AFD0CF8759EC1
%9EFD1268F8F8F852FD06FF27F827A8FD06FF27F820FD2568C19EC74AFD0C
%F8509EC79EC1CAFD06FFC9C79EC79F26FD0BF8209EC79F98FD1268F8F8F8
%FD06FF7DF827FD07FFA8F8F84468686844684444206844FD1B686EC79EC7
%FD0DF8C79EC79FCEFD06FFC79EC19E9FFD0CF84AC19EC1FD126820F8F827
%FD06FFF852A8FD07FF27F8206820FD0AF82020FD19689EC19E50FD0CF874
%C19EC79FFD06FF9FC79EC74AFD0CF89F9EC79268688C6868688C6868688C
%6868688C68686820F8F852FD05FF52A8FD08FF7DF8F820F8F8F827275252
%7D527D2752F8F8F820448C6868688C6868688C6868688C6868688C686868
%8C68999EC79EFD0CF8519EC79FC7CFFD04FFA7C79EC19E20FD0BF8509EC1
%9EFD1368F8F8F8A8FD0EFFA8FD04F8527DFD0BFF7D52F8F8F844FD15689F
%9EC726FD0CF8C19EC79EC9FD04FFC89EC79F9FFD0CF874C79F99FD126844
%F8F852FD0EFFA827F852A8FD11FFA852F82044FD136898C79E9FFD0CF87A
%C79EC7C7FD04FF9EC19EC74AFD0CF8C19EC7FD136844F8F87DFD0DFF5227
%52FD16FFA8F8F820FD13689EC19E26FD0BF8509EC19EC7FFFFFFCFC79EC7
%9F26FD0BF8519EC79868688C6868688C6868688C6868688C68686844F827
%A8FD0DFF277DFD1AFF52F8208C6868688C6868688C6868688C6868688C68
%9F9EC74AFD0BF826C79EC79FCFFFFFC99EC19EC1FD0CF87AC19E92FD1068
%20F8F87DFD0CFFA852F8A8FD1CFFA8F8F8FD11686EC19E9FFD0CF89EC19E
%C7A6FFFFA5C79FC774FD0CF8C79FC7FD1068F8F827A8FD0BFFA827F827FD
%20FF27F8FD11689FC79E26FD0BF89F9FC79EC8FFFFC19EC79E50FD0BF84A
%9EC798FD0F68F8F8F8FD0AFFA85227F8277DFD21FFA827F8FD10689F9EC1
%26FD0BF84AC79EC19EFFFF9EC79FC726FD0BF874C79F99688C6868688C68
%68688C6868688CF8F827FD0BFFA87D7DA8FD24FFA827F868688C6868688C
%6868688C6868688C92C79E7BFD0BF84B9FC79EC7CFCAC19EC79EFD0CF89F
%9EC7FD0E6820F8F8FD35FF52F8F8FD0E686E9EC19EFD0CF8C79EC19ECFCE
%9FC79E9FFD0BF8269FC79EFD0D6844F8F8A8FD06FFCAFD0AFFA8A8FD23FF
%F8F820FD0E68C79FC7FD0CF89EC79FC7C8A6C79EC174FD0BF820C79E9EFD
%0C6844F8F87DFD06FF9A68A1FD09FF27F852FD22FF7DF8F844FD0D6898C7
%9E26FD0BF87A9EC79EC8C89FC79E75FD0BF8519FC7988C6868688C686868
%8C68686820F827FD05FFA1686868A1FD09FFA8F8F827FD22FFF8F844688C
%6868688C6868688C686868BB9FC74AFD0BF850C79FC7A59FC79EC14AFD0B
%F850C79E98FD0C68F8F8A8FD04FFA1FD04689AFD0BFF52F827FD21FF27F8
%F8FD0D686EC79E50FD0BF8509EC79EC8C79EC79F50FD0BF89F9EC76EFD0B
%6820F827FD05FFFD0568A1FD0CFFA827A8FD20FF7DF8F8FD0D68929EC77A
%FD0BF84AC79EC79F9EC19EC726FD0BF874C19E6EFD0B68F8F8A8FD04FFA1
%FD0568A1FD0DFF527DFD20FF7DF8F844FD0D68C19E9FFD0BF8269EC19EC7
%C79EC79F26FD0BF89F9EC76868688C6868688C6868688CF852FD05FFA168
%68688C68FD0EFFA852FD21FFF8F82068688C6868688C6868688C68689EC7
%9EFD0BF826C79EC79F9EC19EC726FD0BF89EC19EFD0B6820F87DFD05FFA1
%FD0468A1FD0EFF527DFD21FFF8F8F8202020FD0A68C19EC7FD0BF8269EC1
%9EC7C79FC79E4BFD0BF8C79FC7FD0B6820F8FD07FF68686893FD0FFF277D
%FD11FFA8FD0FFF27FD06F8FD09689FC79EFD0BF820C79FC79E9EC79EC1FD
%0CF89EC79EFD0B68F827FD07FFA19AA1FD0FFF7DF8FD10FFA8F852FD0FFF
%27F8F87DFF52F844FD0868C79EC1FD0CF89EC79EC1C79FC79EFD0CF8C79F
%C7688C6868688C6868688C20F852FD19FFF8A8FD10FFF8F8A8FD0FFF27F8
%27FFFFA8F8FD04688C6868688C9FC79EFD0CF8C79FC79E9EC79EC120FD0B
%F89EC79EFD0A68F8F8A8FD17FFA8277DFD10FF7DF827FD10FF27F8FFFFFF
%A8F8FD0968C79EC1FD0BF8269EC79EC1C79EC79F26FD0BF8C79EC7FD0A68
%F8F87DFD2AFF52F87DFD10FF2752FFFFFFA8F8FD09689EC79FFD0BF826C7
%9EC79F9EC19EC726FD0BF89EC19EFD0A6820F8F87DFD29FFF8F87DFD10FF
%F8A8FFFFFF52F8FD0968C19E9FFD0BF8269EC19EC7C79EC79F26FD0BF89F
%9EC76E68688C6868688C686820F8F8F87DFD27FFA8F8F8A8FD10FFF8FD04
%FF522068688C6868688C68929EC77AFD0BF826C79EC79F9EC19EC726FD0B
%F874C19E92FD0A68FD04F87DFD26FFA8F8F8FD10FFA852FD04FFF844FD08
%686EC19E9FFD0BF8509EC19EC7C89FC79E75FD0BF8759FC76EFD0B68FD04
%F827FD25FFA8F8F8FD10FFA852FFFFFF52F8FD0968999FC750FD0BF84AC7
%9FC7A59FC79EC14AFD0BF84AC79E98FD0B6844FD05F8527DFD22FFA8F8F8
%FD10FF52A8FFFF7DF820FD09686EC79E50FD0BF8749EC79EC8CE9FC79E9F
%FD0BF84B9FC7988C6868688C6868688C6868688C20FD06F827527D7DFD08
%A8FD15FFA8F8F8A8FD0FFF52A8FFA8F8F868688C6868688C686868C19FC7
%26FD0BF874C79FC7C8A6C79EC19EFD0CF8C79EC1FD0E6820FD0FF827FD16
%FFA8F8F87DFD0FFFF8A8A8F8F820FD0A689EC79EFD0CF89F9EC79EC9CF9E
%C79FC7FD0CF89EC79F92FD0E684420FD0DF8FD18FFF8F87DFD0EFFA8F852
%27F820FD0A686EC79E9FFD0CF89FC79EC7CFCAC19EC79E26FD0BF8749EC7
%6EFD0F684420F8F8F827FD07F87DFD18FFF8F827FD0EFF7DF8F8F820FD0B
%68989EC150FD0BF820C79EC19EFFFF9FC79FC74AFD0BF84AC79F9F688C68
%68688C6868688C6868688C68686820F852FFFF7D27F8F8F827FD0EFFA8FD
%0AFF7DF8F8A8FD0DFF27F820FD04688C6868688C6868688C98C79E51FD0B
%F8519FC79EC7FFFFC89EC79E74FD0BF8269EC79EFD116820F827FD04FF52
%F8F827FD0BFFA852F8A8FD0AFFA8F8F8F8A8FD0BFFA8F820FD0E68C79EC1
%FD0CF874C79EC19FFFFFC9C79EC79EFD0CF89F9EC76EFD1168F8F8A8FD04
%FF52F852FD0AFF52277DFD0DFF52F8F827A8FD0AFF52F8FD0E68929EC79E
%FD0CF8C19EC79FC9FFFFCF9EC19EC7FD0CF84AC19E9FFD1168F8F827A8FF
%FFFFA827F87DFD08FF527DFD0FFF52FD04F87DFD09FFF8F8FD0E6898C19E
%50FD0BF8269EC19EC7C9FFFFFFC79EC79F51FD0BF8269EC79F6E688C6868
%688C6868688C6868688C686844F8F8277DFFFFFF27F8F87DFD05FFA87DFD
%0DFFA87D27F8277DA8FD0BFF52F8208C6868688C6868688C6868688C68C7
%9EC720FD0BF84AC79EC79FFD04FF9FC19EC774FD0CF87A9EC76EFD1168FD
%05F8525227F8F8F8277DA87D2752FD0CFFA827F8F852A8FD0DFF7DF8F844
%FD0D68999EC174FD0CF89F9EC19EC8FD04FFCE9FC79EC7FD0CF84AC79EC1
%FD12684420FD0CF827FD0CFFA8F8F8F852FD0EFFA827F820FD0E689EC79F
%50FD0BF8209EC79FC7C9FD04FFA8C79EC19E4AFD0CF89EC19E92FD146820
%2020FD08F87DFD0CFF27F8F827FD0CFFA87DF8F8F82044FD0D686EC19E9F
%FD0CF826C19EC79ECFFD05FFC7C79EC77AFD0CF8759EC79E68688C686868
%8C6868688C6868688C6868688C6868688C20FD07F852FD06FFA827FD07F8
%52FD09FF7D7D27F8F8F82068688C6868688C6868688C6868688C68C19EC7
%50FD0CF89F9EC79FC8FD06FFCE9EC19EC7FD0DF89F9EC76EFD1768FD07F8
%277DFFFFFF7D27FD09F87DFD05FFA82727FD05F84444FD1068989EC19E20
%FD0BF8269EC19EC7A7FD06FFCFC79FC79E75FD0CF850C79EC7FD176844FD
%11F820FD05F827277D5227FD04F8204444FD13689EC79F75FD0CF850C79F
%C79EFD08FF9FC79EC19EFD0DF89EC19E98FD18682020FD09F820F8204468
%68684420FD08F8204444FD156874C19E9FFD0DF89F9EC79EC8FD08FFCF9F
%C79EC74AFD0CF84B9EC79F92688C6868688C6868688C6868688C6868688C
%6868688C6868688C446844684468688C6868688C6868688C686844442044
%448C6868688C6868688C6868688C6868688C6868688C6868688C6EC79EC7
%26FD0CF8519EC79FC7C9FD09FFC79EC19E9FFD0DF87A9EC79EFD4A689F9E
%C174FD0DF89EC19EC79FFD0AFFC8C79FC79E51FD0DF8C19EC798FD486899
%9EC79E26FD0CF826C79FC79ECEFD0BFF9EC79EC19EFD0DF84AC19EC76EFD
%4668929EC19E50FD0DF89F9EC79EC1A8FD0BFFCE9FC79EC74AFD0DF874C7
%9FC7688C6868688C6868688C6868688C6868688C6868688C6868688C6868
%688C6868688C6868688C6868688C6868688C6868688C6868688C6868688C
%6868688C6868688C686868B59EC79E9FFD0DF8519EC79FC7C9FD0CFFCAC7
%9EC19E9FFD0EF89EC79E9FFD44689EC79E9FFD0DF8209EC19EC79EFD0EFF
%C8C79FC79E75FD0DF8269EC79FC1FD41686E9EC79EC726FD0DF84AC79FC7
%9ECEFD0FFF9FC79EC19E26FD0DF8269EC79E9EFD406898C79EC126FD0EF8
%C19EC79EC7A8FD0FFFCF9FC79EC77AFD0EF8519FC79EC16868688C686868
%8C6868688C6868688C6868688C6868688C6868688C6868688C6868688C68
%68688C6868688C6868688C6868688C6868446F204B2093686E9EC79FC74A
%FD0EF89F9EC79FC7C9FD11FFC89EC19EC74AFD06F827F827F827F827F827
%272726272044F8272727F8446827202727272068F827202727F844686868
%F827272720272727202768682027272720272727F8FD0568F8527DA87DA8
%52F850C19E9FF827F82727F8F8272727F827F8F8F8509EC19EC79FFD12FF
%CFC79FC79EC7FD07F8FD04FF7DF827FD04FF7D7B4A7DFFFFFF7D446820FF
%FFFF7D4B4452FD04FF276868684452FD07FFA820686827FD07FF27686868
%4BF8A8FD06FFA82751C7F87DFD04FFF82752FD04FF27F8269EC79FC79EFD
%14FFA6C79EC19E9FFD06F8FD04FF52F8F8FD04FF5274757DFFFFFF7D4468
%27FFFFFF7D444452FD04FF206868684452FD07FF7D44686827FD07FF2068
%6868F8FD09FFA82726F87DFFFFFFA827F87DFFFFFFA8F8F874C19EC79EC9
%FD15FFC7C79EC79F7BFD04F827FD04FF52F852FD04FF27C727FD04FFA820
%8C27FFFFFF276820A8FD04FF2068688C20A8FD07FF7D448C207DFD07FF4B
%688C4B7DFFFFFFA8F852FD04FF26F8F8FD04FFA8F827A8FFFFFFA82774C7
%9EC79FC8FD17FF9EC19EC79E4AF8F8F87DFD04FFF8F852FD04FF279E27FD
%05FF27447DFFFFFF27684B7DFFFFFF7D4B68686827A8FFFFFF7D20202720
%686827A8FFFFFFA8FFFFFF27686827A8FFFFFF279F26FD04FF27F827FD04
%FF5227F8FD04FF7DF8C79EC19EC7CFFD17FFCF9FC79EC79F26F8277DFD04
%FF27F87DFD04FFF82027FD05FF274B7DFFFFFFF86820FD04FF7D20686868
%F8FD04FF7D4BFD0568F8FFFFFF7D52FFFFFF4B6868F8FD04FF517552FD04
%FFF8F827FD04FF52F827FD04FF529F9EC79FC7C9FD19FFC89EC19EC79E26
%F8A8FFFFFFA8F8277DFFFFFF7D27F852FD05FF52F8A8FFFFA8276827FD04
%FF524468686827FD04FF5244FD0468207DFFFFFF5252FFFFFFF8684427FD
%04FFF875F827F827F8F8F852FD04FFF8F827FD04FF279EC19EC7A6FD1BFF
%C89EC79FC79E27FD04FF7D27F8FD04FFA8F82752FD05FF52F8FFFFFFA820
%8C27FD04FF4B688C686827FD04FF4B6868688C684BA8FFFFFFF87DFFFFFF
%4B686827FD05FFF851FD05F82752FD04FFF8F87DFD04FF20C79EC7C7FD1C
%FFCFC79EC79EC1F8FD04FF7DF827FD04FF52F8F87DFD05FF7D27FFFFFF52
%44447DFD04FFF8686868447DFD04FFFD04274468F8FFFFFFA8F852FFFFFF
%20999E27FD06FF2727FD05F8A8FD0AFFA8279EC19FFD1EFFCFC79EC79F27
%FD04FF27F827FD04FF27F827A8FD05FFA87DFFFFFF5275757DFFFFFFA827
%6868684B7DFD07FF27684452FFFFFF7DF8A8FFFFFF279EC7277DFD06FF52
%27F8F8F827A8FD0AFFA84AC79FCFFD1FFFCAC19E9F52FD04FFF8F87DFD04
%FFF8F8F8FD0BFFF8C726A8FFFFFFA82068686820A8FD07FF27684B7DFFFF
%FFF84B7DFFFFFF26C19E9FF87DFD06FF7D27F8F8F8FD0BFF52759ECFFD21
%FFCAC7517DFD04FFF8277DFD04FF27F827FFFFFFA8A8FD06FF279F51FD04
%FF7D7C9E996E4BFD08FF2092F8FD04FF2727A8FFFFFF517451F8F8F852FD
%06FF5227F827FD0BFF5274CFFD23FFA7517DFFFFFF7D27F8A8FFFFFFA8F8
%F827FFFFFF277DFD05FFA8F826F8FD04FF7D74C79EC1F8FD04FF52F82726
%517452FFFFFF7D2627A8FFFFFFFD07F827A8FD04FFA8F8F827FD04FF27F8
%52FD04FF27C9FD25FF27FD04FF7D4B27FD04FF7D27F87DFFFFFF2752FD05
%FFA827F852FD04FF27C79EC77B27FD04FF27C79FC79E7B7DFFFFFF5227F8
%FD04FFF8F827F827F827F827FD04FFA827F87DFD04FFF89F52FD04FF27FD
%26FF27FD04FF529FF8FD04FF52F8277DFFFFFFF827FD05FF7DF8F852FD04
%FF27F8264A5052FD04FF209EC79E9FF8FD0BFFF8F852FFFFFF7DF8F8A8FF
%FFFFA8F8F87DFFFFFFA8274A7DFD04FF27FD26FF27FD04FF527552FD04FF
%27F827A8FFFFA827F8FD05FF52F8F8A8FD04FFFD05F87DFD04FFFD05F827
%FD0BFF27F8A8FFFFFF7DF827A8FFFFFF7D27F8FD04FFA84B51A8FFFFFFA8
%7DFD25FFA852FD04FF269F52FD04FFF8F827FFFFFFA8F827FD05FF27F827
%7DFFFFFF7D27F827F8277DFFFFFF7D27F827F8F852FD0BFFF8277DFFFFFF
%52F8F8FD04FF52F827FD04FF527B26FD04FF7D52FD26FF27FD04FF27F8A8
%FFFFFFA82726F8FFFFFF5227F8FD05FFF8F8F8FD05FF7DA87D27F8FD05FF
%A8A87D52F8A8FFFFFFA8F82752FD04FF27F8A8FFFFFF7DF827FD04FFF8F8
%27FD04FF527427FD04FF52A8FD26FFF8FD04FFA8A8FD04FFF8C77451FFFF
%FF52F8277DFFFFFFA827F827FD07FFA8F8F8FD08FF52F8FD04FF5227F87D
%FD04FFF8F852FD04FFA8FD04FF7D272052FD04FF2699F8FD04FF27A8FD26
%FF5252FD08FF27A69F9F52FFFFFF27F8F87DFFFFFFA8F8F827FD07FF7D27
%27FD08FF5252FD04FF52F82752FD04FF27F827A8FD07FFA827749F52FD04
%FF27A77DFD04FF27FD28FF52277DFFFFFFA87DF8999EC74A52527D5226F8
%F8277D527D2727F827527D527D527D5227F827527D527D527D527DF82752
%7D527DF8F8F852527D527DF8F8F8277DA8FFFFA87D272774C14A52527D52
%7D277D277D527D5227FD29FFA852275227527DFFCFC89EA04B7B4A7B519F
%2627F827F827F8F8F827F827F827F827F8F8F827F827F827F827F827F827
%F827F827F827F827F827F827F8F8F827F827F827509F9EC79F9F4A7B517D
%527DA87D527D527D7DFD33FFC99FC79EC19EC79EC19E74FD2BF8264A9F9E
%C79EC19EC79EC7A7FD40FFC9C79EC79FC79EC79FC77451FD25F8264A9F9F
%C79EC79FC79EC79FCEFD43FFCFC99EC79EC19EC79EC19EC77450FD1FF826
%4A9F9EC19EC79EC19EC79EC7A6FD48FFC8C79FC79EC79FC79EC79FC79E9F
%4A26FD16F82651749F9FC79EC79FC79EC79FC79FCEFD4CFFCE9FC19EC79E
%C19EC79EC19EC79EC19E9F5050FD042620F8F8262026264A4A74749F9EC7
%9EC19EC79EC19EC79EC19EC8A7FD50FFCFCEC7C79EC79FC79EC79FC79EC7
%9FC79EC79FC79EC79FC79EC79FC79EC79FC79EC79FC79EC79FC79EC79FC8
%C9FD56FFCFC99FC79EC19EC79EC19EC79EC19EC79EC19EC79EC19EC79EC1
%9EC79EC19EC79EC19EC79EC8A7FD5DFFCFC9C89FC79FC79EC79FC79EC79F
%C79EC79FC79EC79FC79EC79FC79EC7C7C9CAFD64FFA8CFA6C89FC89EC19E
%C79EC19EC79EC19EC79FC8A6C9C9CFFD33FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Impact
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Impact Impact
[/_Impact/Impact 0 0 0 TZ
%AI3_EndEncoding TrueType
[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal
181/mu/partialdiff/summation/product/pi/integral 189/Omega 
195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple
/_Symbol_/Symbol 0 0 0 TZ
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0.2745 0.9373 0.9412 0.149 0.6157 0 0 Xa
(New Color Swatch) Pc
0.0902 0.2863 0.8667 0.0157 0.898 0.6745 0.1216 Xa
(New Color Swatch 2) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Undo New Calligraphic Brush) (Calligraphic Brush Tool)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
1 Ap
0 O
0 0 0 1 0 0 0 Xa
0 R
0.0902 0.2863 0.8667 0.0157 0.898 0.6745 0.1216 XA
800 Ar
0 J 0 j 15 w 4 M []0 d
%AI3_Note:
0 D
1 XR
563.8916 429.1489 m
563.8916 300.3877 459.5098 196.0059 330.748 196.0059 c
201.9873 196.0059 97.6055 300.3877 97.6055 429.1489 c
97.6055 557.9102 201.9873 662.292 330.748 662.292 c
459.5098 662.292 563.8916 557.9102 563.8916 429.1489 c
b
0.2745 0.9373 0.9412 0.149 0.6157 0 0 Xa
10 w
505.748 429.1489 m
505.748 332.499 427.3984 254.1489 330.748 254.1489 c
234.0986 254.1489 155.748 332.499 155.748 429.1489 c
155.748 525.7988 234.0986 604.1489 330.748 604.1489 c
427.3984 604.1489 505.748 525.7988 505.748 429.1489 c
b
U
u
*u
0 Ap
0 0 0 1 0 0 0 Xa
1 w
%AI3_Note:<< /operation /xor /defaultFill false >>
306.001 568.75 m
306.7275 568.75 307.4546 568.75 308.1807 568.75 C
308.5444 561.4858 308.9072 554.2188 309.2705 546.9541 C
308.1304 542.6563 306.2305 539.2656 306.001 532.7871 C
306.3647 532.7871 306.7275 532.7871 307.0908 532.7871 C
313.0859 541.8145 328.2373 551.5176 339.7847 554.583 C
339.7847 545.8657 339.7847 537.145 339.7847 528.4277 C
337.8721 525.3374 338.9961 520.3057 337.6055 516.4399 c
335.9624 511.876 332.4912 507.2891 331.0664 502.2725 C
332.1563 502.2725 333.2461 502.2725 334.3359 502.2725 C
339.106 507.8306 348.8799 507.7803 358.3115 508.8115 c
391.1226 512.3994 430.3198 484.3984 443.3154 460.8604 c
447.3208 453.606 447.1953 444.3276 452.0337 437.9746 C
454.1294 439.6938 456.3433 440.3892 458.5728 439.0645 C
464.6553 437.4878 466.5474 435.3926 466.2012 427.0767 C
467.0547 425.2622 465.9634 418.1235 465.1113 415.0889 c
461.418 401.9321 458.5552 394.3652 449.854 386.7544 c
443.6719 381.3467 436.3413 382.981 435.687 371.4971 C
433.4941 368.1885 433.957 362.4229 431.3276 359.5093 c
422.6729 349.9175 387.2061 341.6455 372.4785 337.7134 c
359.8452 334.3403 342.3672 345.8032 341.9644 345.3418 C
329.353 339.1587 289.1812 334.645 275.4868 343.1626 c
271.2544 345.7949 269.6196 354.0854 265.6787 356.2397 C
262.7729 356.2397 259.8662 356.2397 256.9604 356.2397 C
253.4932 357.1772 246.707 359.4023 243.8828 361.689 c
236.7832 367.4375 235.7949 382.3867 231.895 385.6646 c
220.9951 394.8267 199.8057 404.0347 199.2012 422.7173 C
205.4824 431.0249 206.6655 448.1729 212.2788 457.5908 c
215.6616 463.2666 225.7339 476.5962 230.8052 480.4766 c
234.9038 483.6133 244.5679 487.0752 247.1523 491.3745 C
247.5156 493.917 247.8784 496.4609 248.2422 499.0034 C
251.5474 508.8799 254.3018 520.3657 259.1401 529.5176 c
264.2407 539.1675 280.3726 556.5762 289.6543 562.2114 C
295.1025 564.3911 300.5527 566.5708 306.001 568.75 C
f
*U
*u
0 0 0 0 1 1 1 Xa
1 D
331.0664 382.395 m
330.6611 380.1328 330.8027 380.2979 329.9766 379.1255 C
319.9956 371.6104 296.2935 367.52 299.4624 350.791 C
301.9458 349.6147 304.2188 348.3027 306.001 346.4316 C
318.8804 346.2793 322.3066 351.0264 329.9766 354.0605 C
334.6987 354.0605 339.4219 354.0605 344.144 354.0605 C
345.9604 356.603 347.7769 359.1465 349.5933 361.689 C
355.5962 366.1143 365.4507 368.5317 373.5684 370.4072 C
373.5684 371.4971 373.5684 372.5869 373.5684 373.6768 C
363.938 385.2285 362.4385 434.3184 382.2871 434.7051 C
382.8706 433.0537 383.0225 432.8599 383.3765 430.3462 C
375.1533 421.5635 374.4448 393.4121 381.1973 382.395 c
384.7891 376.5342 391.457 373.5718 395.3643 368.2275 C
378.4487 368.8384 359.1504 364.5972 359.4014 347.5215 C
363.3198 345.4287 368.9927 345.2114 375.748 345.3418 C
386.7417 352.376 415.6655 353.0776 422.6094 362.7788 c
438.6348 385.1685 447.7427 436.9282 431.3276 466.3096 c
424.2686 478.9448 409.2427 489.9233 395.3643 495.7339 c
366.8457 507.6733 334.9517 500.3389 312.54 488.1055 c
300.2041 481.3716 296.4512 471.9053 276.5767 471.7583 C
276.2134 472.8481 275.8501 473.938 275.4868 475.0278 C
303.9619 485.9824 328.8364 496.1665 331.0664 532.7871 C
310.1729 531.043 297.6455 503.5205 282.0259 500.0933 C
282.0259 500.8193 282.0259 501.5464 282.0259 502.2725 C
289.0845 510.6318 297.4219 528.0356 295.103 541.5054 C
292.9238 541.5054 290.7441 541.5054 288.5645 541.5054 C
282.7788 533.9419 274.1162 529.5186 268.9482 520.7993 c
263.2671 511.2148 262.4028 498.3237 255.8706 489.1948 c
253.3901 485.729 247.3672 484.1563 243.8828 481.5664 c
227.5386 469.4185 211.1465 445.8833 207.9194 420.5381 C
213.5381 416.7197 217.3013 410.0327 223.1768 406.3706 c
239.8999 395.9473 259.7222 396.5586 285.2949 396.5625 C
285.2949 396.1987 285.2949 395.8359 285.2949 395.4727 C
279.3945 391.1177 273.6392 384.7729 273.3071 374.7666 C
277.2085 370.4434 287.5049 357.6978 298.3726 364.9585 C
310.8862 369.3047 312.9795 380.062 331.0664 382.395 C
f
*U
*u
0 0 0 1 0 0 0 Xa
0 D
295.103 464.1299 m
302.7427 460.5889 312.7085 454.6997 313.6299 444.5132 C
315.4492 441.8872 314.3345 436.9634 312.54 434.7051 C
311.0811 429.5796 305.8696 422.896 300.5522 421.6279 C
300.5522 422.354 300.5522 423.0811 300.5522 423.8071 C
306.7173 427.8716 315.2139 439.606 309.2705 448.8726 c
305.3447 454.9937 293.0576 455.4263 295.103 464.1299 C
f
*U
*u
0.2745 0.9373 0.9412 0.149 0.6157 0 0 Xa
254.7808 463.04 m
260.9141 454.3301 253.9375 435.7383 248.2422 433.6157 C
246.021 431.564 244.062 431.436 239.5234 431.436 C
237.6626 434.4058 236.7598 434.1582 236.2544 439.0645 C
234.4048 441.9443 235.8398 444.8467 236.2544 448.8726 C
239.1289 450.896 239.2202 454.4424 241.7031 456.501 c
245.4067 459.5723 251.1816 459.9961 254.7808 463.04 C
f
*U
*u
0 0 0 0 1 1 1 Xa
1 D
454.2134 432.5259 m
445.7646 419.6929 441.1782 412.2363 441.1357 390.0234 C
441.8623 390.0234 442.5894 390.0234 443.3154 390.0234 C
454.4443 404.7827 461.5015 404.8438 460.7524 430.3462 C
458.2661 431.6807 458.2993 432.1313 454.2134 432.5259 C
f
*U
*u
243.8828 384.5747 m
240.6416 373.3096 254.7749 363.9531 266.7686 363.8687 C
267.3765 365.6162 267.6406 366.4883 267.8584 369.3174 C
260.8862 376.6851 257.5981 383.5996 243.8828 384.5747 C
f
*U
U
0 To
1 0 0.1618 0.9868 326.6177 226.0664 0 Tp
0 Tv
TP
-170.9362 0 Td
2 Tr
0 R
0 0 0 1 0 0 0 XA
2 w
%AI3_Note:
0 D
0 XR
%_ 0 50 XQ
/_Impact 100 100 -21.0938 Tf
0 Ts
98.6828 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ -- XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
1 Ta
0 1 2 2 3 Th
0 Tq
240 Tg
0 0 Tl
0 Tc
0 Tw
(UNLEASH) Tx 
(\r) TX 
TO
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
